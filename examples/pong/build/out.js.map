{
  "version": 3,
  "sources": ["../../../src/pool.ts", "../../../src/component.ts", "../../../src/entity.ts", "../../../src/world.ts", "../src/config.json", "../src/main.ts"],
  "sourcesContent": ["export class ObjectPool<T> {\n\tprivate reserve: T[];\n\tprivate active: T[];\n\tprivate objectConstructor: () => T;\n\n\tconstructor(objectConstructor: () => T) {\n\t\tthis.reserve = [];\n\t\tthis.active = [];\n\t\tthis.objectConstructor = objectConstructor;\n\t}\n\n\taddObj(): T {\n\t\tthis.active.push(this.reserve.pop() ?? this.objectConstructor());\n\t\treturn this.active[this.active.length - 1];\n\t}\n\n\tfindIndex(object: T): number {\n\t\treturn this.active.findIndex((v) => v == object);\n\t}\n\n\tremoveObj(index: number): T {\n\t\tconst removed = this.active[index];\n\t\t// swap with last to maintain packed\n\t\tthis.active[index] = this.active[this.active.length - 1];\n\t\tthis.active.length--;\n\t\tthis.reserve.push(removed);\n\t\treturn removed;\n\t}\n\n\tgetObj(index: number): T {\n\t\treturn this.active[index];\n\t}\n\n\tlen(): number {\n\t\treturn this.active.length;\n\t}\n}\n", "import { entityT } from \"./entity.ts\";\nimport { ObjectPool } from \"./pool.ts\";\n\nexport class Component {\n\tstatic id: number = -1;\n\towner: entityT = -1;\n}\n\nexport class ComponentManager {\n\tpools: ObjectPool<InstanceType<typeof Component>>[] = [];\n\n\tregister<T extends typeof Component>(\n\t\tcomponent: T,\n\t) {\n\t\tcomponent.id == -1 && (component.id = this.pools.length);\n\t\tthis.pools[component.id] ??= new ObjectPool(() => new component());\n\t}\n\n\tisRegistered<T extends typeof Component>(\n\t\tcomponent: T,\n\t): boolean {\n\t\treturn !!(this.pools[component.id]);\n\t}\n\n\tadd<T extends typeof Component>(component: T): InstanceType<T> {\n\t\treturn this.pools[component.id].addObj() as InstanceType<T>;\n\t}\n\n\tdelete<T extends typeof Component>(\n\t\tcomponent: T,\n\t\tindex: number,\n\t): InstanceType<T> {\n\t\treturn this.pools[component.id].removeObj(index) as InstanceType<T>;\n\t}\n\n\tget<T extends typeof Component>(\n\t\tcomponent: T,\n\t\tindex: number,\n\t): InstanceType<T> {\n\t\treturn this.pools[component.id].getObj(index) as InstanceType<T>;\n\t}\n\n\tlen<T extends typeof Component>(component: T): number {\n\t\treturn this.pools[component.id].len();\n\t}\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport type entityT = number;\n\nexport class EntityManager {\n  nextId = 0;\n  pool = new ObjectPool<entityT>(() => this.nextId++);\n\n  add(): entityT {\n    return this.pool.addObj();\n  }\n\n  findIndex(entity: entityT): number {\n    return this.pool.findIndex(entity);\n  }\n\n  delete(index: number): entityT {\n    return this.pool.removeObj(index);\n  }\n}\n", "import { Component, ComponentManager } from \"./component.ts\";\nimport { EntityManager, entityT } from \"./entity.ts\";\n\nexport type queryT = Partial<\n\tRecord<\"and\" | \"or\" | \"not\", (typeof Component)[]>\n>;\n\nexport class World {\n\tprivate static indices: number[][] = [];\n\tprivate static components: ComponentManager = new ComponentManager();\n\tprivate static entities: EntityManager = new EntityManager();\n\tprivate static entityMasks: number[] = [];\n\tprivate static archetypes: Record<number, Set<entityT>> = { 0: new Set() };\n\tprivate static worlds: World[] = [];\n\n\ttime = 0;\n\tdt = 0;\n\tlocalEntities: Set<entityT> = new Set();\n\n\tconstructor() {\n\t\tWorld.worlds.push(this);\n\t}\n\n\tstatic createEntity(): entityT {\n\t\tconst entity = World.entities.add();\n\t\tWorld.indices[entity] = [];\n\t\tWorld.entityMasks[entity] = 0;\n\t\tWorld.archetypes[World.entityMasks[entity]].add(entity);\n\t\treturn entity;\n\t}\n\n\tstatic deleteEntity(entity: entityT) {\n\t\tfor (const world of World.worlds) {\n\t\t\tworld.removeEntity(entity);\n\t\t}\n\t\tfor (let i = 0, l = World.components.pools.length; i < l; i++) {\n\t\t\tif (!(World.entityMasks[entity] & 1 << i)) continue;\n\t\t\tconst comp = World.components.pools[i].removeObj(\n\t\t\t\tWorld.indices[entity][i],\n\t\t\t).constructor.prototype as typeof Component;\n\t\t\tWorld.indices[World.components.get(comp, entity).owner][i] =\n\t\t\t\tWorld.indices[entity][i];\n\t\t}\n\t\tWorld.archetypes[World.entityMasks[entity]].delete(entity);\n\t\tWorld.entityMasks[entity] = 0;\n\t\tWorld.entities.delete(World.entities.findIndex(entity));\n\t}\n\n\taddEntity(entity?: entityT): entityT {\n\t\tentity ??= World.createEntity();\n\t\tthis.localEntities.add(entity);\n\t\treturn entity;\n\t}\n\n\tremoveEntity(entity: entityT) {\n\t\tthis.localEntities.delete(entity);\n\t}\n\n\tentityExists(entity: entityT) {\n\t\tif (!this.localEntities.has(entity)) {\n\t\t\tthrow new Error(`Entity ${entity} does not exist.`);\n\t\t}\n\t}\n\n\tstatic componentExists<T extends typeof Component>(component: T) {\n\t\tif (!World.components.isRegistered(component)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component ${component.name} is not registered.`,\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic registerComponent<T extends typeof Component>(\n\t\tcomponent: T,\n\t): typeof World {\n\t\tWorld.components.register(component);\n\t\treturn World;\n\t}\n\n\tstatic hasComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): boolean {\n\t\treturn (World.entityMasks[entity] & 1 << component.id) > 0;\n\t}\n\n\tstatic addComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): InstanceType<T> {\n\t\tWorld.componentExists(component);\n\t\tif (World.hasComponent(entity, component)) {\n\t\t\tthrow new Error(`Entity ${entity} already had this component.`);\n\t\t}\n\t\tWorld.archetypes[World.entityMasks[entity]].delete(entity);\n\t\tWorld.entityMasks[entity] |= 1 << component.id;\n\t\tWorld.archetypes[World.entityMasks[entity]] ??= new Set();\n\t\tWorld.archetypes[World.entityMasks[entity]].add(entity);\n\t\tWorld.indices[entity][component.id] = World.components.len(component);\n\t\tconst comp = World.components.add(component);\n\t\tcomp.owner = entity;\n\t\treturn comp;\n\t}\n\n\tstatic removeComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): InstanceType<T> {\n\t\tWorld.componentExists(component);\n\t\tif (!World.hasComponent(entity, component)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Entity ${entity} does not have component ${component.name}.`,\n\t\t\t);\n\t\t}\n\t\tWorld.archetypes[World.entityMasks[entity]].delete(entity);\n\t\tWorld.entityMasks[entity] &= ~(1 << component.id);\n\t\tWorld.archetypes[World.entityMasks[entity]] ??= new Set();\n\t\tWorld.archetypes[World.entityMasks[entity]].add(entity);\n\t\tconst removed = World.components.delete(\n\t\t\tcomponent,\n\t\t\tWorld.indices[entity][component.id],\n\t\t);\n\t\tconst backEntity = World.components.get(\n\t\t\tcomponent,\n\t\t\tWorld.indices[entity][component.id],\n\t\t).owner;\n\t\tWorld.indices[backEntity][component.id] =\n\t\t\tWorld.indices[entity][component.id];\n\t\treturn removed;\n\t}\n\n\tgetComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): InstanceType<T> {\n\t\tthis.entityExists(entity);\n\t\tWorld.componentExists(component);\n\t\tif (!World.hasComponent(entity, component)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Entity ${entity} does not have component ${component.name}.`,\n\t\t\t);\n\t\t}\n\t\treturn World.components.get(\n\t\t\tcomponent,\n\t\t\tWorld.indices[entity][component.id],\n\t\t);\n\t}\n\n\tupdate(...funcs: ((world: World, dtSecond: number) => void)[]) {\n\t\tfor (const func of funcs) {\n\t\t\tfunc(this, this.dt / 1000);\n\t\t}\n\t\tthis.dt = performance.now() - this.time;\n\t\tthis.time += this.dt;\n\t}\n\n\tquery(query: queryT): entityT[] {\n\t\tlet andMask = 0, orMask = 0, notMask = 0;\n\t\tif (query.and) {\n\t\t\tfor (let i = 0, l = query.and.length; i < l; i++) {\n\t\t\t\tandMask |= 1 << query.and[i].id;\n\t\t\t}\n\t\t}\n\t\tif (query.or) {\n\t\t\tfor (let i = 0, l = query.or.length; i < l; i++) {\n\t\t\t\torMask |= 1 << query.or[i].id;\n\t\t\t}\n\t\t}\n\t\tif (query.not) {\n\t\t\tfor (let i = 0, l = query.not.length; i < l; i++) {\n\t\t\t\tnotMask |= 1 << query.not[i].id;\n\t\t\t}\n\t\t}\n\t\tconst res = [];\n\t\tfor (const archtype in World.archetypes) {\n\t\t\tconst a = parseInt(archtype);\n\t\t\tif (\n\t\t\t\t(a & andMask) == andMask && (a | orMask) > 0 &&\n\t\t\t\t(a & notMask) == 0\n\t\t\t) {\n\t\t\t\tres.push(\n\t\t\t\t\t...this.localEntities.intersection(\n\t\t\t\t\t\tWorld.archetypes[archtype],\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}\n", "{\n\t\"playArea\": {\n\t\t\"width\": 600,\n\t\t\"height\": 400\n\t},\n\t\"paddle\": {\n\t\t\"speed\": 200,\n\t\t\"width\": 10,\n\t\t\"height\": 70,\n\t\t\"padding\": 0.1\n\t},\n\t\"ball\": {\n\t\t\"speed\": 200,\n\t\t\"width\": 10,\n\t\t\"height\": 10\n\t}\n}\n", "import { Component, entityT, World } from \"../../../src/index.ts\";\nimport { default as config } from \"./config.json\" with { type: \"json\" };\n\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas?.getContext(\"2d\");\n\n// components\nclass Rect extends Component {\n\twidth = 1;\n\theight = 1;\n\tcolor = \"white\";\n}\nclass Position extends Component {\n\tx = 0;\n\ty = 0;\n}\nclass Velocity extends Component {\n\tx = 0;\n\ty = 0;\n}\nclass Text extends Component {\n\tcontent = \"\";\n\tfontSize = 20;\n\tmargin = 3;\n\tcolor = \"black\";\n\tbackgroundColor = \"white\";\n}\nclass PlayerControl extends Component {\n\tisLeft = true;\n}\n\n// world\nconst w = new World();\n\nWorld\n\t.registerComponent(Rect)\n\t.registerComponent(Velocity)\n\t.registerComponent(Position)\n\t.registerComponent(Text)\n\t.registerComponent(PlayerControl);\n\n// systems\nfunction handlePlayerControl(world: World) {\n\tworld.query({ and: [Velocity, PlayerControl] }).forEach((e) => {\n\t\tconst v = world.getComponent(e, Velocity);\n\t\tconst pc = world.getComponent(e, PlayerControl);\n\t\tv.y = 0;\n\t\tif (pc.isLeft) {\n\t\t\tif (keys[\"w\"]) {\n\t\t\t\tv.y += -config.paddle.speed;\n\t\t\t}\n\t\t\tif (keys[\"s\"]) {\n\t\t\t\tv.y += config.paddle.speed;\n\t\t\t}\n\t\t} else {\n\t\t\tif (keys[\"ArrowUp\"]) {\n\t\t\t\tv.y += -config.paddle.speed;\n\t\t\t}\n\t\t\tif (keys[\"ArrowDown\"]) {\n\t\t\t\tv.y += config.paddle.speed;\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction drawBackgound() {\n\tif (!ctx || !canvas) return;\n\tctx.fillRect(0, 0, canvas.width, canvas.height);\n}\n\nfunction move(world: World, dt: number) {\n\tconst ballV = world.getComponent(ball, Velocity);\n\tballV.x += dt;\n\tballV.y += dt;\n\tworld.query({ and: [Position, Velocity] }).forEach((e) => {\n\t\tconst p = world.getComponent(e, Position);\n\t\tconst v = world.getComponent(e, Velocity);\n\t\tp.x += v.x * dt;\n\t\tp.y += v.y * dt;\n\t});\n}\n\nfunction drawRects(world: World) {\n\tif (!ctx) return;\n\tworld.query({ and: [Rect, Position] }).forEach((e) => {\n\t\tconst p = world.getComponent(e, Position);\n\t\tconst r = world.getComponent(e, Rect);\n\t\tconst old = ctx.fillStyle;\n\t\tctx.fillStyle = r.color;\n\t\tctx.fillRect(\n\t\t\tMath.floor(p.x - r.width * 0.5),\n\t\t\tMath.floor(p.y - r.height * 0.5),\n\t\t\tr.width,\n\t\t\tr.height,\n\t\t);\n\t\tctx.fillStyle = old;\n\t});\n}\n\nfunction drawTexts(world: World, dt: number) {\n\tif (!ctx) return;\n\tworld.query({ and: [Text, Position] }).forEach((e) => {\n\t\tconst t = world.getComponent(e, Text);\n\t\tconst p = world.getComponent(e, Position);\n\n\t\tctx.font = `${t.fontSize}px serif`;\n\t\tconst txtMetric = ctx.measureText(t.content);\n\t\tconst old = ctx.fillStyle;\n\t\tctx.fillStyle = t.backgroundColor;\n\t\tctx.fillRect(\n\t\t\tp.x,\n\t\t\tp.y,\n\t\t\tt.margin * 2 + txtMetric.width,\n\t\t\tt.margin * 2 + txtMetric.fontBoundingBoxAscent,\n\t\t);\n\t\tctx.fillStyle = t.color;\n\t\tctx.fillText(\n\t\t\tt.content,\n\t\t\tp.x + t.margin,\n\t\t\tp.y + t.margin + txtMetric.fontBoundingBoxAscent,\n\t\t);\n\t\tctx.fillStyle = old;\n\t});\n}\n\nfunction checkCollision(world: World) {\n\tconst entities = world.query({\n\t\tand: [Position, Rect],\n\t});\n\tentities.forEach((e) => {\n\t\tconst p = world.getComponent(e, Position);\n\t\tconst r = world.getComponent(e, Rect);\n\t\tentities.forEach((other) => {\n\t\t\tif (other == e) return;\n\t\t\tconst p1 = world.getComponent(other, Position);\n\t\t\tconst r1 = world.getComponent(other, Rect);\n\t\t\tif (\n\t\t\t\t(p.x - p1.x) ** 2 < ((r.width + r1.width) * 0.5) ** 2 &&\n\t\t\t\t(p.y - p1.y) ** 2 < ((r.height + r1.height) * 0.5) ** 2\n\t\t\t) {\n\t\t\t\tonCollision(world, e, other);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction checkGoal(world: World) {\n\tconst p = world.getComponent(ball, Position);\n\tconst r = world.getComponent(ball, Rect);\n\tif (p.x - r.width > config.playArea.width) {\n\t\tscores.left++;\n\t\tonGoal();\n\t}\n\tif (p.x + r.width < 0) {\n\t\tscores.right++;\n\t\tonGoal();\n\t}\n}\n\n// entity\nfunction addPlayerPaddle(\n\tx: number,\n\ty: number,\n\tisLeft: boolean,\n): entityT {\n\tconst e = addRect(x, y, config.paddle.width, config.paddle.height);\n\tconst pc = World.addComponent(e, PlayerControl);\n\tpc.isLeft = isLeft;\n\treturn w.addEntity(e);\n}\n\nfunction addRect(\n\tx: number,\n\ty: number,\n\twidth: number,\n\theight: number,\n\tcolor: string = \"white\",\n) {\n\tconst e = World.createEntity();\n\tconst p = World.addComponent(e, Position);\n\tconst v = World.addComponent(e, Velocity);\n\tconst r = World.addComponent(e, Rect);\n\tp.x = x;\n\tp.y = y;\n\tr.width = width;\n\tr.height = height;\n\tr.color = color;\n\treturn w.addEntity(e);\n}\n\nfunction addText(\n\ttxt: string,\n\tx: number = 0,\n\ty: number = 0,\n\ttxtColor: string = \"black\",\n\tfontSize: number = 20,\n\tbackgroundColor: string = \"rgba(0,0,0,0)\",\n): entityT {\n\tconst e = World.createEntity();\n\tconst t = World.addComponent(e, Text);\n\tconst p = World.addComponent(e, Position);\n\tt.content = txt;\n\tt.color = txtColor;\n\tt.fontSize = fontSize;\n\tt.backgroundColor = backgroundColor;\n\tp.x = x;\n\tp.y = y;\n\treturn w.addEntity(e);\n}\n\nif (canvas) {\n\tcanvas.width = config.playArea.width;\n\tcanvas.height = config.playArea.height;\n\t//canvas.style.imageRendering = \"pixelated\";\n}\n\nconst keys: Record<KeyboardEvent[\"key\"], boolean> = {};\nglobalThis.onkeydown = (e) => {\n\tkeys[e.key] = true;\n};\nglobalThis.onkeyup = (e) => {\n\tdelete keys[e.key];\n};\n\n//bottom wall\naddRect(\n\tconfig.playArea.width * 0.5,\n\tconfig.playArea.height * 0,\n\tconfig.playArea.width,\n\t10,\n);\n//top wall\naddRect(\n\tconfig.playArea.width * 0.5,\n\tconfig.playArea.height * 1,\n\tconfig.playArea.width,\n\t10,\n);\n\nconst ball = addRect(\n\tconfig.playArea.width * 0.5,\n\tconfig.playArea.height * 0.5,\n\tconfig.ball.width,\n\tconfig.ball.height,\n);\n\nconst playerLeft = addPlayerPaddle(\n\tconfig.playArea.width * config.paddle.padding,\n\tconfig.playArea.height * 0.5,\n\ttrue,\n);\nconst playerRight = addPlayerPaddle(\n\tconfig.playArea.width * (1 - config.paddle.padding),\n\tconfig.playArea.height * 0.5,\n\tfalse,\n);\n\nfunction reset() {\n\tconst ballV = w.getComponent(ball, Velocity);\n\tconst ballP = w.getComponent(ball, Position);\n\tballP.x = config.playArea.width * 0.5;\n\tballP.y = config.playArea.height * 0.5;\n\tballV.x = config.ball.speed;\n\tballV.y = 0;\n\tlet rad = Math.random() * 40 / 180 * Math.PI;\n\trad *= Math.random() > 0.5 ? 1 : -1;\n\trad += Math.random() > 0.5 ? Math.PI : 0;\n\trotate(ballV, rad);\n\tconst pLP = w.getComponent(playerLeft, Position);\n\tconst pRP = w.getComponent(playerRight, Position);\n\tpLP.y = config.playArea.height * 0.5;\n\tpRP.y = config.playArea.height * 0.5;\n}\n\nfunction rotate(vec2: { x: number; y: number }, rad: number) {\n\tconst s = Math.sin(rad);\n\tconst c = Math.cos(rad);\n\tconst x = vec2.x;\n\tconst y = vec2.y;\n\tvec2.x = c * x - s * y;\n\tvec2.y = s * x + c * y;\n}\n\nfunction onGoal() {\n\tconst t = w.getComponent(goalTexts, Text);\n\tt.content = `${scores.left} : ${scores.right}`;\n\treset();\n}\n\nfunction onCollision(world: World, e: entityT, other: entityT) {\n\tconst p = world.getComponent(e, Position);\n\tconst p1 = world.getComponent(other, Position);\n\tconst r = world.getComponent(e, Rect);\n\tconst r1 = world.getComponent(other, Rect);\n\tconst v = world.getComponent(e, Velocity);\n\tconst v1 = world.getComponent(other, Velocity);\n\n\tconst vMag = (v.x ** 2 + v.y ** 2) ** 0.5;\n\tconst vNx = v.x / vMag, vNy = v.y / vMag;\n\t//p.x+vNx*t=someX,t=(someX-p.x)/vNx\n\tlet t = 0;\n\tif (vNx != 0) {\n\t\tt = (p1.x - (r1.width + r.width) * 0.5 - p.x) / vNx;\n\t\tif (\n\t\t\tp.x < p1.x && t < 0 &&\n\t\t\tp.y + t * vNy < p1.y + (r1.height + r.height) * 0.5 &&\n\t\t\tp.y + t * vNy > p1.y - (r1.height + r.height) * 0.5\n\t\t) {\n\t\t\tp.x += t * vNx;\n\t\t\tp.y += t * vNy;\n\t\t\tv.x > 0 && (v.x *= -1);\n\t\t\tv.y += v1.y;\n\t\t}\n\t\tt = (p1.x + (r1.width + r.width) * 0.5 - p.x) / vNx;\n\t\tif (\n\t\t\tp.x > p1.x && t < 0 &&\n\t\t\tp.y + t * vNy < p1.y + (r1.height + r.height) * 0.5 &&\n\t\t\tp.y + t * vNy > p1.y - (r1.height + r.height) * 0.5\n\t\t) {\n\t\t\tp.x += t * vNx;\n\t\t\tp.y += t * vNy;\n\t\t\tv.x < 0 && (v.x *= -1);\n\t\t\tv.y += v1.y;\n\t\t}\n\t}\n\tif (vNy != 0) {\n\t\tt = (p1.y - (r1.height + r.height) * 0.5 - p.y) / vNy;\n\t\tif (\n\t\t\tp.y < p1.y && t < 0 &&\n\t\t\tp.x + t * vNx < p1.x + (r1.width + r.width) * 0.5 &&\n\t\t\tp.x + t * vNx > p1.x - (r1.width + r.width) * 0.5\n\t\t) {\n\t\t\tp.x += t * vNx;\n\t\t\tp.y += t * vNy;\n\t\t\tv.y > 0 && (v.y *= -1);\n\t\t}\n\t\tt = (p1.y + (r1.height + r.height) * 0.5 - p.y) / vNy;\n\t\tif (\n\t\t\tp.y > p1.y && t < 0 &&\n\t\t\tp.x + t * vNx < p1.x + (r1.width + r.width) * 0.5 &&\n\t\t\tp.x + t * vNx > p1.x - (r1.width + r.width) * 0.5\n\t\t) {\n\t\t\tp.x += t * vNx;\n\t\t\tp.y += t * vNy;\n\t\t\tv.y < 0 && (v.y *= -1);\n\t\t}\n\t}\n}\n\nconst scores = { left: 0, right: 0 };\n\nconst goalTexts = addText(`${scores.left} : ${scores.right}`);\nconst t = w.getComponent(goalTexts, Text);\nt.color = \"white\";\nt.fontSize = 40;\n\nreset();\n\n(function update() {\n\tw.update(\n\t\tdrawBackgound,\n\t\tdrawRects,\n\t\tdrawTexts,\n\t\tmove,\n\t\thandlePlayerControl,\n\t\tcheckCollision,\n\t\tcheckGoal,\n\t);\n\trequestAnimationFrame(update);\n})();\n"],
  "mappings": "MAAO,IAAMA,EAAN,KAAoB,CAClB,QACA,OACA,kBAER,YAAYC,EAA4B,CACvC,KAAK,QAAU,CAAC,EAChB,KAAK,OAAS,CAAC,EACf,KAAK,kBAAoBA,CAC1B,CAEA,QAAY,CACX,YAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,GAAK,KAAK,kBAAkB,CAAC,EACxD,KAAK,OAAO,KAAK,OAAO,OAAS,CAAC,CAC1C,CAEA,UAAUC,EAAmB,CAC5B,OAAO,KAAK,OAAO,UAAWC,GAAMA,GAAKD,CAAM,CAChD,CAEA,UAAUE,EAAkB,CAC3B,IAAMC,EAAU,KAAK,OAAOD,CAAK,EAEjC,YAAK,OAAOA,CAAK,EAAI,KAAK,OAAO,KAAK,OAAO,OAAS,CAAC,EACvD,KAAK,OAAO,SACZ,KAAK,QAAQ,KAAKC,CAAO,EAClBA,CACR,CAEA,OAAOD,EAAkB,CACxB,OAAO,KAAK,OAAOA,CAAK,CACzB,CAEA,KAAc,CACb,OAAO,KAAK,OAAO,MACpB,CACD,ECjCO,IAAME,EAAN,KAAgB,CACtB,OAAO,GAAa,GACpB,MAAiB,EAClB,EAEaC,EAAN,KAAuB,CAC7B,MAAsD,CAAC,EAEvD,SACCC,EACC,CACDA,EAAU,IAAM,KAAOA,EAAU,GAAK,KAAK,MAAM,QACjD,KAAK,MAAMA,EAAU,EAAE,IAAM,IAAIC,EAAW,IAAM,IAAID,CAAW,CAClE,CAEA,aACCA,EACU,CACV,MAAO,CAAC,CAAE,KAAK,MAAMA,EAAU,EAAE,CAClC,CAEA,IAAgCA,EAA+B,CAC9D,OAAO,KAAK,MAAMA,EAAU,EAAE,EAAE,OAAO,CACxC,CAEA,OACCA,EACAE,EACkB,CAClB,OAAO,KAAK,MAAMF,EAAU,EAAE,EAAE,UAAUE,CAAK,CAChD,CAEA,IACCF,EACAE,EACkB,CAClB,OAAO,KAAK,MAAMF,EAAU,EAAE,EAAE,OAAOE,CAAK,CAC7C,CAEA,IAAgCF,EAAsB,CACrD,OAAO,KAAK,MAAMA,EAAU,EAAE,EAAE,IAAI,CACrC,CACD,ECzCO,IAAMG,EAAN,KAAoB,CACzB,OAAS,EACT,KAAO,IAAIC,EAAoB,IAAM,KAAK,QAAQ,EAElD,KAAe,CACb,OAAO,KAAK,KAAK,OAAO,CAC1B,CAEA,UAAUC,EAAyB,CACjC,OAAO,KAAK,KAAK,UAAUA,CAAM,CACnC,CAEA,OAAOC,EAAwB,CAC7B,OAAO,KAAK,KAAK,UAAUA,CAAK,CAClC,CACF,ECZO,IAAMC,EAAN,MAAMC,CAAM,CAClB,OAAe,QAAsB,CAAC,EACtC,OAAe,WAA+B,IAAIC,EAClD,OAAe,SAA0B,IAAIC,EAC7C,OAAe,YAAwB,CAAC,EACxC,OAAe,WAA2C,CAAE,EAAG,IAAI,GAAM,EACzE,OAAe,OAAkB,CAAC,EAElC,KAAO,EACP,GAAK,EACL,cAA8B,IAAI,IAElC,aAAc,CACbF,EAAM,OAAO,KAAK,IAAI,CACvB,CAEA,OAAO,cAAwB,CAC9B,IAAMG,EAASH,EAAM,SAAS,IAAI,EAClC,OAAAA,EAAM,QAAQG,CAAM,EAAI,CAAC,EACzBH,EAAM,YAAYG,CAAM,EAAI,EAC5BH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,IAAIA,CAAM,EAC/CA,CACR,CAEA,OAAO,aAAaA,EAAiB,CACpC,QAAWC,KAASJ,EAAM,OACzBI,EAAM,aAAaD,CAAM,EAE1B,QAASE,EAAI,EAAGC,EAAIN,EAAM,WAAW,MAAM,OAAQK,EAAIC,EAAGD,IAAK,CAC9D,GAAI,EAAEL,EAAM,YAAYG,CAAM,EAAI,GAAKE,GAAI,SAC3C,IAAME,EAAOP,EAAM,WAAW,MAAMK,CAAC,EAAE,UACtCL,EAAM,QAAQG,CAAM,EAAEE,CAAC,CACxB,EAAE,YAAY,UACdL,EAAM,QAAQA,EAAM,WAAW,IAAIO,EAAMJ,CAAM,EAAE,KAAK,EAAEE,CAAC,EACxDL,EAAM,QAAQG,CAAM,EAAEE,CAAC,CACzB,CACAL,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,OAAOA,CAAM,EACzDH,EAAM,YAAYG,CAAM,EAAI,EAC5BH,EAAM,SAAS,OAAOA,EAAM,SAAS,UAAUG,CAAM,CAAC,CACvD,CAEA,UAAUA,EAA2B,CACpC,OAAAA,IAAWH,EAAM,aAAa,EAC9B,KAAK,cAAc,IAAIG,CAAM,EACtBA,CACR,CAEA,aAAaA,EAAiB,CAC7B,KAAK,cAAc,OAAOA,CAAM,CACjC,CAEA,aAAaA,EAAiB,CAC7B,GAAI,CAAC,KAAK,cAAc,IAAIA,CAAM,EACjC,MAAM,IAAI,MAAM,UAAUA,CAAM,kBAAkB,CAEpD,CAEA,OAAO,gBAA4CK,EAAc,CAChE,GAAI,CAACR,EAAM,WAAW,aAAaQ,CAAS,EAC3C,MAAM,IAAI,MACT,aAAaA,EAAU,IAAI,qBAC5B,CAEF,CAEA,OAAO,kBACNA,EACe,CACf,OAAAR,EAAM,WAAW,SAASQ,CAAS,EAC5BR,CACR,CAEA,OAAO,aACNG,EACAK,EACU,CACV,OAAQR,EAAM,YAAYG,CAAM,EAAI,GAAKK,EAAU,IAAM,CAC1D,CAEA,OAAO,aACNL,EACAK,EACkB,CAElB,GADAR,EAAM,gBAAgBQ,CAAS,EAC3BR,EAAM,aAAaG,EAAQK,CAAS,EACvC,MAAM,IAAI,MAAM,UAAUL,CAAM,8BAA8B,EAE/DH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,OAAOA,CAAM,EACzDH,EAAM,YAAYG,CAAM,GAAK,GAAKK,EAAU,GAC5CR,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,IAAM,IAAI,IACpDH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,IAAIA,CAAM,EACtDH,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,EAAIR,EAAM,WAAW,IAAIQ,CAAS,EACpE,IAAMD,EAAOP,EAAM,WAAW,IAAIQ,CAAS,EAC3C,OAAAD,EAAK,MAAQJ,EACNI,CACR,CAEA,OAAO,gBACNJ,EACAK,EACkB,CAElB,GADAR,EAAM,gBAAgBQ,CAAS,EAC3B,CAACR,EAAM,aAAaG,EAAQK,CAAS,EACxC,MAAM,IAAI,MACT,UAAUL,CAAM,4BAA4BK,EAAU,IAAI,GAC3D,EAEDR,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,OAAOA,CAAM,EACzDH,EAAM,YAAYG,CAAM,GAAK,EAAE,GAAKK,EAAU,IAC9CR,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,IAAM,IAAI,IACpDH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,IAAIA,CAAM,EACtD,IAAMM,EAAUT,EAAM,WAAW,OAChCQ,EACAR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,CACnC,EACME,EAAaV,EAAM,WAAW,IACnCQ,EACAR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,CACnC,EAAE,MACF,OAAAR,EAAM,QAAQU,CAAU,EAAEF,EAAU,EAAE,EACrCR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,EAC5BC,CACR,CAEA,aACCN,EACAK,EACkB,CAGlB,GAFA,KAAK,aAAaL,CAAM,EACxBH,EAAM,gBAAgBQ,CAAS,EAC3B,CAACR,EAAM,aAAaG,EAAQK,CAAS,EACxC,MAAM,IAAI,MACT,UAAUL,CAAM,4BAA4BK,EAAU,IAAI,GAC3D,EAED,OAAOR,EAAM,WAAW,IACvBQ,EACAR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,CACnC,CACD,CAEA,UAAUG,EAAqD,CAC9D,QAAWC,KAAQD,EAClBC,EAAK,KAAM,KAAK,GAAK,GAAI,EAE1B,KAAK,GAAK,YAAY,IAAI,EAAI,KAAK,KACnC,KAAK,MAAQ,KAAK,EACnB,CAEA,MAAMC,EAA0B,CAC/B,IAAIC,EAAU,EAAGC,EAAS,EAAGC,EAAU,EACvC,GAAIH,EAAM,IACT,QAASR,EAAI,EAAGC,EAAIO,EAAM,IAAI,OAAQR,EAAIC,EAAGD,IAC5CS,GAAW,GAAKD,EAAM,IAAIR,CAAC,EAAE,GAG/B,GAAIQ,EAAM,GACT,QAASR,EAAI,EAAGC,EAAIO,EAAM,GAAG,OAAQR,EAAIC,EAAGD,IAC3CU,GAAU,GAAKF,EAAM,GAAGR,CAAC,EAAE,GAG7B,GAAIQ,EAAM,IACT,QAASR,EAAI,EAAGC,EAAIO,EAAM,IAAI,OAAQR,EAAIC,EAAGD,IAC5CW,GAAW,GAAKH,EAAM,IAAIR,CAAC,EAAE,GAG/B,IAAMY,EAAM,CAAC,EACb,QAAWC,KAAYlB,EAAM,WAAY,CACxC,IAAM,EAAI,SAASkB,CAAQ,GAEzB,EAAIJ,IAAYA,IAAY,EAAIC,GAAU,IAC1C,EAAIC,IAAY,GAEjBC,EAAI,KACH,GAAG,KAAK,cAAc,aACrBjB,EAAM,WAAWkB,CAAQ,CAC1B,CACD,CAEF,CACA,OAAOD,CACR,CACD,EC7LA,IAAAE,EAAA,CACC,SAAY,CACX,MAAS,IACT,OAAU,GACX,EACA,OAAU,CACT,MAAS,IACT,MAAS,GACT,OAAU,GACV,QAAW,EACZ,EACA,KAAQ,CACP,MAAS,IACT,MAAS,GACT,OAAU,EACX,CACD,ECbA,IAAMC,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAMD,GAAQ,WAAW,IAAI,EAG7BE,EAAN,cAAmBC,CAAU,CAC5B,MAAQ,EACR,OAAS,EACT,MAAQ,OACT,EACMC,EAAN,cAAuBD,CAAU,CAChC,EAAI,EACJ,EAAI,CACL,EACME,EAAN,cAAuBF,CAAU,CAChC,EAAI,EACJ,EAAI,CACL,EACMG,EAAN,cAAmBH,CAAU,CAC5B,QAAU,GACV,SAAW,GACX,OAAS,EACT,MAAQ,QACR,gBAAkB,OACnB,EACMI,EAAN,cAA4BJ,CAAU,CACrC,OAAS,EACV,EAGMK,EAAI,IAAIC,EAEdA,EACE,kBAAkBP,CAAI,EACtB,kBAAkBG,CAAQ,EAC1B,kBAAkBD,CAAQ,EAC1B,kBAAkBE,CAAI,EACtB,kBAAkBC,CAAa,EAGjC,SAASG,EAAoBC,EAAc,CAC1CA,EAAM,MAAM,CAAE,IAAK,CAACN,EAAUE,CAAa,CAAE,CAAC,EAAE,QAASK,GAAM,CAC9D,IAAMC,EAAIF,EAAM,aAAaC,EAAGP,CAAQ,EAClCS,EAAKH,EAAM,aAAaC,EAAGL,CAAa,EAC9CM,EAAE,EAAI,EACFC,EAAG,QACFC,EAAK,IACRF,EAAE,GAAK,CAACG,EAAO,OAAO,OAEnBD,EAAK,IACRF,EAAE,GAAKG,EAAO,OAAO,SAGlBD,EAAK,UACRF,EAAE,GAAK,CAACG,EAAO,OAAO,OAEnBD,EAAK,YACRF,EAAE,GAAKG,EAAO,OAAO,OAGxB,CAAC,CACF,CAEA,SAASC,GAAgB,CACpB,CAAChB,GAAO,CAACD,GACbC,EAAI,SAAS,EAAG,EAAGD,EAAO,MAAOA,EAAO,MAAM,CAC/C,CAEA,SAASkB,EAAKP,EAAcQ,EAAY,CACvC,IAAMC,EAAQT,EAAM,aAAaU,EAAMhB,CAAQ,EAC/Ce,EAAM,GAAKD,EACXC,EAAM,GAAKD,EACXR,EAAM,MAAM,CAAE,IAAK,CAACP,EAAUC,CAAQ,CAAE,CAAC,EAAE,QAASO,GAAM,CACzD,IAAMU,EAAIX,EAAM,aAAaC,EAAGR,CAAQ,EAClCS,EAAIF,EAAM,aAAaC,EAAGP,CAAQ,EACxCiB,EAAE,GAAKT,EAAE,EAAIM,EACbG,EAAE,GAAKT,EAAE,EAAIM,CACd,CAAC,CACF,CAEA,SAASI,EAAUZ,EAAc,CAC3BV,GACLU,EAAM,MAAM,CAAE,IAAK,CAACT,EAAME,CAAQ,CAAE,CAAC,EAAE,QAASQ,GAAM,CACrD,IAAMU,EAAIX,EAAM,aAAaC,EAAGR,CAAQ,EAClCoB,EAAIb,EAAM,aAAaC,EAAGV,CAAI,EAC9BuB,EAAMxB,EAAI,UAChBA,EAAI,UAAYuB,EAAE,MAClBvB,EAAI,SACH,KAAK,MAAMqB,EAAE,EAAIE,EAAE,MAAQ,EAAG,EAC9B,KAAK,MAAMF,EAAE,EAAIE,EAAE,OAAS,EAAG,EAC/BA,EAAE,MACFA,EAAE,MACH,EACAvB,EAAI,UAAYwB,CACjB,CAAC,CACF,CAEA,SAASC,EAAUf,EAAcQ,EAAY,CACvClB,GACLU,EAAM,MAAM,CAAE,IAAK,CAACL,EAAMF,CAAQ,CAAE,CAAC,EAAE,QAASQ,GAAM,CACrD,IAAMe,EAAIhB,EAAM,aAAaC,EAAGN,CAAI,EAC9BgB,EAAIX,EAAM,aAAaC,EAAGR,CAAQ,EAExCH,EAAI,KAAO,GAAG0B,EAAE,QAAQ,WACxB,IAAMC,EAAY3B,EAAI,YAAY0B,EAAE,OAAO,EACrCF,EAAMxB,EAAI,UAChBA,EAAI,UAAY0B,EAAE,gBAClB1B,EAAI,SACHqB,EAAE,EACFA,EAAE,EACFK,EAAE,OAAS,EAAIC,EAAU,MACzBD,EAAE,OAAS,EAAIC,EAAU,qBAC1B,EACA3B,EAAI,UAAY0B,EAAE,MAClB1B,EAAI,SACH0B,EAAE,QACFL,EAAE,EAAIK,EAAE,OACRL,EAAE,EAAIK,EAAE,OAASC,EAAU,qBAC5B,EACA3B,EAAI,UAAYwB,CACjB,CAAC,CACF,CAEA,SAASI,EAAelB,EAAc,CACrC,IAAMmB,EAAWnB,EAAM,MAAM,CAC5B,IAAK,CAACP,EAAUF,CAAI,CACrB,CAAC,EACD4B,EAAS,QAASlB,GAAM,CACvB,IAAMU,EAAIX,EAAM,aAAaC,EAAGR,CAAQ,EAClCoB,EAAIb,EAAM,aAAaC,EAAGV,CAAI,EACpC4B,EAAS,QAASC,GAAU,CAC3B,GAAIA,GAASnB,EAAG,OAChB,IAAMoB,EAAKrB,EAAM,aAAaoB,EAAO3B,CAAQ,EACvC6B,EAAKtB,EAAM,aAAaoB,EAAO7B,CAAI,GAEvCoB,EAAE,EAAIU,EAAG,IAAM,IAAMR,EAAE,MAAQS,EAAG,OAAS,KAAQ,IACnDX,EAAE,EAAIU,EAAG,IAAM,IAAMR,EAAE,OAASS,EAAG,QAAU,KAAQ,GAEtDC,EAAYvB,EAAOC,EAAGmB,CAAK,CAE7B,CAAC,CACF,CAAC,CACF,CAEA,SAASI,EAAUxB,EAAc,CAChC,IAAMW,EAAIX,EAAM,aAAaU,EAAMjB,CAAQ,EACrCoB,EAAIb,EAAM,aAAaU,EAAMnB,CAAI,EACnCoB,EAAE,EAAIE,EAAE,MAAQR,EAAO,SAAS,QACnCoB,EAAO,OACPC,EAAO,GAEJf,EAAE,EAAIE,EAAE,MAAQ,IACnBY,EAAO,QACPC,EAAO,EAET,CAGA,SAASC,EACRC,EACAC,EACAC,EACU,CACV,IAAM7B,EAAI8B,EAAQH,EAAGC,EAAGxB,EAAO,OAAO,MAAOA,EAAO,OAAO,MAAM,EAC3DF,EAAKL,EAAM,aAAaG,EAAGL,CAAa,EAC9C,OAAAO,EAAG,OAAS2B,EACLjC,EAAE,UAAUI,CAAC,CACrB,CAEA,SAAS8B,EACRH,EACAC,EACAG,EACAC,EACAC,EAAgB,QACf,CACD,IAAMjC,EAAIH,EAAM,aAAa,EACvBa,EAAIb,EAAM,aAAaG,EAAGR,CAAQ,EAClCS,EAAIJ,EAAM,aAAaG,EAAGP,CAAQ,EAClCmB,EAAIf,EAAM,aAAaG,EAAGV,CAAI,EACpC,OAAAoB,EAAE,EAAIiB,EACNjB,EAAE,EAAIkB,EACNhB,EAAE,MAAQmB,EACVnB,EAAE,OAASoB,EACXpB,EAAE,MAAQqB,EACHrC,EAAE,UAAUI,CAAC,CACrB,CAEA,SAASkC,EACRC,EACAR,EAAY,EACZC,EAAY,EACZQ,EAAmB,QACnBC,EAAmB,GACnBC,EAA0B,gBAChB,CACV,IAAMtC,EAAIH,EAAM,aAAa,EACvBkB,EAAIlB,EAAM,aAAaG,EAAGN,CAAI,EAC9BgB,EAAIb,EAAM,aAAaG,EAAGR,CAAQ,EACxC,OAAAuB,EAAE,QAAUoB,EACZpB,EAAE,MAAQqB,EACVrB,EAAE,SAAWsB,EACbtB,EAAE,gBAAkBuB,EACpB5B,EAAE,EAAIiB,EACNjB,EAAE,EAAIkB,EACChC,EAAE,UAAUI,CAAC,CACrB,CAEIZ,IACHA,EAAO,MAAQgB,EAAO,SAAS,MAC/BhB,EAAO,OAASgB,EAAO,SAAS,QAIjC,IAAMD,EAA8C,CAAC,EACrD,WAAW,UAAa,GAAM,CAC7BA,EAAK,EAAE,GAAG,EAAI,EACf,EACA,WAAW,QAAW,GAAM,CAC3B,OAAOA,EAAK,EAAE,GAAG,CAClB,EAGA2B,EACC1B,EAAO,SAAS,MAAQ,GACxBA,EAAO,SAAS,OAAS,EACzBA,EAAO,SAAS,MAChB,EACD,EAEA0B,EACC1B,EAAO,SAAS,MAAQ,GACxBA,EAAO,SAAS,OAAS,EACzBA,EAAO,SAAS,MAChB,EACD,EAEA,IAAMK,EAAOqB,EACZ1B,EAAO,SAAS,MAAQ,GACxBA,EAAO,SAAS,OAAS,GACzBA,EAAO,KAAK,MACZA,EAAO,KAAK,MACb,EAEMmC,EAAab,EAClBtB,EAAO,SAAS,MAAQA,EAAO,OAAO,QACtCA,EAAO,SAAS,OAAS,GACzB,EACD,EACMoC,EAAcd,EACnBtB,EAAO,SAAS,OAAS,EAAIA,EAAO,OAAO,SAC3CA,EAAO,SAAS,OAAS,GACzB,EACD,EAEA,SAASqC,GAAQ,CAChB,IAAMjC,EAAQZ,EAAE,aAAaa,EAAMhB,CAAQ,EACrCiD,EAAQ9C,EAAE,aAAaa,EAAMjB,CAAQ,EAC3CkD,EAAM,EAAItC,EAAO,SAAS,MAAQ,GAClCsC,EAAM,EAAItC,EAAO,SAAS,OAAS,GACnCI,EAAM,EAAIJ,EAAO,KAAK,MACtBI,EAAM,EAAI,EACV,IAAImC,EAAM,KAAK,OAAO,EAAI,GAAK,IAAM,KAAK,GAC1CA,GAAO,KAAK,OAAO,EAAI,GAAM,EAAI,GACjCA,GAAO,KAAK,OAAO,EAAI,GAAM,KAAK,GAAK,EACvCC,EAAOpC,EAAOmC,CAAG,EACjB,IAAME,EAAMjD,EAAE,aAAa2C,EAAY/C,CAAQ,EACzCsD,EAAMlD,EAAE,aAAa4C,EAAahD,CAAQ,EAChDqD,EAAI,EAAIzC,EAAO,SAAS,OAAS,GACjC0C,EAAI,EAAI1C,EAAO,SAAS,OAAS,EAClC,CAEA,SAASwC,EAAOG,EAAgCJ,EAAa,CAC5D,IAAMK,EAAI,KAAK,IAAIL,CAAG,EAChBM,EAAI,KAAK,IAAIN,CAAG,EAChBhB,EAAIoB,EAAK,EACTnB,EAAImB,EAAK,EACfA,EAAK,EAAIE,EAAItB,EAAIqB,EAAIpB,EACrBmB,EAAK,EAAIC,EAAIrB,EAAIsB,EAAIrB,CACtB,CAEA,SAASH,GAAS,CACjB,IAAMV,EAAInB,EAAE,aAAasD,EAAWxD,CAAI,EACxCqB,EAAE,QAAU,GAAGS,EAAO,IAAI,MAAMA,EAAO,KAAK,GAC5CiB,EAAM,CACP,CAEA,SAASnB,EAAYvB,EAAcC,EAAYmB,EAAgB,CAC9D,IAAMT,EAAIX,EAAM,aAAaC,EAAGR,CAAQ,EAClC4B,EAAKrB,EAAM,aAAaoB,EAAO3B,CAAQ,EACvC,EAAIO,EAAM,aAAaC,EAAGV,CAAI,EAC9B+B,EAAKtB,EAAM,aAAaoB,EAAO7B,CAAI,EACnCW,EAAIF,EAAM,aAAaC,EAAGP,CAAQ,EAClC0D,EAAKpD,EAAM,aAAaoB,EAAO1B,CAAQ,EAEvC2D,GAAQnD,EAAE,GAAK,EAAIA,EAAE,GAAK,IAAM,GAChCoD,EAAMpD,EAAE,EAAImD,EAAME,EAAMrD,EAAE,EAAImD,EAEhCrC,EAAI,EACJsC,GAAO,IACVtC,GAAKK,EAAG,GAAKC,EAAG,MAAQ,EAAE,OAAS,GAAMX,EAAE,GAAK2C,EAE/C3C,EAAE,EAAIU,EAAG,GAAKL,EAAI,GAClBL,EAAE,EAAIK,EAAIuC,EAAMlC,EAAG,GAAKC,EAAG,OAAS,EAAE,QAAU,IAChDX,EAAE,EAAIK,EAAIuC,EAAMlC,EAAG,GAAKC,EAAG,OAAS,EAAE,QAAU,KAEhDX,EAAE,GAAKK,EAAIsC,EACX3C,EAAE,GAAKK,EAAIuC,EACXrD,EAAE,EAAI,IAAMA,EAAE,GAAK,IACnBA,EAAE,GAAKkD,EAAG,GAEXpC,GAAKK,EAAG,GAAKC,EAAG,MAAQ,EAAE,OAAS,GAAMX,EAAE,GAAK2C,EAE/C3C,EAAE,EAAIU,EAAG,GAAKL,EAAI,GAClBL,EAAE,EAAIK,EAAIuC,EAAMlC,EAAG,GAAKC,EAAG,OAAS,EAAE,QAAU,IAChDX,EAAE,EAAIK,EAAIuC,EAAMlC,EAAG,GAAKC,EAAG,OAAS,EAAE,QAAU,KAEhDX,EAAE,GAAKK,EAAIsC,EACX3C,EAAE,GAAKK,EAAIuC,EACXrD,EAAE,EAAI,IAAMA,EAAE,GAAK,IACnBA,EAAE,GAAKkD,EAAG,IAGRG,GAAO,IACVvC,GAAKK,EAAG,GAAKC,EAAG,OAAS,EAAE,QAAU,GAAMX,EAAE,GAAK4C,EAEjD5C,EAAE,EAAIU,EAAG,GAAKL,EAAI,GAClBL,EAAE,EAAIK,EAAIsC,EAAMjC,EAAG,GAAKC,EAAG,MAAQ,EAAE,OAAS,IAC9CX,EAAE,EAAIK,EAAIsC,EAAMjC,EAAG,GAAKC,EAAG,MAAQ,EAAE,OAAS,KAE9CX,EAAE,GAAKK,EAAIsC,EACX3C,EAAE,GAAKK,EAAIuC,EACXrD,EAAE,EAAI,IAAMA,EAAE,GAAK,KAEpBc,GAAKK,EAAG,GAAKC,EAAG,OAAS,EAAE,QAAU,GAAMX,EAAE,GAAK4C,EAEjD5C,EAAE,EAAIU,EAAG,GAAKL,EAAI,GAClBL,EAAE,EAAIK,EAAIsC,EAAMjC,EAAG,GAAKC,EAAG,MAAQ,EAAE,OAAS,IAC9CX,EAAE,EAAIK,EAAIsC,EAAMjC,EAAG,GAAKC,EAAG,MAAQ,EAAE,OAAS,KAE9CX,EAAE,GAAKK,EAAIsC,EACX3C,EAAE,GAAKK,EAAIuC,EACXrD,EAAE,EAAI,IAAMA,EAAE,GAAK,KAGtB,CAEA,IAAMuB,EAAS,CAAE,KAAM,EAAG,MAAO,CAAE,EAE7B0B,EAAYhB,EAAQ,GAAGV,EAAO,IAAI,MAAMA,EAAO,KAAK,EAAE,EACtDT,EAAInB,EAAE,aAAasD,EAAWxD,CAAI,EACxCqB,EAAE,MAAQ,QACVA,EAAE,SAAW,GAEb0B,EAAM,GAEL,SAASc,GAAS,CAClB3D,EAAE,OACDS,EACAM,EACAG,EACAR,EACAR,EACAmB,EACAM,CACD,EACA,sBAAsBgC,CAAM,CAC7B,GAAG",
  "names": ["ObjectPool", "objectConstructor", "object", "v", "index", "removed", "Component", "ComponentManager", "component", "ObjectPool", "index", "EntityManager", "ObjectPool", "entity", "index", "World", "_World", "ComponentManager", "EntityManager", "entity", "world", "i", "l", "comp", "component", "removed", "backEntity", "funcs", "func", "query", "andMask", "orMask", "notMask", "res", "archtype", "config_default", "canvas", "ctx", "Rect", "Component", "Position", "Velocity", "Text", "PlayerControl", "w", "World", "handlePlayerControl", "world", "e", "v", "pc", "keys", "config_default", "drawBackgound", "move", "dt", "ballV", "ball", "p", "drawRects", "r", "old", "drawTexts", "t", "txtMetric", "checkCollision", "entities", "other", "p1", "r1", "onCollision", "checkGoal", "scores", "onGoal", "addPlayerPaddle", "x", "y", "isLeft", "addRect", "width", "height", "color", "addText", "txt", "txtColor", "fontSize", "backgroundColor", "playerLeft", "playerRight", "reset", "ballP", "rad", "rotate", "pLP", "pRP", "vec2", "s", "c", "goalTexts", "v1", "vMag", "vNx", "vNy", "update"]
}
