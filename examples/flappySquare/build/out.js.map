{
  "version": 3,
  "sources": ["../../../src/pool.ts", "../../../src/component.ts", "../../../src/entity.ts", "../../../src/world.ts", "../config.json", "../src/main.ts"],
  "sourcesContent": ["export class ObjectPoolMap<K, V> {\n  private storage: V[] = [];\n  private keyToIndex: Map<K, number> = new Map();\n  private indexToKey: Array<K> = [];\n  private objectFactory: () => V;\n  private size = 0;\n\n  constructor(objectFactory: () => V) {\n    this.objectFactory = objectFactory;\n  }\n\n  len() {\n    return this.size;\n  }\n\n  add(key: K): V {\n    const index = this.keyToIndex.get(key);\n    if (index != undefined) return this.storage[index];\n    if (this.size >= this.storage.length)\n      this.storage.push(this.objectFactory());\n    this.keyToIndex.set(key, this.size);\n    this.indexToKey[this.size] = key;\n    this.size++;\n    return this.storage[this.size - 1];\n  }\n\n  remove(key: K): boolean {\n    const index = this.keyToIndex.get(key) ?? -1;\n    const backKey = this.indexToKey[this.size - 1];\n    if (index < 0 || index >= this.size || !backKey) return false;\n    const removed = this.storage[index];\n    // swap with last to maintain packed\n    this.storage[index] = this.storage[this.size - 1];\n    this.storage[this.size - 1] = removed;\n    // set before deleting because backKey == key sometimes\n    this.keyToIndex.set(backKey, index);\n    this.keyToIndex.delete(key);\n    this.indexToKey[index] = backKey;\n    this.size--;\n    return true;\n  }\n\n  get(key: K): V {\n    const index = this.keyToIndex.get(key) ?? -1;\n    if (index < 0 || index >= this.size) throw new Error(\"Index out of range.\");\n    return this.storage[index];\n  }\n\n  has(key: K): boolean {\n    return this.keyToIndex.has(key);\n  }\n\n  clean() {\n    this.storage.splice(this.size);\n    this.indexToKey.splice(this.size);\n    for (const key of this.keyToIndex.keys()) {\n      const index = this.keyToIndex.get(key) ?? -1;\n      (index < 0 || index >= this.size) && this.keyToIndex.delete(key);\n    }\n  }\n}\n", "import { ObjectPoolMap } from \"./pool.ts\";\nimport { entityT, newEntity } from \"./entity.ts\";\n\nexport class ComponentManager {\n  private pools: Map<object, unknown> = new Map();\n  private idMap: Map<object, number> = new Map();\n\n  register<T extends object>(component: T) {\n    if (this.pools.has(component)) return;\n    this.idMap.set(component, this.idMap.size);\n    this.pools.set(\n      component,\n      new ObjectPoolMap<entityT, T>(() => ({ ...component })),\n    );\n  }\n\n  getId<T extends object>(component: T): number {\n    return this.idMap.get(component) ?? -1;\n  }\n\n  add<T extends object>(entity: entityT, component: T): T {\n    return Object.assign(\n      (this.pools.get(component) as ObjectPoolMap<entityT, T>).add(entity),\n      component,\n    );\n  }\n\n  remove<T extends object>(entity: entityT, component: T): boolean {\n    return (this.pools.get(component) as ObjectPoolMap<entityT, T>).remove(\n      entity,\n    );\n  }\n\n  get<T extends object>(entity: entityT, component: T): T {\n    return (this.pools.get(component) as ObjectPoolMap<entityT, T>).get(entity);\n  }\n\n  len<T extends object>(component: T): number {\n    return (this.pools.get(component) as ObjectPoolMap<entityT, T>).len();\n  }\n\n  delete(entity: entityT) {\n    for (const p of this.pools.values()) {\n      const pool = p as ObjectPoolMap<entityT, object>;\n      pool.remove(entity);\n    }\n  }\n\n  copy(srcEntity: entityT, destEntity: entityT) {\n    for (const p of this.pools.values()) {\n      const pool = p as ObjectPoolMap<entityT, object>;\n      pool.has(srcEntity) &&\n        Object.assign(pool.add(destEntity), pool.get(srcEntity));\n    }\n  }\n\n  clean() {\n    for (const p of this.pools.values()) {\n      const pool = p as ObjectPoolMap<entityT, object>;\n      pool.clean();\n    }\n  }\n}\n", "export type entityT = number;\nexport function newEntity(): entityT {\n  return Math.random();\n}\n", "import { ComponentManager } from \"./component.ts\";\nimport { newEntity, type entityT } from \"./entity.ts\";\n\nexport type queryT = Partial<Record<\"and\" | \"not\", object[]>>;\n\nexport class World {\n  private maskMap: Map<number, number> = new Map();\n  private archetypeMap: Map<number, Set<entityT>> = new Map();\n  private entitiesToDelete: entityT[] = [];\n  private compManager = new ComponentManager();\n\n  addEntity(entity: entityT = newEntity()): entityT {\n    this.maskMap.set(entity, 0);\n    this.getArchetype(0).add(entity);\n    return entity;\n  }\n\n  copyEntity(src: entityT, dest: entityT = newEntity()): entityT {\n    this.compManager.copy(src, dest);\n    const mask = this.maskMap.get(src) ?? 0;\n    this.maskMap.set(dest, mask);\n    this.getArchetype(mask).add(dest);\n    return dest;\n  }\n\n  private getArchetype(mask: number): Set<entityT> {\n    const a = this.archetypeMap.get(mask) ?? new Set();\n    this.archetypeMap.set(mask, a);\n    return a;\n  }\n\n  deleteEntity(entity: entityT) {\n    this.entitiesToDelete.push(entity);\n  }\n\n  registerComponent<T extends object>(component: T): World {\n    this.compManager.register(component);\n    return this;\n  }\n\n  hasComponent<T extends object>(entity: entityT, component: T): boolean {\n    return (\n      ((this.maskMap.get(entity) ?? 0) &\n        (1 << this.compManager.getId(component))) >\n      0\n    );\n  }\n\n  addComponent<T extends object>(\n    entity: entityT,\n    component: T,\n    values: Partial<T> = component,\n  ): T {\n    this.registerComponent(component);\n    let mask = this.maskMap.get(entity) ?? 0;\n    const compId = this.compManager.getId(component);\n    if ((mask & (1 << compId)) != 0) {\n      return Object.assign(this.compManager.get(entity, component), values);\n    }\n    this.getArchetype(mask).delete(entity);\n    mask |= 1 << compId;\n    this.maskMap.set(entity, mask);\n    this.getArchetype(mask).add(entity);\n    return Object.assign(this.compManager.add(entity, component), values);\n  }\n\n  removeComponent<T extends object>(entity: entityT, component: T): boolean {\n    this.registerComponent(component);\n    let mask = this.maskMap.get(entity) ?? 0;\n    const compId = this.compManager.getId(component);\n    if ((mask & (1 << compId)) == 0) return false;\n    this.getArchetype(mask).delete(entity);\n    mask &= ~(1 << compId);\n    this.maskMap.set(entity, mask);\n    this.getArchetype(mask).add(entity);\n    return this.compManager.remove(entity, component);\n  }\n\n  getComponent<T extends object>(entity: entityT, component: T): T {\n    return this.compManager.get(entity, component);\n  }\n\n  update(...fns: ((world: World) => void)[]) {\n    for (let i = 0, l = fns.length; i < l; i++) fns[i](this);\n    this.commitEntityDeletion();\n  }\n\n  commitEntityDeletion() {\n    while (this.entitiesToDelete.length) {\n      const entity = this.entitiesToDelete.pop() as entityT;\n      this.compManager.delete(entity);\n      const mask = this.maskMap.get(entity) ?? 0;\n      this.maskMap.delete(entity);\n      this.getArchetype(mask).delete(entity);\n    }\n  }\n\n  cleanObjectPools() {\n    this.compManager.clean();\n  }\n\n  query(query: queryT): entityT[] {\n    let andMask = 0,\n      notMask = 0;\n    if (query.and) {\n      for (let i = 0, l = query.and.length; i < l; i++) {\n        andMask |= 1 << this.compManager.getId(query.and[i]);\n      }\n    }\n    if (query.not) {\n      for (let i = 0, l = query.not.length; i < l; i++) {\n        notMask |= 1 << this.compManager.getId(query.not[i]);\n      }\n    }\n    const res: entityT[] = [];\n    this.archetypeMap.forEach((v, k) => {\n      const set = v;\n      set.size > 0 &&\n        (k & andMask) == andMask &&\n        (k & notMask) == 0 &&\n        res.push(...set);\n    });\n    return [...new Set(res)];\n  }\n\n  entityCount(): number {\n    return this.maskMap.size;\n  }\n}\n", "{\n\t\"grav\": 981,\n\t\"hSpeedMult\": 1.001,\n\t\"pipe\": {\n\t\t\"gapHeight\": 80,\n\t\t\"baseSpeed\": 100,\n\t\t\"width\": 30,\n\t\t\"height\": 1000\n\t}\n}\n", "import { entityT, World } from \"bozoecs\";\nimport { default as config } from \"../config.json\" with { type: \"json\" };\n\n// singletons\nconst canvas = document.createElement(\"canvas\");\nif (!canvas) throw new Error(\"Cannot create canvas element.\");\ncanvas.style.imageRendering = \"pixelated\";\ndocument.body.appendChild(canvas);\nconst ctx = canvas.getContext(\"2d\");\nif (!ctx) throw new Error(\"Cannot initialize 2d context.\");\nconst Pointer = { isDown: false, justPressed: false, justReleased: false };\nconst Keys: Record<keyof typeof Pointer, Record<string, boolean>> = {\n  isDown: {},\n  justPressed: {},\n  justReleased: {},\n};\nconst GameState = {\n  currentScore: 0,\n  bestScore: 0,\n};\n\n// components\nconst Transform = { x: 0, y: 0, rad: 0, scaleX: 1, scaleY: 1 };\nconst Rect = { width: 10, height: 10 };\nconst Velocity = { x: 0, y: 0 };\nconst Acceleration = { x: 0, y: 0 };\nconst PlayerControl = {};\nconst Obstacle = { gapHeight: config.pipe.gapHeight };\n\n// systems\nfunction drawRect(\n  ctx: CanvasRenderingContext2D,\n  t: typeof Transform,\n  r: typeof Rect,\n  color = \"white\",\n) {\n  const s = Math.sin(t.rad);\n  const c = Math.cos(t.rad);\n  const oldF = ctx.fillStyle;\n  ctx.transform(c, s, -s, c, t.x, t.y);\n  ctx.fillStyle = color;\n  ctx.fillRect(\n    -r.width * 0.5,\n    -r.height * 0.5,\n    r.width * t.scaleX,\n    r.height * t.scaleY,\n  );\n  ctx.fillStyle = oldF;\n  ctx.transform(c, -s, s, c, c * -t.x + s * -t.y, -s * -t.x + c * -t.y);\n}\n\nfunction handleDrawing(world: World) {\n  if (!ctx) return;\n  drawBackground(ctx, \"green\");\n  world.query({ and: [Transform, Rect], not: [Obstacle] }).forEach((e) => {\n    const t = world.getComponent(e, Transform);\n    const r = world.getComponent(e, Rect);\n    drawRect(ctx, t, r);\n  });\n  world.query({ and: [Transform, Rect, Obstacle] }).forEach((e) => {\n    const t = world.getComponent(e, Transform);\n    const r = world.getComponent(e, Rect);\n    const o = world.getComponent(e, Obstacle);\n    const height = (r.height - o.gapHeight) * 0.5;\n    drawRect(\n      ctx,\n      {\n        x: t.x,\n        y: t.y + (o.gapHeight + height) * 0.5,\n        scaleX: 1,\n        scaleY: 1,\n        rad: 0,\n      },\n      {\n        width: r.width,\n        height,\n      },\n    );\n    drawRect(\n      ctx,\n      {\n        x: t.x,\n        y: t.y - (o.gapHeight + height) * 0.5,\n        scaleX: 1,\n        scaleY: 1,\n        rad: 0,\n      },\n      {\n        width: r.width,\n        height,\n      },\n    );\n  });\n\n  ctx.fillText(\n    \"Score: \" + GameState.currentScore + \"; Best: \" + GameState.bestScore,\n    0,\n    10,\n  );\n}\n\nfunction handleMovement(world: World) {\n  const dt = dtMilli / 1000;\n  world.query({ and: [Transform, Acceleration, Velocity] }).forEach((e) => {\n    const t = world.getComponent(e, Transform);\n    const v = world.getComponent(e, Velocity);\n    const a = world.getComponent(e, Acceleration);\n    v.x += a.x * dt;\n    v.x *= config.hSpeedMult;\n    v.y += a.y * dt;\n    t.x += v.x * dt;\n    t.y += v.y * dt;\n  });\n}\n\nfunction handleInput(world: World) {\n  world.query({ and: [PlayerControl, Acceleration, Velocity] }).forEach((e) => {\n    // movement control\n    const a = world.getComponent(e, Acceleration);\n    const v = world.getComponent(e, Velocity);\n    a.y = config.grav;\n    if (Keys.justPressed[\" \"] || Pointer.justPressed) {\n      a.y = -config.grav * 2e1;\n      v.x = v.y = 0;\n    }\n  });\n}\n\nfunction resetGame(world: World) {\n  GameState.bestScore = parseInt(localStorage.getItem(\"best\") || \"0\");\n\n  GameState.bestScore =\n    GameState.currentScore > GameState.bestScore\n      ? GameState.currentScore\n      : GameState.bestScore;\n  GameState.currentScore = 0;\n\n  localStorage.setItem(\"best\", GameState.bestScore.toString());\n\n  world.query({ and: [PlayerControl] }).forEach((e) => {\n    resetPlayer(e);\n  });\n  world.query({ and: [Obstacle] }).forEach((e) => {\n    const v = world.getComponent(e, Velocity);\n    v.x = -config.pipe.baseSpeed;\n    resetObstacle(e);\n  });\n}\n\nfunction handleCollision(world: World) {\n  world.query({ and: [PlayerControl, Rect, Transform] }).forEach((e) => {\n    const t = world.getComponent(e, Transform);\n    const r = world.getComponent(e, Rect);\n\n    if (t.y > canvas.height - r.height * 0.5) {\n      resetGame(world);\n    }\n\n    world.query({ and: [Transform, Rect, Obstacle] }).forEach((other) => {\n      const ot = world.getComponent(other, Transform);\n      const or = world.getComponent(other, Rect);\n      const oo = world.getComponent(other, Obstacle);\n\n      if (\n        (t.x - ot.x) ** 2 < ((r.width + or.width) * 0.5) ** 2 &&\n        (t.y - ot.y) ** 2 > ((oo.gapHeight - r.height) * 0.5) ** 2\n      ) {\n        resetGame(world);\n      }\n\n      // loop back\n      if (ot.x + or.width * 0.5 < 0) {\n        resetObstacle(other);\n        GameState.currentScore++;\n      }\n    });\n  });\n}\n\nfunction drawBackground(ctx: CanvasRenderingContext2D, color: string = \"\") {\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n  const oldF = ctx.fillStyle;\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.fillStyle = oldF;\n}\n\n// entity\nfunction addRect(world: World, x = 0, y = 0, rad = 0, w = 10, h = 10): entityT {\n  const e = world.addEntity();\n  const t = world.addComponent(e, Transform);\n  t.x = x;\n  t.y = y;\n  t.rad = rad;\n  const r = world.addComponent(e, Rect);\n  r.width = w;\n  r.height = h;\n  world.addComponent(e, Velocity);\n  world.addComponent(e, Acceleration);\n  return e;\n}\n\nfunction addPlayer(world: World): entityT {\n  const player = addRect(world);\n  world.addComponent(player, PlayerControl);\n  return player;\n}\n\nfunction addObstacle(world: World): entityT {\n  const e = addRect(world);\n  const r = world.getComponent(e, Rect);\n  world.addComponent(e, Obstacle);\n  r.width = config.pipe.width;\n  r.height = config.pipe.height;\n  return e;\n}\n\nfunction resetPlayer(player: entityT) {\n  const t = game.getComponent(player, Transform);\n  const v = game.getComponent(player, Velocity);\n  const a = game.getComponent(player, Acceleration);\n  t.x = canvas.width * 0.15;\n  t.y = canvas.height * 0.5;\n  v.x = v.y = a.x = a.y = 0;\n}\n\nfunction resetObstacle(obstacle: entityT) {\n  const t = game.getComponent(obstacle, Transform);\n  const r = game.getComponent(obstacle, Rect);\n  const o = game.getComponent(obstacle, Obstacle);\n  const gapHeight = o.gapHeight;\n  t.y = Math.random() * (canvas.height - gapHeight) + gapHeight * 0.5;\n  t.x = canvas.width + r.width * 0.5;\n}\n\ndocument.onkeydown = (e) => {\n  !Keys.isDown[e.key] && (Keys.justPressed[e.key] = true);\n  Keys.isDown[e.key] = true;\n};\n\ndocument.onkeyup = (e) => {\n  Keys.isDown[e.key] = false;\n  Keys.justReleased[e.key] = true;\n};\n\nglobalThis.window.onresize = document.body.onload = () => {\n  if (innerWidth / innerHeight < canvas.width / canvas.height) {\n    canvas.style.width = \"100%\";\n    canvas.style.height = \"\";\n  } else {\n    canvas.style.width = \"\";\n    canvas.style.height = \"100%\";\n  }\n};\n\ndocument.onpointerdown = () => {\n  Pointer.isDown = true;\n  Pointer.justPressed = true;\n};\n\ndocument.onpointerup = () => {\n  Pointer.isDown = false;\n  Pointer.justReleased = true;\n};\n\n// initialization\nconst game = new World();\nlet dtMilli = 0;\nlet timeMilli = 0;\naddPlayer(game);\naddObstacle(game);\nresetGame(game);\n\n(function loop() {\n  requestAnimationFrame(loop);\n  game.update(handleDrawing, handleInput, handleCollision, handleMovement);\n  Pointer.justReleased = false;\n  Pointer.justPressed = false;\n  for (const key in Keys.justPressed) {\n    Keys.justPressed[key] = false;\n  }\n  for (const key in Keys.justReleased) {\n    Keys.justReleased[key] = false;\n  }\n  dtMilli = performance.now() - timeMilli;\n  timeMilli += dtMilli;\n})();\n"],
  "mappings": "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",
  "names": ["ObjectPoolMap", "objectFactory", "key", "index", "backKey", "removed", "ComponentManager", "component", "ObjectPoolMap", "entity", "p", "srcEntity", "destEntity", "pool", "newEntity", "World", "ComponentManager", "entity", "newEntity", "src", "dest", "mask", "a", "component", "values", "compId", "fns", "i", "l", "query", "andMask", "notMask", "res", "v", "k", "set", "config_default", "canvas", "ctx", "Pointer", "Keys", "GameState", "Transform", "Rect", "Velocity", "Acceleration", "PlayerControl", "Obstacle", "config_default", "drawRect", "t", "r", "color", "s", "c", "oldF", "handleDrawing", "world", "drawBackground", "height", "handleMovement", "dt", "dtMilli", "e", "v", "a", "handleInput", "resetGame", "resetPlayer", "resetObstacle", "handleCollision", "other", "ot", "or", "oo", "addRect", "x", "y", "rad", "w", "h", "addPlayer", "player", "addObstacle", "game", "obstacle", "gapHeight", "World", "timeMilli", "loop", "key"]
}
