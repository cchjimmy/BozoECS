{
  "version": 3,
  "sources": ["../../../src/pool.ts", "../../../src/component.ts", "../../../src/entity.ts", "../../../src/world.ts", "../src/main.ts"],
  "sourcesContent": ["export class ObjectPool<T> {\n\tprivate reserve: T[];\n\tprivate active: T[];\n\tprivate objectConstructor: () => T;\n\n\tconstructor(objectConstructor: () => T) {\n\t\tthis.reserve = [];\n\t\tthis.active = [];\n\t\tthis.objectConstructor = objectConstructor;\n\t}\n\n\taddObj(): T {\n\t\tthis.active.push(this.reserve.pop() ?? this.objectConstructor());\n\t\treturn this.active[this.active.length - 1];\n\t}\n\n\tfindIndex(object: T): number {\n\t\treturn this.active.findIndex((v) => v == object);\n\t}\n\n\tremoveObj(index: number): T {\n\t\tconst removed = this.active[index];\n\t\t// swap with last to maintain packed\n\t\tthis.active[index] = this.active[this.active.length - 1];\n\t\tthis.active.length--;\n\t\tthis.reserve.push(removed);\n\t\treturn removed;\n\t}\n\n\tgetObj(index: number): T {\n\t\treturn this.active[index];\n\t}\n\n\tlen(): number {\n\t\treturn this.active.length;\n\t}\n}\n", "import { entityT } from \"./entity.ts\";\nimport { ObjectPool } from \"./pool.ts\";\n\nexport class Component {\n\tstatic id: number = -1;\n\towner: entityT = -1;\n}\n\nexport class ComponentManager {\n\tpools: ObjectPool<InstanceType<typeof Component>>[] = [];\n\n\tregister<T extends typeof Component>(\n\t\tcomponent: T,\n\t) {\n\t\tcomponent.id == -1 && (component.id = this.pools.length);\n\t\tthis.pools[component.id] ??= new ObjectPool(() => new component());\n\t}\n\n\tisRegistered<T extends typeof Component>(\n\t\tcomponent: T,\n\t): boolean {\n\t\treturn !!(this.pools[component.id]);\n\t}\n\n\tadd<T extends typeof Component>(component: T): InstanceType<T> {\n\t\treturn this.pools[component.id].addObj() as InstanceType<T>;\n\t}\n\n\tdelete<T extends typeof Component>(\n\t\tcomponent: T,\n\t\tindex: number,\n\t): InstanceType<T> {\n\t\treturn this.pools[component.id].removeObj(index) as InstanceType<T>;\n\t}\n\n\tget<T extends typeof Component>(\n\t\tcomponent: T,\n\t\tindex: number,\n\t): InstanceType<T> {\n\t\treturn this.pools[component.id].getObj(index) as InstanceType<T>;\n\t}\n\n\tlen<T extends typeof Component>(component: T): number {\n\t\treturn this.pools[component.id].len();\n\t}\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport type entityT = number;\n\nexport class EntityManager {\n  nextId = 0;\n  pool = new ObjectPool<entityT>(() => this.nextId++);\n\n  add(): entityT {\n    return this.pool.addObj();\n  }\n\n  findIndex(entity: entityT): number {\n    return this.pool.findIndex(entity);\n  }\n\n  delete(index: number): entityT {\n    return this.pool.removeObj(index);\n  }\n}\n", "import { Component, ComponentManager } from \"./component.ts\";\nimport { EntityManager, entityT } from \"./entity.ts\";\n\nexport type queryT = Partial<\n\tRecord<\"and\" | \"or\" | \"not\", (typeof Component)[]>\n>;\n\nexport class World {\n\tprivate static indices: number[][] = [];\n\tprivate static components: ComponentManager = new ComponentManager();\n\tprivate static entities: EntityManager = new EntityManager();\n\tprivate static entityMasks: number[] = [];\n\tprivate static archetypes: Record<number, Set<entityT>> = { 0: new Set() };\n\tprivate static worlds: World[] = [];\n\n\ttime = 0;\n\tdt = 0;\n\tlocalEntities: Set<entityT> = new Set();\n\n\tconstructor() {\n\t\tWorld.worlds.push(this);\n\t}\n\n\tstatic createEntity(): entityT {\n\t\tconst entity = World.entities.add();\n\t\tWorld.indices[entity] = [];\n\t\tWorld.entityMasks[entity] = 0;\n\t\tWorld.archetypes[World.entityMasks[entity]].add(entity);\n\t\treturn entity;\n\t}\n\n\tstatic deleteEntity(entity: entityT) {\n\t\tfor (const world of World.worlds) {\n\t\t\tworld.removeEntity(entity);\n\t\t}\n\t\tfor (let i = 0, l = World.components.pools.length; i < l; i++) {\n\t\t\tif (!(World.entityMasks[entity] & 1 << i)) continue;\n\t\t\tconst comp = World.components.pools[i].removeObj(\n\t\t\t\tWorld.indices[entity][i],\n\t\t\t).constructor.prototype as typeof Component;\n\t\t\tWorld.indices[World.components.get(comp, entity).owner][i] =\n\t\t\t\tWorld.indices[entity][i];\n\t\t}\n\t\tWorld.archetypes[World.entityMasks[entity]].delete(entity);\n\t\tWorld.entityMasks[entity] = 0;\n\t\tWorld.entities.delete(World.entities.findIndex(entity));\n\t}\n\n\taddEntity(entity?: entityT): entityT {\n\t\tentity ??= World.createEntity();\n\t\tthis.localEntities.add(entity);\n\t\treturn entity;\n\t}\n\n\tremoveEntity(entity: entityT) {\n\t\tthis.localEntities.delete(entity);\n\t}\n\n\tentityExists(entity: entityT) {\n\t\tif (!this.localEntities.has(entity)) {\n\t\t\tthrow new Error(`Entity ${entity} does not exist.`);\n\t\t}\n\t}\n\n\tstatic componentExists<T extends typeof Component>(component: T) {\n\t\tif (!World.components.isRegistered(component)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Component ${component.name} is not registered.`,\n\t\t\t);\n\t\t}\n\t}\n\n\tstatic registerComponent<T extends typeof Component>(\n\t\tcomponent: T,\n\t): typeof World {\n\t\tWorld.components.register(component);\n\t\treturn World;\n\t}\n\n\tstatic hasComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): boolean {\n\t\treturn (World.entityMasks[entity] & 1 << component.id) > 0;\n\t}\n\n\tstatic addComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): InstanceType<T> {\n\t\tWorld.componentExists(component);\n\t\tif (World.hasComponent(entity, component)) {\n\t\t\tthrow new Error(`Entity ${entity} already had this component.`);\n\t\t}\n\t\tWorld.archetypes[World.entityMasks[entity]].delete(entity);\n\t\tWorld.entityMasks[entity] |= 1 << component.id;\n\t\tWorld.archetypes[World.entityMasks[entity]] ??= new Set();\n\t\tWorld.archetypes[World.entityMasks[entity]].add(entity);\n\t\tWorld.indices[entity][component.id] = World.components.len(component);\n\t\tconst comp = World.components.add(component);\n\t\tcomp.owner = entity;\n\t\treturn comp;\n\t}\n\n\tstatic removeComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): InstanceType<T> {\n\t\tWorld.componentExists(component);\n\t\tif (!World.hasComponent(entity, component)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Entity ${entity} does not have component ${component.name}.`,\n\t\t\t);\n\t\t}\n\t\tWorld.archetypes[World.entityMasks[entity]].delete(entity);\n\t\tWorld.entityMasks[entity] &= ~(1 << component.id);\n\t\tWorld.archetypes[World.entityMasks[entity]] ??= new Set();\n\t\tWorld.archetypes[World.entityMasks[entity]].add(entity);\n\t\tconst removed = World.components.delete(\n\t\t\tcomponent,\n\t\t\tWorld.indices[entity][component.id],\n\t\t);\n\t\tconst backEntity = World.components.get(\n\t\t\tcomponent,\n\t\t\tWorld.indices[entity][component.id],\n\t\t).owner;\n\t\tWorld.indices[backEntity][component.id] =\n\t\t\tWorld.indices[entity][component.id];\n\t\treturn removed;\n\t}\n\n\tgetComponent<T extends typeof Component>(\n\t\tentity: entityT,\n\t\tcomponent: T,\n\t): InstanceType<T> {\n\t\tthis.entityExists(entity);\n\t\tWorld.componentExists(component);\n\t\tif (!World.hasComponent(entity, component)) {\n\t\t\tthrow new Error(\n\t\t\t\t`Entity ${entity} does not have component ${component.name}.`,\n\t\t\t);\n\t\t}\n\t\treturn World.components.get(\n\t\t\tcomponent,\n\t\t\tWorld.indices[entity][component.id],\n\t\t);\n\t}\n\n\tupdate(...funcs: ((world: World, dtSecond: number) => void)[]) {\n\t\tfor (const func of funcs) {\n\t\t\tfunc(this, this.dt / 1000);\n\t\t}\n\t\tthis.dt = performance.now() - this.time;\n\t\tthis.time += this.dt;\n\t}\n\n\tquery(query: queryT): entityT[] {\n\t\tlet andMask = 0, orMask = 0, notMask = 0;\n\t\tif (query.and) {\n\t\t\tfor (let i = 0, l = query.and.length; i < l; i++) {\n\t\t\t\tandMask |= 1 << query.and[i].id;\n\t\t\t}\n\t\t}\n\t\tif (query.or) {\n\t\t\tfor (let i = 0, l = query.or.length; i < l; i++) {\n\t\t\t\torMask |= 1 << query.or[i].id;\n\t\t\t}\n\t\t}\n\t\tif (query.not) {\n\t\t\tfor (let i = 0, l = query.not.length; i < l; i++) {\n\t\t\t\tnotMask |= 1 << query.not[i].id;\n\t\t\t}\n\t\t}\n\t\tconst res = [];\n\t\tfor (const archtype in World.archetypes) {\n\t\t\tconst a = parseInt(archtype);\n\t\t\tif (\n\t\t\t\t(a & andMask) == andMask && (a | orMask) > 0 &&\n\t\t\t\t(a & notMask) == 0\n\t\t\t) {\n\t\t\t\tres.push(\n\t\t\t\t\t...this.localEntities.intersection(\n\t\t\t\t\t\tWorld.archetypes[archtype],\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}\n}\n", "import { Component, World } from \"../../../src/index.ts\";\n\nfunction random(min: number, max: number): number {\n\treturn Math.random() * (max - min) + min;\n}\n\nconst canvas = document.createElement(\"canvas\");\nconst ctx = canvas.getContext(\"2d\");\ndocument.body.appendChild(canvas);\n\nconst ENTITY_COUNT = 1000;\n\nfunction fullsrn() {\n\tcanvas.width = innerWidth;\n\tcanvas.height = innerHeight;\n}\n\nfullsrn();\n\nglobalThis.window.onresize = fullsrn;\ndocument.body.style.margin = \"0px\";\ndocument.body.style.userSelect = \"none\";\ndocument.body.style.overflow = \"hidden\";\ndocument.body.style.touchAction = \"none\";\n\nconst w = new World();\n\n// components\nclass Position extends Component {\n\tx: number = 0;\n\ty: number = 0;\n}\nclass Velocity extends Component {\n\tx: number = 0;\n\ty: number = 0;\n}\nclass Circle extends Component {\n\tradius: number = 10;\n\tcolor: string = \"green\";\n}\n\nWorld\n\t.registerComponent(Position)\n\t.registerComponent(Velocity)\n\t.registerComponent(Circle);\n\n// systems\nfunction logFPS(_world: World, dt: number) {\n\tif (!ctx) return;\n\tconst txt = `FPS: ${(1 / dt).toFixed(0)}`;\n\tconst fontSize = 30;\n\tconst padding = 10;\n\tconst margin = 5;\n\tconst old = ctx.fillStyle;\n\n\tctx.font = `${fontSize}px serif`;\n\tconst txtMetric = ctx.measureText(txt);\n\tctx.fillStyle = \"white\";\n\tctx.fillRect(\n\t\tpadding,\n\t\tpadding,\n\t\t2 * margin + txtMetric.width,\n\t\t2 * margin + txtMetric.emHeightAscent,\n\t);\n\tctx.fillStyle = \"black\";\n\tctx.fillText(\n\t\ttxt,\n\t\tmargin + padding,\n\t\tmargin + padding + txtMetric.emHeightAscent,\n\t);\n\tctx.fillStyle = old;\n}\nfunction render(world: World, _dt: number) {\n\tif (!ctx) return;\n\tconst twoPI = 2 * Math.PI;\n\t//ctx.lineWidth = 3;\n\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\tconst oldStyle = ctx.strokeStyle;\n\tworld.query({ and: [Position, Circle] }).forEach((e) => {\n\t\tconst p = world.getComponent(e, Position);\n\t\tconst c = world.getComponent(e, Circle);\n\t\tctx.strokeStyle = c.color;\n\t\tctx.beginPath();\n\t\tctx.arc(p.x, p.y, c.radius, 0, twoPI);\n\t\tctx.stroke();\n\t});\n\tctx.strokeStyle = oldStyle;\n}\nfunction move(world: World, dt: number) {\n\tworld.query({ and: [Position, Velocity] }).forEach((e) => {\n\t\tconst p = world.getComponent(e, Position);\n\t\tconst v = world.getComponent(e, Velocity);\n\t\tp.x += v.x * dt;\n\t\tp.y += v.y * dt;\n\t});\n}\nfunction bounce(world: World, _dt: number) {\n\tworld.query({ and: [Position, Velocity, Circle] }).forEach((e) => {\n\t\tconst p = world.getComponent(e, Position);\n\t\tconst v = world.getComponent(e, Velocity);\n\t\tconst c = world.getComponent(e, Circle);\n\t\tif (p.x - c.radius < 0 || p.x + c.radius > canvas.width) {\n\t\t\tv.x *= -1;\n\t\t\tp.x = p.x < canvas.width * 0.5 ? c.radius : canvas.width - c.radius;\n\t\t}\n\t\tif (p.y - c.radius < 0 || p.y + c.radius > canvas.height) {\n\t\t\tv.y *= -1;\n\t\t\tp.y = p.y < canvas.height * 0.5\n\t\t\t\t? c.radius\n\t\t\t\t: canvas.height - c.radius;\n\t\t}\n\t});\n}\n\n// entity\nfunction createEntity() {\n\tconst e = w.addEntity();\n\tconst p = World.addComponent(e, Position);\n\tconst v = World.addComponent(e, Velocity);\n\tconst c = World.addComponent(e, Circle);\n\tconst maxSpeed = 100;\n\tp.x = random(0, canvas.width);\n\tp.y = random(0, canvas.height);\n\tv.x = random(-maxSpeed, maxSpeed);\n\tv.y = random(-maxSpeed, maxSpeed);\n\tc.radius = random(10, 30);\n\tc.color = `rgb(${random(0, 255)}, ${random(0, 255)}, ${random(0, 255)})`;\n\treturn e;\n}\n\nfor (let i = 0; i < ENTITY_COUNT; ++i) {\n\tcreateEntity();\n}\n\n(function update() {\n\tw.update(render, move, bounce, logFPS);\n\trequestAnimationFrame(update);\n})();\n"],
  "mappings": "MAAO,IAAMA,EAAN,KAAoB,CAClB,QACA,OACA,kBAER,YAAYC,EAA4B,CACvC,KAAK,QAAU,CAAC,EAChB,KAAK,OAAS,CAAC,EACf,KAAK,kBAAoBA,CAC1B,CAEA,QAAY,CACX,YAAK,OAAO,KAAK,KAAK,QAAQ,IAAI,GAAK,KAAK,kBAAkB,CAAC,EACxD,KAAK,OAAO,KAAK,OAAO,OAAS,CAAC,CAC1C,CAEA,UAAUC,EAAmB,CAC5B,OAAO,KAAK,OAAO,UAAWC,GAAMA,GAAKD,CAAM,CAChD,CAEA,UAAUE,EAAkB,CAC3B,IAAMC,EAAU,KAAK,OAAOD,CAAK,EAEjC,YAAK,OAAOA,CAAK,EAAI,KAAK,OAAO,KAAK,OAAO,OAAS,CAAC,EACvD,KAAK,OAAO,SACZ,KAAK,QAAQ,KAAKC,CAAO,EAClBA,CACR,CAEA,OAAOD,EAAkB,CACxB,OAAO,KAAK,OAAOA,CAAK,CACzB,CAEA,KAAc,CACb,OAAO,KAAK,OAAO,MACpB,CACD,ECjCO,IAAME,EAAN,KAAgB,CACtB,OAAO,GAAa,GACpB,MAAiB,EAClB,EAEaC,EAAN,KAAuB,CAC7B,MAAsD,CAAC,EAEvD,SACCC,EACC,CACDA,EAAU,IAAM,KAAOA,EAAU,GAAK,KAAK,MAAM,QACjD,KAAK,MAAMA,EAAU,EAAE,IAAM,IAAIC,EAAW,IAAM,IAAID,CAAW,CAClE,CAEA,aACCA,EACU,CACV,MAAO,CAAC,CAAE,KAAK,MAAMA,EAAU,EAAE,CAClC,CAEA,IAAgCA,EAA+B,CAC9D,OAAO,KAAK,MAAMA,EAAU,EAAE,EAAE,OAAO,CACxC,CAEA,OACCA,EACAE,EACkB,CAClB,OAAO,KAAK,MAAMF,EAAU,EAAE,EAAE,UAAUE,CAAK,CAChD,CAEA,IACCF,EACAE,EACkB,CAClB,OAAO,KAAK,MAAMF,EAAU,EAAE,EAAE,OAAOE,CAAK,CAC7C,CAEA,IAAgCF,EAAsB,CACrD,OAAO,KAAK,MAAMA,EAAU,EAAE,EAAE,IAAI,CACrC,CACD,ECzCO,IAAMG,EAAN,KAAoB,CACzB,OAAS,EACT,KAAO,IAAIC,EAAoB,IAAM,KAAK,QAAQ,EAElD,KAAe,CACb,OAAO,KAAK,KAAK,OAAO,CAC1B,CAEA,UAAUC,EAAyB,CACjC,OAAO,KAAK,KAAK,UAAUA,CAAM,CACnC,CAEA,OAAOC,EAAwB,CAC7B,OAAO,KAAK,KAAK,UAAUA,CAAK,CAClC,CACF,ECZO,IAAMC,EAAN,MAAMC,CAAM,CAClB,OAAe,QAAsB,CAAC,EACtC,OAAe,WAA+B,IAAIC,EAClD,OAAe,SAA0B,IAAIC,EAC7C,OAAe,YAAwB,CAAC,EACxC,OAAe,WAA2C,CAAE,EAAG,IAAI,GAAM,EACzE,OAAe,OAAkB,CAAC,EAElC,KAAO,EACP,GAAK,EACL,cAA8B,IAAI,IAElC,aAAc,CACbF,EAAM,OAAO,KAAK,IAAI,CACvB,CAEA,OAAO,cAAwB,CAC9B,IAAMG,EAASH,EAAM,SAAS,IAAI,EAClC,OAAAA,EAAM,QAAQG,CAAM,EAAI,CAAC,EACzBH,EAAM,YAAYG,CAAM,EAAI,EAC5BH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,IAAIA,CAAM,EAC/CA,CACR,CAEA,OAAO,aAAaA,EAAiB,CACpC,QAAWC,KAASJ,EAAM,OACzBI,EAAM,aAAaD,CAAM,EAE1B,QAASE,EAAI,EAAGC,EAAIN,EAAM,WAAW,MAAM,OAAQK,EAAIC,EAAGD,IAAK,CAC9D,GAAI,EAAEL,EAAM,YAAYG,CAAM,EAAI,GAAKE,GAAI,SAC3C,IAAME,EAAOP,EAAM,WAAW,MAAMK,CAAC,EAAE,UACtCL,EAAM,QAAQG,CAAM,EAAEE,CAAC,CACxB,EAAE,YAAY,UACdL,EAAM,QAAQA,EAAM,WAAW,IAAIO,EAAMJ,CAAM,EAAE,KAAK,EAAEE,CAAC,EACxDL,EAAM,QAAQG,CAAM,EAAEE,CAAC,CACzB,CACAL,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,OAAOA,CAAM,EACzDH,EAAM,YAAYG,CAAM,EAAI,EAC5BH,EAAM,SAAS,OAAOA,EAAM,SAAS,UAAUG,CAAM,CAAC,CACvD,CAEA,UAAUA,EAA2B,CACpC,OAAAA,IAAWH,EAAM,aAAa,EAC9B,KAAK,cAAc,IAAIG,CAAM,EACtBA,CACR,CAEA,aAAaA,EAAiB,CAC7B,KAAK,cAAc,OAAOA,CAAM,CACjC,CAEA,aAAaA,EAAiB,CAC7B,GAAI,CAAC,KAAK,cAAc,IAAIA,CAAM,EACjC,MAAM,IAAI,MAAM,UAAUA,CAAM,kBAAkB,CAEpD,CAEA,OAAO,gBAA4CK,EAAc,CAChE,GAAI,CAACR,EAAM,WAAW,aAAaQ,CAAS,EAC3C,MAAM,IAAI,MACT,aAAaA,EAAU,IAAI,qBAC5B,CAEF,CAEA,OAAO,kBACNA,EACe,CACf,OAAAR,EAAM,WAAW,SAASQ,CAAS,EAC5BR,CACR,CAEA,OAAO,aACNG,EACAK,EACU,CACV,OAAQR,EAAM,YAAYG,CAAM,EAAI,GAAKK,EAAU,IAAM,CAC1D,CAEA,OAAO,aACNL,EACAK,EACkB,CAElB,GADAR,EAAM,gBAAgBQ,CAAS,EAC3BR,EAAM,aAAaG,EAAQK,CAAS,EACvC,MAAM,IAAI,MAAM,UAAUL,CAAM,8BAA8B,EAE/DH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,OAAOA,CAAM,EACzDH,EAAM,YAAYG,CAAM,GAAK,GAAKK,EAAU,GAC5CR,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,IAAM,IAAI,IACpDH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,IAAIA,CAAM,EACtDH,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,EAAIR,EAAM,WAAW,IAAIQ,CAAS,EACpE,IAAMD,EAAOP,EAAM,WAAW,IAAIQ,CAAS,EAC3C,OAAAD,EAAK,MAAQJ,EACNI,CACR,CAEA,OAAO,gBACNJ,EACAK,EACkB,CAElB,GADAR,EAAM,gBAAgBQ,CAAS,EAC3B,CAACR,EAAM,aAAaG,EAAQK,CAAS,EACxC,MAAM,IAAI,MACT,UAAUL,CAAM,4BAA4BK,EAAU,IAAI,GAC3D,EAEDR,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,OAAOA,CAAM,EACzDH,EAAM,YAAYG,CAAM,GAAK,EAAE,GAAKK,EAAU,IAC9CR,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,IAAM,IAAI,IACpDH,EAAM,WAAWA,EAAM,YAAYG,CAAM,CAAC,EAAE,IAAIA,CAAM,EACtD,IAAMM,EAAUT,EAAM,WAAW,OAChCQ,EACAR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,CACnC,EACME,EAAaV,EAAM,WAAW,IACnCQ,EACAR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,CACnC,EAAE,MACF,OAAAR,EAAM,QAAQU,CAAU,EAAEF,EAAU,EAAE,EACrCR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,EAC5BC,CACR,CAEA,aACCN,EACAK,EACkB,CAGlB,GAFA,KAAK,aAAaL,CAAM,EACxBH,EAAM,gBAAgBQ,CAAS,EAC3B,CAACR,EAAM,aAAaG,EAAQK,CAAS,EACxC,MAAM,IAAI,MACT,UAAUL,CAAM,4BAA4BK,EAAU,IAAI,GAC3D,EAED,OAAOR,EAAM,WAAW,IACvBQ,EACAR,EAAM,QAAQG,CAAM,EAAEK,EAAU,EAAE,CACnC,CACD,CAEA,UAAUG,EAAqD,CAC9D,QAAWC,KAAQD,EAClBC,EAAK,KAAM,KAAK,GAAK,GAAI,EAE1B,KAAK,GAAK,YAAY,IAAI,EAAI,KAAK,KACnC,KAAK,MAAQ,KAAK,EACnB,CAEA,MAAMC,EAA0B,CAC/B,IAAIC,EAAU,EAAGC,EAAS,EAAGC,EAAU,EACvC,GAAIH,EAAM,IACT,QAASR,EAAI,EAAGC,EAAIO,EAAM,IAAI,OAAQR,EAAIC,EAAGD,IAC5CS,GAAW,GAAKD,EAAM,IAAIR,CAAC,EAAE,GAG/B,GAAIQ,EAAM,GACT,QAASR,EAAI,EAAGC,EAAIO,EAAM,GAAG,OAAQR,EAAIC,EAAGD,IAC3CU,GAAU,GAAKF,EAAM,GAAGR,CAAC,EAAE,GAG7B,GAAIQ,EAAM,IACT,QAASR,EAAI,EAAGC,EAAIO,EAAM,IAAI,OAAQR,EAAIC,EAAGD,IAC5CW,GAAW,GAAKH,EAAM,IAAIR,CAAC,EAAE,GAG/B,IAAMY,EAAM,CAAC,EACb,QAAWC,KAAYlB,EAAM,WAAY,CACxC,IAAMmB,EAAI,SAASD,CAAQ,GAEzBC,EAAIL,IAAYA,IAAYK,EAAIJ,GAAU,IAC1CI,EAAIH,IAAY,GAEjBC,EAAI,KACH,GAAG,KAAK,cAAc,aACrBjB,EAAM,WAAWkB,CAAQ,CAC1B,CACD,CAEF,CACA,OAAOD,CACR,CACD,EC3LA,SAASG,EAAOC,EAAaC,EAAqB,CACjD,OAAO,KAAK,OAAO,GAAKA,EAAMD,GAAOA,CACtC,CAEA,IAAME,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAMD,EAAO,WAAW,IAAI,EAClC,SAAS,KAAK,YAAYA,CAAM,EAEhC,IAAME,EAAe,IAErB,SAASC,GAAU,CAClBH,EAAO,MAAQ,WACfA,EAAO,OAAS,WACjB,CAEAG,EAAQ,EAER,WAAW,OAAO,SAAWA,EAC7B,SAAS,KAAK,MAAM,OAAS,MAC7B,SAAS,KAAK,MAAM,WAAa,OACjC,SAAS,KAAK,MAAM,SAAW,SAC/B,SAAS,KAAK,MAAM,YAAc,OAElC,IAAMC,EAAI,IAAIC,EAGRC,EAAN,cAAuBC,CAAU,CAChC,EAAY,EACZ,EAAY,CACb,EACMC,EAAN,cAAuBD,CAAU,CAChC,EAAY,EACZ,EAAY,CACb,EACME,EAAN,cAAqBF,CAAU,CAC9B,OAAiB,GACjB,MAAgB,OACjB,EAEAF,EACE,kBAAkBC,CAAQ,EAC1B,kBAAkBE,CAAQ,EAC1B,kBAAkBC,CAAM,EAG1B,SAASC,EAAOC,EAAeC,EAAY,CAC1C,GAAI,CAACX,EAAK,OACV,IAAMY,EAAM,SAAS,EAAID,GAAI,QAAQ,CAAC,CAAC,GACjCE,EAAW,GACXC,EAAU,GACVC,EAAS,EACTC,EAAMhB,EAAI,UAEhBA,EAAI,KAAO,GAAGa,CAAQ,WACtB,IAAMI,EAAYjB,EAAI,YAAYY,CAAG,EACrCZ,EAAI,UAAY,QAChBA,EAAI,SACHc,EACAA,EACA,EAAIC,EAASE,EAAU,MACvB,EAAIF,EAASE,EAAU,cACxB,EACAjB,EAAI,UAAY,QAChBA,EAAI,SACHY,EACAG,EAASD,EACTC,EAASD,EAAUG,EAAU,cAC9B,EACAjB,EAAI,UAAYgB,CACjB,CACA,SAASE,EAAOC,EAAcC,EAAa,CAC1C,GAAI,CAACpB,EAAK,OACV,IAAMqB,EAAQ,EAAI,KAAK,GAEvBrB,EAAI,SAAS,EAAG,EAAGD,EAAO,MAAOA,EAAO,MAAM,EAC9C,IAAMuB,EAAWtB,EAAI,YACrBmB,EAAM,MAAM,CAAE,IAAK,CAACd,EAAUG,CAAM,CAAE,CAAC,EAAE,QAASe,GAAM,CACvD,IAAMC,EAAIL,EAAM,aAAaI,EAAGlB,CAAQ,EAClCoB,EAAIN,EAAM,aAAaI,EAAGf,CAAM,EACtCR,EAAI,YAAcyB,EAAE,MACpBzB,EAAI,UAAU,EACdA,EAAI,IAAIwB,EAAE,EAAGA,EAAE,EAAGC,EAAE,OAAQ,EAAGJ,CAAK,EACpCrB,EAAI,OAAO,CACZ,CAAC,EACDA,EAAI,YAAcsB,CACnB,CACA,SAASI,EAAKP,EAAcR,EAAY,CACvCQ,EAAM,MAAM,CAAE,IAAK,CAACd,EAAUE,CAAQ,CAAE,CAAC,EAAE,QAASgB,GAAM,CACzD,IAAMC,EAAIL,EAAM,aAAaI,EAAGlB,CAAQ,EAClCsB,EAAIR,EAAM,aAAaI,EAAGhB,CAAQ,EACxCiB,EAAE,GAAKG,EAAE,EAAIhB,EACba,EAAE,GAAKG,EAAE,EAAIhB,CACd,CAAC,CACF,CACA,SAASiB,EAAOT,EAAcC,EAAa,CAC1CD,EAAM,MAAM,CAAE,IAAK,CAACd,EAAUE,EAAUC,CAAM,CAAE,CAAC,EAAE,QAASe,GAAM,CACjE,IAAMC,EAAIL,EAAM,aAAaI,EAAGlB,CAAQ,EAClCsB,EAAIR,EAAM,aAAaI,EAAGhB,CAAQ,EAClCkB,EAAIN,EAAM,aAAaI,EAAGf,CAAM,GAClCgB,EAAE,EAAIC,EAAE,OAAS,GAAKD,EAAE,EAAIC,EAAE,OAAS1B,EAAO,SACjD4B,EAAE,GAAK,GACPH,EAAE,EAAIA,EAAE,EAAIzB,EAAO,MAAQ,GAAM0B,EAAE,OAAS1B,EAAO,MAAQ0B,EAAE,SAE1DD,EAAE,EAAIC,EAAE,OAAS,GAAKD,EAAE,EAAIC,EAAE,OAAS1B,EAAO,UACjD4B,EAAE,GAAK,GACPH,EAAE,EAAIA,EAAE,EAAIzB,EAAO,OAAS,GACzB0B,EAAE,OACF1B,EAAO,OAAS0B,EAAE,OAEvB,CAAC,CACF,CAGA,SAASI,GAAe,CACvB,IAAM,EAAI1B,EAAE,UAAU,EAChBqB,EAAIpB,EAAM,aAAa,EAAGC,CAAQ,EAClCsB,EAAIvB,EAAM,aAAa,EAAGG,CAAQ,EAClCkB,EAAIrB,EAAM,aAAa,EAAGI,CAAM,EAChCsB,EAAW,IACjB,OAAAN,EAAE,EAAI5B,EAAO,EAAGG,EAAO,KAAK,EAC5ByB,EAAE,EAAI5B,EAAO,EAAGG,EAAO,MAAM,EAC7B4B,EAAE,EAAI/B,EAAO,CAACkC,EAAUA,CAAQ,EAChCH,EAAE,EAAI/B,EAAO,CAACkC,EAAUA,CAAQ,EAChCL,EAAE,OAAS7B,EAAO,GAAI,EAAE,EACxB6B,EAAE,MAAQ,OAAO7B,EAAO,EAAG,GAAG,CAAC,KAAKA,EAAO,EAAG,GAAG,CAAC,KAAKA,EAAO,EAAG,GAAG,CAAC,IAC9D,CACR,CAEA,QAASmC,EAAI,EAAGA,EAAI9B,EAAc,EAAE8B,EACnCF,EAAa,GAGb,SAASG,GAAS,CAClB7B,EAAE,OAAOe,EAAQQ,EAAME,EAAQnB,CAAM,EACrC,sBAAsBuB,CAAM,CAC7B,GAAG",
  "names": ["ObjectPool", "objectConstructor", "object", "v", "index", "removed", "Component", "ComponentManager", "component", "ObjectPool", "index", "EntityManager", "ObjectPool", "entity", "index", "World", "_World", "ComponentManager", "EntityManager", "entity", "world", "i", "l", "comp", "component", "removed", "backEntity", "funcs", "func", "query", "andMask", "orMask", "notMask", "res", "archtype", "a", "random", "min", "max", "canvas", "ctx", "ENTITY_COUNT", "fullsrn", "w", "World", "Position", "Component", "Velocity", "Circle", "logFPS", "_world", "dt", "txt", "fontSize", "padding", "margin", "old", "txtMetric", "render", "world", "_dt", "twoPI", "oldStyle", "e", "p", "c", "move", "v", "bounce", "createEntity", "maxSpeed", "i", "update"]
}
