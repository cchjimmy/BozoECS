{
  "version": 3,
  "sources": ["../../../src/pool.ts", "../../../src/component.ts", "../../../src/entity.ts", "../../../src/world.ts", "../src/main.ts"],
  "sourcesContent": ["export class ObjectPoolMap<K, V> {\n  private storage: V[] = [];\n  private keyToIndex: Map<K, number> = new Map();\n  private indexToKey: Array<K> = [];\n  private objectFactory: () => V;\n  private size = 0;\n\n  constructor(objectFactory: () => V) {\n    this.objectFactory = objectFactory;\n  }\n\n  len() {\n    return this.size;\n  }\n\n  add(key: K): V {\n    const index = this.keyToIndex.get(key);\n    if (index != undefined) return this.storage[index];\n    if (this.size >= this.storage.length)\n      this.storage.push(this.objectFactory());\n    this.keyToIndex.set(key, this.size);\n    this.indexToKey[this.size] = key;\n    this.size++;\n    return this.storage[this.size - 1];\n  }\n\n  remove(key: K): boolean {\n    const index = this.keyToIndex.get(key) ?? -1;\n    const backKey = this.indexToKey[this.size - 1];\n    if (index < 0 || index >= this.size || !backKey) return false;\n    const removed = this.storage[index];\n    // swap with last to maintain packed\n    this.storage[index] = this.storage[this.size - 1];\n    this.storage[this.size - 1] = removed;\n    // set before deleting because backKey == key sometimes\n    this.keyToIndex.set(backKey, index);\n    this.keyToIndex.delete(key);\n    this.indexToKey[index] = backKey;\n    this.size--;\n    return true;\n  }\n\n  get(key: K): V {\n    const index = this.keyToIndex.get(key) ?? -1;\n    if (index < 0 || index >= this.size) throw new Error(\"Index out of range.\");\n    return this.storage[index];\n  }\n\n  has(key: K): boolean {\n    return this.keyToIndex.has(key);\n  }\n\n  clean() {\n    this.storage.splice(this.size);\n    this.indexToKey.splice(this.size);\n    for (const key of this.keyToIndex.keys()) {\n      const index = this.keyToIndex.get(key) ?? -1;\n      (index < 0 || index >= this.size) && this.keyToIndex.delete(key);\n    }\n  }\n}\n", "import { ObjectPoolMap } from \"./pool.ts\";\nimport { entityT, newEntity } from \"./entity.ts\";\n\nexport class ComponentManager {\n  private pools: Map<object, unknown> = new Map();\n  private idMap: Map<object, number> = new Map();\n\n  register<T extends object>(component: T) {\n    if (this.pools.has(component)) return;\n    this.idMap.set(component, this.idMap.size);\n    this.pools.set(\n      component,\n      new ObjectPoolMap<entityT, T>(() => ({ ...component })),\n    );\n  }\n\n  getId<T extends object>(component: T): number {\n    return this.idMap.get(component) ?? -1;\n  }\n\n  add<T extends object>(entity: entityT, component: T): T {\n    return Object.assign(\n      (this.pools.get(component) as ObjectPoolMap<entityT, T>).add(entity),\n      component,\n    );\n  }\n\n  remove<T extends object>(entity: entityT, component: T): boolean {\n    return (this.pools.get(component) as ObjectPoolMap<entityT, T>).remove(\n      entity,\n    );\n  }\n\n  get<T extends object>(entity: entityT, component: T): T {\n    return (this.pools.get(component) as ObjectPoolMap<entityT, T>).get(entity);\n  }\n\n  len<T extends object>(component: T): number {\n    return (this.pools.get(component) as ObjectPoolMap<entityT, T>).len();\n  }\n\n  delete(entity: entityT) {\n    for (const p of this.pools.values()) {\n      const pool = p as ObjectPoolMap<entityT, object>;\n      pool.remove(entity);\n    }\n  }\n\n  copy(srcEntity: entityT, destEntity: entityT) {\n    for (const p of this.pools.values()) {\n      const pool = p as ObjectPoolMap<entityT, object>;\n      pool.has(srcEntity) &&\n        Object.assign(pool.add(destEntity), pool.get(srcEntity));\n    }\n  }\n\n  clean() {\n    for (const p of this.pools.values()) {\n      const pool = p as ObjectPoolMap<entityT, object>;\n      pool.clean();\n    }\n  }\n}\n", "export type entityT = number;\nexport function newEntity(): entityT {\n  return Math.random();\n}\n", "import { ComponentManager } from \"./component.ts\";\nimport { newEntity, type entityT } from \"./entity.ts\";\n\nexport type queryT = Partial<Record<\"and\" | \"not\", object[]>>;\n\nexport class World {\n  private maskMap: Map<number, number> = new Map();\n  private archetypeMap: Map<number, Set<entityT>> = new Map();\n  private entitiesToDelete: entityT[] = [];\n  private compManager = new ComponentManager();\n  private frameCount = 0;\n  cleanUpMinutes = 5;\n\n  constructor(cleanUpMinutes = 5) {\n    this.cleanUpMinutes = cleanUpMinutes;\n  }\n\n  addEntity(entity: entityT = newEntity()): entityT {\n    this.maskMap.set(entity, 0);\n    this.getArchetype(0).add(entity);\n    return entity;\n  }\n\n  copyEntity(src: entityT, dest: entityT = newEntity()): entityT {\n    this.compManager.copy(src, dest);\n    const mask = this.maskMap.get(src) ?? 0;\n    this.maskMap.set(dest, mask);\n    this.getArchetype(mask).add(dest);\n    return dest;\n  }\n\n  private getArchetype(mask: number): Set<entityT> {\n    const a = this.archetypeMap.get(mask) ?? new Set();\n    this.archetypeMap.set(mask, a);\n    return a;\n  }\n\n  deleteEntity(entity: entityT) {\n    this.entitiesToDelete.push(entity);\n  }\n\n  registerComponent<T extends object>(component: T): World {\n    this.compManager.register(component);\n    return this;\n  }\n\n  hasComponent<T extends object>(entity: entityT, component: T): boolean {\n    return (\n      ((this.maskMap.get(entity) ?? 0) &\n        (1 << this.compManager.getId(component))) >\n      0\n    );\n  }\n\n  addComponent<T extends object>(\n    entity: entityT,\n    component: T,\n    values: Partial<T> = component,\n  ): T {\n    this.registerComponent(component);\n    let mask = this.maskMap.get(entity) ?? 0;\n    const compId = this.compManager.getId(component);\n    if ((mask & (1 << compId)) != 0) {\n      return Object.assign(this.compManager.get(entity, component), values);\n    }\n    this.getArchetype(mask).delete(entity);\n    mask |= 1 << compId;\n    this.maskMap.set(entity, mask);\n    this.getArchetype(mask).add(entity);\n    return Object.assign(this.compManager.add(entity, component), values);\n  }\n\n  removeComponent<T extends object>(entity: entityT, component: T): boolean {\n    this.registerComponent(component);\n    let mask = this.maskMap.get(entity) ?? 0;\n    const compId = this.compManager.getId(component);\n    if ((mask & (1 << compId)) == 0) return false;\n    this.getArchetype(mask).delete(entity);\n    mask &= ~(1 << compId);\n    this.maskMap.set(entity, mask);\n    this.getArchetype(mask).add(entity);\n    return this.compManager.remove(entity, component);\n  }\n\n  getComponent<T extends object>(entity: entityT, component: T): T {\n    return this.compManager.get(entity, component);\n  }\n\n  update(...fns: ((world: World) => void)[]) {\n    for (let i = 0, l = fns.length; i < l; i++) fns[i](this);\n    this.commitEntityDeletion();\n    this.frameCount % (this.cleanUpMinutes * 60 * 60) == 0 &&\n      this.cleanObjectPools();\n    this.frameCount++;\n  }\n\n  commitEntityDeletion() {\n    while (this.entitiesToDelete.length) {\n      const entity = this.entitiesToDelete.pop() as entityT;\n      this.compManager.delete(entity);\n      const mask = this.maskMap.get(entity) ?? 0;\n      this.maskMap.delete(entity);\n      this.getArchetype(mask).delete(entity);\n    }\n  }\n\n  cleanObjectPools() {\n    this.compManager.clean();\n  }\n\n  query(query: queryT): entityT[] {\n    let andMask = 0,\n      notMask = 0;\n    if (query.and) {\n      for (let i = 0, l = query.and.length; i < l; i++) {\n        andMask |= 1 << this.compManager.getId(query.and[i]);\n      }\n    }\n    if (query.not) {\n      for (let i = 0, l = query.not.length; i < l; i++) {\n        notMask |= 1 << this.compManager.getId(query.not[i]);\n      }\n    }\n    const res: entityT[] = [];\n    this.archetypeMap.forEach((_v, k) => {\n      const set = this.getArchetype(k);\n      set.size > 0 &&\n        (k & andMask) == andMask &&\n        (k & notMask) == 0 &&\n        res.push(...set);\n    });\n    return [...new Set(res)];\n  }\n\n  entityCount(): number {\n    return this.maskMap.size;\n  }\n}\n", "import { World } from \"bozoecs\";\n\n// components\nconst Transform = { x: 0, y: 0, rad: 0, scaleX: 0, scaleY: 0 };\nconst Velocity = { x: 0, y: 0 };\nconst Rect = { width: 10, height: 10 };\nconst Camera = { zoom: 4 };\nconst PlayerControl = {};\n\n// singletons\nconst Ctx2D = setUpCanvas2D();\nconst Pointer = setUpPointer();\nconst Keys = setUpKeyboard();\nconst Assets: HTMLImageElement[] = [];\nconst Time = setUpTime();\n\nfunction setUpCanvas2D(): {\n  canvas: HTMLCanvasElement;\n  ctx: CanvasRenderingContext2D;\n} {\n  const canvas =\n    document.querySelector(\"canvas\") ?? document.createElement(\"canvas\");\n  if (!canvas) throw new Error(\"Cannot create canvas element.\");\n  const ctx = canvas.getContext(\"2d\");\n  if (!ctx) throw new Error(\"Cannot initialize context 2d.\");\n\n  document.body.appendChild(canvas);\n\n  globalThis.onresize = globalThis.onload = () => {\n    if (innerWidth / innerHeight < canvas.width / canvas.height) {\n      canvas.style.width = \"100%\";\n      canvas.style.height = \"\";\n    } else {\n      canvas.style.width = \"\";\n      canvas.style.height = \"100%\";\n    }\n  };\n\n  return { canvas, ctx };\n}\n\nfunction setUpKeyboard(): Record<\n  \"isDown\" | \"justPressed\" | \"justReleased\",\n  Record<string, boolean>\n> {\n  const keys: ReturnType<typeof setUpKeyboard> = {\n    isDown: {},\n    justPressed: {},\n    justReleased: {},\n  };\n\n  globalThis.onkeydown = (e) => {\n    !keys.isDown[e.key] && (keys.justPressed[e.key] = true);\n    keys.isDown[e.key] = true;\n  };\n  globalThis.onkeyup = (e) => {\n    keys.isDown[e.key] = false;\n    keys.justReleased[e.key] = true;\n  };\n\n  return keys;\n}\n\nfunction keysUpdate(\n  keys: Record<\n    \"isDown\" | \"justPressed\" | \"justReleased\",\n    Record<string, boolean>\n  >,\n) {\n  for (const key in keys.justPressed) keys.justPressed[key] = false;\n  for (const key in keys.justReleased) keys.justReleased[key] = false;\n}\n\nfunction setUpPointer() {\n  const pointer = {\n    x: 0,\n    y: 0,\n    isDown: false,\n    justPressed: false,\n    justReleased: false,\n    pressPos: { x: 0, y: 0 },\n    releasePos: { x: 0, y: 0 },\n  };\n\n  globalThis.onpointerdown = (e) => {\n    ((pointer.x = e.x), (pointer.y = e.y));\n    Object.assign(pointer.pressPos, pointer);\n    pointer.isDown = pointer.justPressed = true;\n  };\n\n  globalThis.onpointerup = (e) => {\n    ((pointer.x = e.x), (pointer.y = e.y));\n    Object.assign(pointer.releasePos, pointer);\n    ((pointer.isDown = false), (pointer.justReleased = true));\n  };\n\n  globalThis.onpointermove = (e) => {\n    ((pointer.x = e.x), (pointer.y = e.y));\n  };\n\n  return pointer;\n}\n\nfunction pointerUpdate(\n  pointer: Record<\"isDown\" | \"justPressed\" | \"justReleased\", boolean>,\n) {\n  pointer.justPressed = false;\n  pointer.justReleased = false;\n}\n\nfunction setUpTime() {\n  return { dtMilli: 0, timeMilli: 0 };\n}\n\nfunction timeUpdate(time: { dtMilli: number; timeMilli: number }) {\n  time.dtMilli = performance.now() - time.timeMilli;\n  time.timeMilli += time.dtMilli;\n}\n\n// systems\nfunction handleDrawing(world: World) {\n  const oldF = Ctx2D.ctx.fillStyle;\n\n  Ctx2D.ctx.fillStyle = \"white\";\n  Ctx2D.ctx.beginPath();\n  world.query({ and: [Transform, Rect] }).forEach((e) => {\n    const t = world.getComponent(e, Transform);\n    const r = world.getComponent(e, Rect);\n    Ctx2D.ctx.rect(\n      t.x - r.width * 0.5,\n      t.y - r.height * 0.5,\n      r.width,\n      r.height,\n    );\n  });\n  Ctx2D.ctx.fill();\n\n  Ctx2D.ctx.transform(1, 0, 0, -1, 0, 0);\n  Ctx2D.ctx.drawImage(Assets[0], 0, 0, 10, 10, 0, 0, 10, 10);\n  Ctx2D.ctx.transform(1, 0, 0, -1, 0, 0);\n\n  Ctx2D.ctx.fillStyle = oldF;\n}\n\nfunction handleInput(world: World) {\n  world.query({ and: [Velocity, PlayerControl] }).forEach((e) => {\n    const v = world.getComponent(e, Velocity);\n    v.x = +!!Keys.isDown[\"d\"] - +!!Keys.isDown[\"a\"];\n    v.y = +!!Keys.isDown[\"w\"] - +!!Keys.isDown[\"s\"];\n    const speed = 100;\n    ((v.x *= speed), (v.y *= speed));\n\n    Pointer.justPressed && console.log(\"action\");\n  });\n}\n\nfunction handleMovement(world: World) {\n  world.query({ and: [Transform, Velocity] }).forEach((e) => {\n    const t = world.getComponent(e, Transform);\n    const v = world.getComponent(e, Velocity);\n    t.x += (v.x * Time.dtMilli) / 1000;\n    t.y += (v.y * Time.dtMilli) / 1000;\n  });\n}\n\nfunction handleCamera(world: World) {\n  world.query({ and: [Transform, Camera] }).forEach((e) => {\n    const t = world.getComponent(e, Transform);\n    const c = world.getComponent(e, Camera);\n    Ctx2D.ctx.setTransform(\n      c.zoom,\n      0,\n      0,\n      -c.zoom,\n      -t.x * c.zoom + Ctx2D.canvas.width * 0.5,\n      t.y * c.zoom + Ctx2D.canvas.height * 0.5,\n    );\n  });\n}\n\n// entities\nfunction addRect(\n  world: World,\n  x = 0,\n  y = 0,\n  rad = 0,\n  w = Rect.width,\n  h = Rect.height,\n) {\n  const e = world.addEntity();\n  const t = world.addComponent(e, Transform);\n  ((t.x = x), (t.y = y), (t.rad = rad));\n  const r = world.addComponent(e, Rect);\n  ((r.width = w), (r.height = h));\n  return e;\n}\n\nfunction addPlayer(world: World) {\n  const player = world.addEntity();\n  world.addComponent(player, Transform);\n  world.addComponent(player, Velocity);\n  world.addComponent(player, PlayerControl);\n  world.addComponent(player, Camera);\n  return player;\n}\n\n// initialization\nCtx2D.canvas.style.imageRendering = \"pixelated\";\nCtx2D.ctx.imageSmoothingEnabled = false;\n\nconst atlas = new Image();\natlas.src = \"./assets/roguelike_atlas.png\";\nAssets.push(atlas);\n\nconst game = new World();\naddPlayer(game);\naddRect(game, 10, 10);\naddRect(game, -10, -10);\n\n(function loop() {\n  const oldF = Ctx2D.ctx.fillStyle;\n  Ctx2D.ctx.fillStyle = \"blue\";\n  Ctx2D.ctx.resetTransform();\n  Ctx2D.ctx.fillRect(0, 0, Ctx2D.canvas.width, Ctx2D.canvas.height);\n  Ctx2D.ctx.fillStyle = oldF;\n\n  game.update(handleCamera, handleDrawing, handleInput, handleMovement);\n  pointerUpdate(Pointer);\n  keysUpdate(Keys);\n  timeUpdate(Time);\n  requestAnimationFrame(loop);\n})();\n"],
  "mappings": "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",
  "names": ["ObjectPoolMap", "objectFactory", "key", "index", "backKey", "removed", "ComponentManager", "component", "ObjectPoolMap", "entity", "p", "srcEntity", "destEntity", "pool", "newEntity", "World", "ComponentManager", "cleanUpMinutes", "entity", "newEntity", "src", "dest", "mask", "a", "component", "values", "compId", "fns", "i", "l", "query", "andMask", "notMask", "res", "_v", "k", "set", "Transform", "Velocity", "Rect", "Camera", "PlayerControl", "Ctx2D", "setUpCanvas2D", "Pointer", "setUpPointer", "Keys", "setUpKeyboard", "Assets", "Time", "setUpTime", "canvas", "ctx", "keys", "keysUpdate", "key", "pointer", "pointerUpdate", "timeUpdate", "time", "handleDrawing", "world", "oldF", "e", "t", "r", "handleInput", "v", "speed", "handleMovement", "handleCamera", "c", "addRect", "x", "y", "rad", "w", "h", "addPlayer", "player", "atlas", "game", "World", "loop"]
}
