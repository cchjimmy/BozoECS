(()=>{var y=class{storage=[];indices=new Map;objectFactory;size=0;constructor(t){this.objectFactory=t}len(){return this.size}addObj(t){let s;return this.size<this.storage.length?s=this.storage[this.size]:(s=this.objectFactory(),this.storage.push(s)),this.indices.set(t,this.size),this.size++,s}removeObj(t){let s=this.indices.get(t)??-1;if(s<0||s>=this.size)return!1;let n=this.storage[s];this.storage[s]=this.storage[this.size-1],this.storage[this.size-1]=n;for(let[i,o]of this.indices)if(o==this.size-1){this.indices.set(i,s);break}return this.indices.delete(t),this.size--,!0}getObj(t){let s=this.indices.get(t)??-1;if(s<0||s>=this.size)throw new Error("Index out of range.");return this.storage[s]}};var r=class e{static pools=new Map;static idMap=new Map;static register(t){e.pools.has(t)||(e.idMap.set(t,e.idMap.size),e.pools.set(t,new y(()=>({...t}))))}static getId(t){return e.idMap.get(t)??-1}static add(t,s){return Object.assign(e.pools.get(s).addObj(t),s)}static delete(t,s){return e.pools.get(s).removeObj(t)}static get(t,s){return e.pools.get(s).getObj(t)}static len(t){return e.pools.get(t).len()}static typeLen(){return e.pools.size}static types(){return e.pools.keys().toArray()}};var c=class e{static maskMap=new Map;static archetypeMap=new Map;static worlds=[];static entitiesToDelete=[];localEntities=new Set;constructor(){e.worlds.push(this)}static createEntity(){let t=Math.random();return e.maskMap.set(t,0),e.getArchetype(0).add(t),t}static copyEntity(t){let s=Math.random(),n=r.types(),i=this.maskMap.get(t)??0;e.maskMap.set(s,i),e.getArchetype(i).add(s);for(let o=0,l=n.length;o<l;o++)i&1<<o&&Object.assign(r.add(s,n[o]),r.get(t,n[o]));return s}static getArchetype(t){let s=e.archetypeMap.get(t)??new Set;return e.archetypeMap.set(t,s),s}static deleteEntity(t){e.entitiesToDelete.push(t)}addEntity(t=e.createEntity()){return this.localEntities.add(t),t}removeEntity(t){this.localEntities.delete(t)}static registerComponent(t){return r.register(t),e}static hasComponent(t,s){return((e.maskMap.get(t)??0)&1<<r.getId(s))>0}static addComponent(t,s,n=s){e.registerComponent(s);let i=e.maskMap.get(t)??0,o=r.getId(s);return(i&1<<o)!=0?Object.assign(r.get(t,s),n):(e.getArchetype(i).delete(t),i|=1<<o,e.maskMap.set(t,i),e.getArchetype(i).add(t),Object.assign(r.add(t,s),n))}static removeComponent(t,s){e.registerComponent(s);let n=e.maskMap.get(t)??0,i=r.getId(s);return(n&1<<i)==0?!1:(e.getArchetype(n).delete(t),n&=~(1<<i),e.maskMap.set(t,n),e.getArchetype(n).add(t),r.delete(t,s))}static getComponent(t,s){return r.get(t,s)}update(...t){for(let s=0,n=t.length;s<n;s++)t[s](this);for(;e.entitiesToDelete.length;){let s=e.entitiesToDelete.pop();for(let o=0,l=e.worlds.length;o<l;o++)e.worlds[o].localEntities.delete(s);let n=r.types(),i=e.maskMap.get(s)??0;e.maskMap.delete(s),e.getArchetype(i).delete(s);for(let o=0,l=n.length;o<l;o++)i&1<<o&&r.delete(s,n[o])}}query(t){let s=0,n=0;if(t.and)for(let o=0,l=t.and.length;o<l;o++)s|=1<<r.getId(t.and[o]);if(t.not)for(let o=0,l=t.not.length;o<l;o++)n|=1<<r.getId(t.not[o]);let i=[];for(let o=e.archetypeMap.keys().toArray(),l=o.length,h=0;h<l;h++){let p=o[h],M=e.getArchetype(p);M.size!=0&&(p&s)==s&&(p&n)==0&&i.push(...M)}return[...this.localEntities.intersection(new Set(i))]}entityCount(){return this.localEntities.size}};var d={x:0,y:0,rad:0,scaleX:0,scaleY:0},f={x:0,y:0},u={width:10,height:10},w={zoom:4},j={},a=E(),C=P(),g=v(),b=[],x=A();function E(){let e=document.querySelector("canvas")??document.createElement("canvas");if(!e)throw new Error("Cannot create canvas element.");let t=e.getContext("2d");if(!t)throw new Error("Cannot initialize context 2d.");return document.body.appendChild(e),globalThis.onresize=globalThis.onload=()=>{innerWidth/innerHeight<e.width/e.height?(e.style.width="100%",e.style.height=""):(e.style.width="",e.style.height="100%")},{canvas:e,ctx:t}}function v(){let e={isDown:{},justPressed:{},justReleased:{}};return globalThis.onkeydown=t=>{!e.isDown[t.key]&&(e.justPressed[t.key]=!0),e.isDown[t.key]=!0},globalThis.onkeyup=t=>{e.isDown[t.key]=!1,e.justReleased[t.key]=!0},e}function D(e){for(let t in e.justPressed)e.justPressed[t]=!1;for(let t in e.justReleased)e.justReleased[t]=!1}function P(){let e={x:0,y:0,isDown:!1,justPressed:!1,justReleased:!1,pressPos:{x:0,y:0},releasePos:{x:0,y:0}};return globalThis.onpointerdown=t=>{e.x=t.x,e.y=t.y,Object.assign(e.pressPos,e),e.isDown=e.justPressed=!0},globalThis.onpointerup=t=>{e.x=t.x,e.y=t.y,Object.assign(e.releasePos,e),e.isDown=!1,e.justReleased=!0},globalThis.onpointermove=t=>{e.x=t.x,e.y=t.y},e}function T(e){e.justPressed=!1,e.justReleased=!1}function A(){return{dtMilli:0,timeMilli:0}}function I(e){e.dtMilli=performance.now()-e.timeMilli,e.timeMilli+=e.dtMilli}function O(e){let t=a.ctx.fillStyle;a.ctx.fillStyle="white",a.ctx.beginPath(),e.query({and:[d,u]}).forEach(s=>{let n=c.getComponent(s,d),i=c.getComponent(s,u);a.ctx.rect(n.x-i.width*.5,n.y-i.height*.5,i.width,i.height)}),a.ctx.fill(),a.ctx.transform(1,0,0,-1,0,0),a.ctx.drawImage(b[0],0,0,10,10,0,0,10,10),a.ctx.transform(1,0,0,-1,0,0),a.ctx.fillStyle=t}function R(e){e.query({and:[f,j]}).forEach(t=>{let s=c.getComponent(t,f);s.x=+!!g.isDown.d-+!!g.isDown.a,s.y=+!!g.isDown.w-+!!g.isDown.s;let n=100;s.x*=n,s.y*=n,C.justPressed&&console.log("action")})}function S(e){e.query({and:[d,f]}).forEach(t=>{let s=c.getComponent(t,d),n=c.getComponent(t,f);s.x+=n.x*x.dtMilli/1e3,s.y+=n.y*x.dtMilli/1e3})}function U(e){e.query({and:[d,w]}).forEach(t=>{let s=c.getComponent(t,d),n=c.getComponent(t,w);a.ctx.setTransform(n.zoom,0,0,-n.zoom,-s.x*n.zoom+a.canvas.width*.5,s.y*n.zoom+a.canvas.height*.5)})}function k(e,t=0,s=0,n=0,i=u.width,o=u.height){let l=e.addEntity(),h=c.addComponent(l,d);h.x=t,h.y=s,h.rad=n;let p=c.addComponent(l,u);return p.width=i,p.height=o,l}function F(e){let t=e.addEntity();return c.addComponent(t,d),c.addComponent(t,f),c.addComponent(t,j),c.addComponent(t,w),t}a.canvas.style.imageRendering="pixelated";a.ctx.imageSmoothingEnabled=!1;var z=new Image;z.src="./assets/roguelike_atlas.png";b.push(z);var m=new c;F(m);k(m,10,10);k(m,-10,-10);(function e(){let t=a.ctx.fillStyle;a.ctx.fillStyle="blue",a.ctx.resetTransform(),a.ctx.fillRect(0,0,a.canvas.width,a.canvas.height),a.ctx.fillStyle=t,m.update(U,O,R,S),T(C),D(g),I(x),requestAnimationFrame(e)})();})();
//# sourceMappingURL=out.js.map
