(()=>{var m=class{storage=[];indices=new Map;objectFactory;size=0;constructor(t){this.objectFactory=t}len(){return this.size}add(t){let s=this.indices.get(t);return s!=null?this.storage[s]:(this.size>=this.storage.length&&this.storage.push(this.objectFactory()),this.indices.set(t,this.size),this.size++,this.storage[this.size-1])}remove(t){let s=this.indices.get(t)??-1;if(s<0||s>=this.size)return!1;let n=this.storage[s];this.storage[s]=this.storage[this.size-1],this.storage[this.size-1]=n;for(let[o,a]of this.indices)if(a==this.size-1){this.indices.set(o,s);break}return this.indices.delete(t),this.size--,!0}get(t){let s=this.indices.get(t)??-1;if(s<0||s>=this.size)throw new Error("Index out of range.");return this.storage[s]}has(t){return this.indices.has(t)}};function y(){return Math.random()}var c=class e{static pools=new Map;static idMap=new Map;static register(t){e.pools.has(t)||(e.idMap.set(t,e.idMap.size),e.pools.set(t,new m(()=>({...t}))))}static getId(t){return e.idMap.get(t)??-1}static add(t,s){return Object.assign(e.pools.get(s).add(t),s)}static remove(t,s){return e.pools.get(s).remove(t)}static get(t,s){return e.pools.get(s).get(t)}static len(t){return e.pools.get(t).len()}static delete(t){for(let s of this.pools){let n=s[1];n.has(t)&&n.remove(t)}}static copy(t){let s=y();for(let n of this.pools){let o=n[1];o.has(t)&&Object.assign(o.add(s),o.get(t))}return s}};var r=class e{static maskMap=new Map;static archetypeMap=new Map;static worlds=[];static entitiesToDelete=[];localEntities=new Set;constructor(){e.worlds.push(this)}static createEntity(){let t=y();return e.maskMap.set(t,0),e.getArchetype(0).add(t),t}static copyEntity(t){let s=c.copy(t),n=this.maskMap.get(t)??0;return this.maskMap.set(s,n),this.getArchetype(n).add(s),s}static getArchetype(t){let s=e.archetypeMap.get(t)??new Set;return e.archetypeMap.set(t,s),s}static deleteEntity(t){e.entitiesToDelete.push(t)}addEntity(t=e.createEntity()){return this.localEntities.add(t),t}removeEntity(t){this.localEntities.delete(t)}static registerComponent(t){return c.register(t),e}static hasComponent(t,s){return((e.maskMap.get(t)??0)&1<<c.getId(s))>0}static addComponent(t,s,n=s){e.registerComponent(s);let o=e.maskMap.get(t)??0,a=c.getId(s);return(o&1<<a)!=0?Object.assign(c.get(t,s),n):(e.getArchetype(o).delete(t),o|=1<<a,e.maskMap.set(t,o),e.getArchetype(o).add(t),Object.assign(c.add(t,s),n))}static removeComponent(t,s){e.registerComponent(s);let n=e.maskMap.get(t)??0,o=c.getId(s);return(n&1<<o)==0?!1:(e.getArchetype(n).delete(t),n&=~(1<<o),e.maskMap.set(t,n),e.getArchetype(n).add(t),c.remove(t,s))}static getComponent(t,s){return c.get(t,s)}update(...t){for(let s=0,n=t.length;s<n;s++)t[s](this);for(;e.entitiesToDelete.length;){let s=e.entitiesToDelete.pop();for(let o=0,a=e.worlds.length;o<a;o++)e.worlds[o].localEntities.delete(s);c.delete(s);let n=e.maskMap.get(s)??0;e.maskMap.delete(s),e.getArchetype(n).delete(s)}}query(t){let s=0,n=0;if(t.and)for(let a=0,l=t.and.length;a<l;a++)s|=1<<c.getId(t.and[a]);if(t.not)for(let a=0,l=t.not.length;a<l;a++)n|=1<<c.getId(t.not[a]);let o=[];for(let a=e.archetypeMap.keys().toArray(),l=a.length,h=0;h<l;h++){let p=a[h],C=e.getArchetype(p);C.size!=0&&(p&s)==s&&(p&n)==0&&o.push(...C)}return[...this.localEntities.intersection(new Set(o))]}entityCount(){return this.localEntities.size}};var d={x:0,y:0,rad:0,scaleX:0,scaleY:0},f={x:0,y:0},u={width:10,height:10},x={zoom:4},k={},i=z(),E=T(),g=D(),j=[],M=I();function z(){let e=document.querySelector("canvas")??document.createElement("canvas");if(!e)throw new Error("Cannot create canvas element.");let t=e.getContext("2d");if(!t)throw new Error("Cannot initialize context 2d.");return document.body.appendChild(e),globalThis.onresize=globalThis.onload=()=>{innerWidth/innerHeight<e.width/e.height?(e.style.width="100%",e.style.height=""):(e.style.width="",e.style.height="100%")},{canvas:e,ctx:t}}function D(){let e={isDown:{},justPressed:{},justReleased:{}};return globalThis.onkeydown=t=>{!e.isDown[t.key]&&(e.justPressed[t.key]=!0),e.isDown[t.key]=!0},globalThis.onkeyup=t=>{e.isDown[t.key]=!1,e.justReleased[t.key]=!0},e}function P(e){for(let t in e.justPressed)e.justPressed[t]=!1;for(let t in e.justReleased)e.justReleased[t]=!1}function T(){let e={x:0,y:0,isDown:!1,justPressed:!1,justReleased:!1,pressPos:{x:0,y:0},releasePos:{x:0,y:0}};return globalThis.onpointerdown=t=>{e.x=t.x,e.y=t.y,Object.assign(e.pressPos,e),e.isDown=e.justPressed=!0},globalThis.onpointerup=t=>{e.x=t.x,e.y=t.y,Object.assign(e.releasePos,e),e.isDown=!1,e.justReleased=!0},globalThis.onpointermove=t=>{e.x=t.x,e.y=t.y},e}function A(e){e.justPressed=!1,e.justReleased=!1}function I(){return{dtMilli:0,timeMilli:0}}function R(e){e.dtMilli=performance.now()-e.timeMilli,e.timeMilli+=e.dtMilli}function S(e){let t=i.ctx.fillStyle;i.ctx.fillStyle="white",i.ctx.beginPath(),e.query({and:[d,u]}).forEach(s=>{let n=r.getComponent(s,d),o=r.getComponent(s,u);i.ctx.rect(n.x-o.width*.5,n.y-o.height*.5,o.width,o.height)}),i.ctx.fill(),i.ctx.transform(1,0,0,-1,0,0),i.ctx.drawImage(j[0],0,0,10,10,0,0,10,10),i.ctx.transform(1,0,0,-1,0,0),i.ctx.fillStyle=t}function U(e){e.query({and:[f,k]}).forEach(t=>{let s=r.getComponent(t,f);s.x=+!!g.isDown.d-+!!g.isDown.a,s.y=+!!g.isDown.w-+!!g.isDown.s;let n=100;s.x*=n,s.y*=n,E.justPressed&&console.log("action")})}function F(e){e.query({and:[d,f]}).forEach(t=>{let s=r.getComponent(t,d),n=r.getComponent(t,f);s.x+=n.x*M.dtMilli/1e3,s.y+=n.y*M.dtMilli/1e3})}function O(e){e.query({and:[d,x]}).forEach(t=>{let s=r.getComponent(t,d),n=r.getComponent(t,x);i.ctx.setTransform(n.zoom,0,0,-n.zoom,-s.x*n.zoom+i.canvas.width*.5,s.y*n.zoom+i.canvas.height*.5)})}function b(e,t=0,s=0,n=0,o=u.width,a=u.height){let l=e.addEntity(),h=r.addComponent(l,d);h.x=t,h.y=s,h.rad=n;let p=r.addComponent(l,u);return p.width=o,p.height=a,l}function q(e){let t=e.addEntity();return r.addComponent(t,d),r.addComponent(t,f),r.addComponent(t,k),r.addComponent(t,x),t}i.canvas.style.imageRendering="pixelated";i.ctx.imageSmoothingEnabled=!1;var v=new Image;v.src="./assets/roguelike_atlas.png";j.push(v);var w=new r;q(w);b(w,10,10);b(w,-10,-10);(function e(){let t=i.ctx.fillStyle;i.ctx.fillStyle="blue",i.ctx.resetTransform(),i.ctx.fillRect(0,0,i.canvas.width,i.canvas.height),i.ctx.fillStyle=t,w.update(O,S,U,F),A(E),P(g),R(M),requestAnimationFrame(e)})();})();
//# sourceMappingURL=out.js.map
