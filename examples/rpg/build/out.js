(()=>{var g=class{storage=[];keyToIndex=new Map;indexToKey=[];objectFactory;size=0;constructor(e){this.objectFactory=e}len(){return this.size}add(e){let s=this.keyToIndex.get(e);return s!=null?this.storage[s]:(this.size>=this.storage.length&&this.storage.push(this.objectFactory()),this.keyToIndex.set(e,this.size),this.indexToKey[this.size]=e,this.size++,this.storage[this.size-1])}remove(e){let s=this.keyToIndex.get(e)??-1,n=this.indexToKey[this.size-1];if(s<0||s>=this.size||!n)return!1;let o=this.storage[s];return this.storage[s]=this.storage[this.size-1],this.storage[this.size-1]=o,this.keyToIndex.set(n,s),this.keyToIndex.delete(e),this.indexToKey[s]=n,this.size--,!0}get(e){let s=this.keyToIndex.get(e)??-1;if(s<0||s>=this.size)throw new Error("Index out of range.");return this.storage[s]}has(e){return this.keyToIndex.has(e)}clean(){this.storage.splice(this.size),this.indexToKey.splice(this.size);for(let e of this.keyToIndex.keys()){let s=this.keyToIndex.get(e)??-1;(s<0||s>=this.size)&&this.keyToIndex.delete(e)}}};var m=class{pools=new Map;idMap=new Map;register(e){this.pools.has(e)||(this.idMap.set(e,this.idMap.size),this.pools.set(e,new g(()=>({...e}))))}getId(e){return this.idMap.get(e)??-1}add(e,s){return Object.assign(this.pools.get(s).add(e),s)}remove(e,s){return this.pools.get(s).remove(e)}get(e,s){return this.pools.get(s).get(e)}len(e){return this.pools.get(e).len()}delete(e){for(let s of this.pools.values())s.remove(e)}copy(e,s){for(let n of this.pools.values()){let o=n;o.has(e)&&Object.assign(o.add(s),o.get(e))}}clean(){for(let e of this.pools.values())e.clean()}};function f(){return Math.random()}var u=class{maskMap=new Map;archetypeMap=new Map;entitiesToDelete=[];compManager=new m;addEntity(e=f()){return this.maskMap.set(e,0),this.getArchetype(0).add(e),e}copyEntity(e,s=f()){this.compManager.copy(e,s);let n=this.maskMap.get(e)??0;return this.maskMap.set(s,n),this.getArchetype(n).add(s),s}getArchetype(e){let s=this.archetypeMap.get(e)??new Set;return this.archetypeMap.set(e,s),s}deleteEntity(e){this.entitiesToDelete.push(e)}registerComponent(e){return this.compManager.register(e),this}hasComponent(e,s){return((this.maskMap.get(e)??0)&1<<this.compManager.getId(s))>0}addComponent(e,s,n=s){this.registerComponent(s);let o=this.maskMap.get(e)??0,a=this.compManager.getId(s);return(o&1<<a)!=0?Object.assign(this.compManager.get(e,s),n):(this.getArchetype(o).delete(e),o|=1<<a,this.maskMap.set(e,o),this.getArchetype(o).add(e),Object.assign(this.compManager.add(e,s),n))}removeComponent(e,s){this.registerComponent(s);let n=this.maskMap.get(e)??0,o=this.compManager.getId(s);return(n&1<<o)==0?!1:(this.getArchetype(n).delete(e),n&=~(1<<o),this.maskMap.set(e,n),this.getArchetype(n).add(e),this.compManager.remove(e,s))}getComponent(e,s){return this.compManager.get(e,s)}update(...e){for(let s=0,n=e.length;s<n;s++)e[s](this);this.commitEntityDeletion()}commitEntityDeletion(){for(;this.entitiesToDelete.length;){let e=this.entitiesToDelete.pop();this.compManager.delete(e);let s=this.maskMap.get(e)??0;this.maskMap.delete(e),this.getArchetype(s).delete(e)}}cleanObjectPools(){this.compManager.clean()}query(e){let s=0,n=0;if(e.and)for(let a=0,r=e.and.length;a<r;a++)s|=1<<this.compManager.getId(e.and[a]);if(e.not)for(let a=0,r=e.not.length;a<r;a++)n|=1<<this.compManager.getId(e.not[a]);let o=[];return this.archetypeMap.forEach((a,r)=>{let c=a;c.size>0&&(r&s)==s&&(r&n)==0&&o.push(...c)}),[...new Set(o)]}entityCount(){return this.maskMap.size}};var h={x:0,y:0,rad:0,scaleX:0,scaleY:0},p={x:0,y:0},d={width:10,height:10},x={zoom:4},w={},i=b(),T=D(),l=v(),C=[],M=P();function b(){let t=document.querySelector("canvas")??document.createElement("canvas");if(!t)throw new Error("Cannot create canvas element.");let e=t.getContext("2d");if(!e)throw new Error("Cannot initialize context 2d.");return document.body.appendChild(t),globalThis.onresize=globalThis.onload=()=>{innerWidth/innerHeight<t.width/t.height?(t.style.width="100%",t.style.height=""):(t.style.width="",t.style.height="100%")},{canvas:t,ctx:e}}function v(){let t={isDown:{},justPressed:{},justReleased:{}};return globalThis.onkeydown=e=>{!t.isDown[e.key]&&(t.justPressed[e.key]=!0),t.isDown[e.key]=!0},globalThis.onkeyup=e=>{t.isDown[e.key]=!1,t.justReleased[e.key]=!0},t}function I(t){for(let e in t.justPressed)t.justPressed[e]=!1;for(let e in t.justReleased)t.justReleased[e]=!1}function D(){let t={x:0,y:0,isDown:!1,justPressed:!1,justReleased:!1,pressPos:{x:0,y:0},releasePos:{x:0,y:0}};return globalThis.onpointerdown=e=>{t.x=e.x,t.y=e.y,Object.assign(t.pressPos,t),t.isDown=t.justPressed=!0},globalThis.onpointerup=e=>{t.x=e.x,t.y=e.y,Object.assign(t.releasePos,t),t.isDown=!1,t.justReleased=!0},globalThis.onpointermove=e=>{t.x=e.x,t.y=e.y},t}function E(t){t.justPressed=!1,t.justReleased=!1}function P(){return{dtMilli:0,timeMilli:0}}function R(t){t.dtMilli=performance.now()-t.timeMilli,t.timeMilli+=t.dtMilli}function A(t){let e=i.ctx.fillStyle;i.ctx.fillStyle="white",i.ctx.beginPath(),t.query({and:[h,d]}).forEach(s=>{let n=t.getComponent(s,h),o=t.getComponent(s,d);i.ctx.rect(n.x-o.width*.5,n.y-o.height*.5,o.width,o.height)}),i.ctx.fill(),i.ctx.transform(1,0,0,-1,0,0),i.ctx.drawImage(C[0],0,0,10,10,0,0,10,10),i.ctx.transform(1,0,0,-1,0,0),i.ctx.fillStyle=e}function S(t){t.query({and:[p,w]}).forEach(e=>{let s=t.getComponent(e,p);s.x=+!!l.isDown.d-+!!l.isDown.a,s.y=+!!l.isDown.w-+!!l.isDown.s;let n=100;s.x*=n,s.y*=n,T.justPressed&&console.log("action")})}function K(t){t.query({and:[h,p]}).forEach(e=>{let s=t.getComponent(e,h),n=t.getComponent(e,p);s.x+=n.x*M.dtMilli/1e3,s.y+=n.y*M.dtMilli/1e3})}function O(t){t.query({and:[h,x]}).forEach(e=>{let s=t.getComponent(e,h),n=t.getComponent(e,x);i.ctx.setTransform(n.zoom,0,0,-n.zoom,-s.x*n.zoom+i.canvas.width*.5,s.y*n.zoom+i.canvas.height*.5)})}function z(t,e=0,s=0,n=0,o=d.width,a=d.height){let r=t.addEntity(),c=t.addComponent(r,h);c.x=e,c.y=s,c.rad=n;let k=t.addComponent(r,d);return k.width=o,k.height=a,r}function U(t){let e=t.addEntity();return t.addComponent(e,h),t.addComponent(e,p),t.addComponent(e,w),t.addComponent(e,x),e}i.canvas.style.imageRendering="pixelated";i.ctx.imageSmoothingEnabled=!1;var j=new Image;j.src="./assets/roguelike_atlas.png";C.push(j);var y=new u;U(y);z(y,10,10);z(y,-10,-10);(function t(){let e=i.ctx.fillStyle;i.ctx.fillStyle="blue",i.ctx.resetTransform(),i.ctx.fillRect(0,0,i.canvas.width,i.canvas.height),i.ctx.fillStyle=e,y.update(O,A,S,K),E(T),I(l),R(M),requestAnimationFrame(t)})();})();
//# sourceMappingURL=out.js.map
