{
  "version": 3,
  "sources": ["../../../src/pool.ts", "../../../src/component.ts", "../../../src/entity.ts", "../../../src/world.ts", "../src/config.json", "../src/main.ts"],
  "sourcesContent": ["export class ObjectPool<T> {\n  private storage: T[] = [];\n  private objectFactory: () => T;\n  private size = 0;\n\n  constructor(objectFactory: () => T) {\n    this.objectFactory = objectFactory;\n  }\n\n  len() {\n    return this.size;\n  }\n\n  addObj(): T {\n    let obj;\n    if (this.size < this.storage.length) {\n      obj = this.storage[this.size];\n    } else {\n      obj = this.objectFactory();\n      this.storage.push(obj);\n    }\n    this.size++;\n    return obj;\n  }\n\n  findIndex(object: T): number {\n    return this.storage.findIndex((v) => v == object);\n  }\n\n  removeObj(index: number): T {\n    if (index < 0 || index >= this.size) throw new Error(\"Index out of range.\");\n    const removed = this.storage[index];\n    // swap with last to maintain packed\n    this.storage[index] = this.storage[this.storage.length - 1];\n    this.storage[this.storage.length - 1] = removed;\n    this.size--;\n    return removed;\n  }\n\n  getObj(index: number): T {\n    if (index < 0 || index >= this.size) throw new Error(\"Index out of range.\");\n    return this.storage[index];\n  }\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport class ComponentManager {\n  private static pools: Map<object, unknown> = new Map();\n  private static idMap: Map<object, number> = new Map();\n\n  static register<T extends object>(component: T) {\n    ComponentManager.idMap.set(component, ComponentManager.idMap.size);\n    ComponentManager.pools.set(\n      component,\n      new ObjectPool<T>(() => ({ ...component })),\n    );\n  }\n\n  static getId<T extends object>(component: T): number {\n    return ComponentManager.idMap.get(component) ?? -1;\n  }\n\n  static add<T extends object>(component: T): T {\n    return Object.assign(\n      (ComponentManager.pools.get(component) as ObjectPool<T>).addObj(),\n      component,\n    );\n  }\n\n  static delete<T extends object>(component: T, index: number): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).removeObj(\n      index,\n    );\n  }\n\n  static get<T extends object>(component: T, index: number): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).getObj(\n      index,\n    );\n  }\n\n  static len<T extends object>(component: T): number {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).len();\n  }\n\n  static typeLen(): number {\n    return ComponentManager.pools.size;\n  }\n\n  static types(): object[] {\n    return ComponentManager.pools.keys().toArray();\n  }\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport type entityT = number;\n\nexport class EntityManager {\n  static nextId = 0;\n  static pool = new ObjectPool<entityT>(() => EntityManager.nextId++);\n\n  static add(): entityT {\n    return EntityManager.pool.addObj();\n  }\n\n  static findIndex(entity: entityT): number {\n    return EntityManager.pool.findIndex(entity);\n  }\n\n  static delete(index: number): entityT {\n    return EntityManager.pool.removeObj(index);\n  }\n}\n", "import { ComponentManager } from \"./component.ts\";\nimport { EntityManager, entityT } from \"./entity.ts\";\n\nexport type queryT = Partial<Record<\"and\" | \"or\" | \"not\", object[]>>;\n\nexport class World {\n  private static indexMap: Map<object, Map<number, number>> = new Map();\n  private static maskMap: Map<number, number> = new Map();\n  private static archetypeMap: Map<number, Set<entityT>> = new Map();\n  private static worlds: World[] = [];\n\n  private localEntities: Set<entityT> = new Set();\n  timeMilli = 0;\n  dtMilli = 0;\n\n  constructor() {\n    World.worlds.push(this);\n  }\n\n  static createEntity(): entityT {\n    const entity = EntityManager.add();\n    World.maskMap.set(entity, 0);\n    World.getArchetype(0).add(entity);\n    return entity;\n  }\n\n  private static getArchetype(mask: number): Set<entityT> {\n    const a = World.archetypeMap.get(mask) ?? new Set();\n    World.archetypeMap.set(mask, a);\n    return a;\n  }\n\n  static deleteEntity(entity: entityT) {\n    for (let i = 0, l = World.worlds.length; i < l; i++) {\n      World.worlds[i].removeEntity(entity);\n    }\n    const types = ComponentManager.types();\n    const mask = World.maskMap.get(entity) as number;\n    for (let i = 0, l = types.length; i < l; i++) {\n      if (!(mask & (1 << i))) continue;\n      World.removeComponent(entity, types[i]);\n    }\n    EntityManager.delete(EntityManager.findIndex(entity));\n  }\n\n  addEntity(entity: entityT = World.createEntity()): entityT {\n    this.localEntities.add(entity);\n    return entity;\n  }\n\n  removeEntity(entity: entityT) {\n    this.localEntities.delete(entity);\n  }\n\n  entityExists(entity: entityT): boolean {\n    return this.localEntities.has(entity);\n  }\n\n  static registerComponent<T extends object>(component: T): typeof World {\n    if (World.indexMap.has(component)) return World;\n    ComponentManager.register(component);\n    World.indexMap.set(component, new Map());\n    return World;\n  }\n\n  static hasComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): boolean {\n    return !!(\n      (World.maskMap.get(entity) as number) &\n      (1 << ComponentManager.getId(component))\n    );\n  }\n\n  static addComponent<T extends object>(\n    entity: entityT,\n    component: T,\n    values: Partial<T> = {},\n  ): T {\n    World.registerComponent(component);\n    let mask = World.maskMap.get(entity) as number;\n    const compId = ComponentManager.getId(component);\n    if ((mask & (1 << compId)) != 0) {\n      throw new Error(`Entity ${entity} already had that component.`);\n    }\n    World.getArchetype(mask).delete(entity);\n    mask |= 1 << compId;\n    World.maskMap.set(entity, mask);\n    World.getArchetype(mask).add(entity);\n    const idx = ComponentManager.len(component);\n    (World.indexMap.get(component) as Map<number, number>).set(entity, idx);\n    return Object.assign(ComponentManager.add(component), values);\n  }\n\n  static removeComponent<T extends object>(entity: entityT, component: T): T {\n    World.registerComponent(component);\n    let mask = World.maskMap.get(entity) as number;\n    const compId = ComponentManager.getId(component);\n    if ((mask & (1 << compId)) == 0) {\n      throw new Error(`Entity ${entity} does not have that component.`);\n    }\n    World.getArchetype(mask).delete(entity);\n    mask &= ~(1 << compId);\n    World.maskMap.set(entity, mask);\n    World.getArchetype(mask).add(entity);\n    const indices = World.indexMap.get(component) as Map<number, number>;\n    const entityIdx = indices.get(entity) as number;\n    const removed = ComponentManager.delete(component, entityIdx);\n    const backEntity = indices.keys().toArray().at(-1) ?? -1;\n    indices.set(backEntity, entityIdx);\n    indices.delete(entity);\n    return removed;\n  }\n\n  static getComponent<T extends object>(entity: entityT, component: T): T {\n    return ComponentManager.get(\n      component,\n      (World.indexMap.get(component) as Map<number, number>).get(\n        entity,\n      ) as number,\n    );\n  }\n\n  update(...fns: ((world: World) => void)[]) {\n    for (let i = 0, l = fns.length; i < l; i++) fns[i](this);\n    this.dtMilli = performance.now() - this.timeMilli;\n    this.timeMilli += this.dtMilli;\n  }\n\n  query(query: queryT): entityT[] {\n    let andMask = 0,\n      orMask = 0,\n      notMask = 0;\n    if (query.and) {\n      for (let i = 0, l = query.and.length; i < l; i++) {\n        andMask |= 1 << ComponentManager.getId(query.and[i]);\n      }\n    }\n    if (query.or) {\n      for (let i = 0, l = query.or.length; i < l; i++) {\n        orMask |= 1 << ComponentManager.getId(query.or[i]);\n      }\n    }\n    if (query.not) {\n      for (let i = 0, l = query.not.length; i < l; i++) {\n        notMask |= 1 << ComponentManager.getId(query.not[i]);\n      }\n    }\n    const res = [];\n    for (\n      let archetypes = World.archetypeMap.keys().toArray(),\n        l = archetypes.length,\n        i = 0;\n      i < l;\n      i++\n    ) {\n      const a = archetypes[i];\n      const set = World.getArchetype(a);\n      if (\n        set.size > 0 &&\n        (a & andMask) == andMask &&\n        (a | orMask) > 0 &&\n        (a & notMask) == 0\n      ) {\n        res.push(...this.localEntities.intersection(set));\n      }\n    }\n    return res;\n  }\n\n  entityCount(): number {\n    return this.localEntities.size;\n  }\n}\n", "{\n  \"viewport\": {\n    \"width\": 800,\n    \"height\": 400\n  },\n  \"player\": {\n    \"speed\": 20\n  },\n  \"minions\": {\n    \"speed\": 20,\n    \"spawnRate\": 2\n  }\n}\n", "/**\n * By Original PNG version by Raizin, SVG rework by Sameboat. - file:Map of MOBA.png (CC 3.0), CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=29443207\n */\n\nimport { entityT, World } from \"../../../src/index.ts\";\nimport { default as config } from \"./config.json\" with { type: \"json\" };\n\n// components\nconst PIDController = {\n  kp: 0,\n  ki: 0,\n  kd: 0,\n  prevErr: 0,\n  accumErr: 0,\n  result: function (currentErr: number, dt: number): number {\n    if (dt == 0) return 0;\n    this.accumErr += currentErr;\n    const out =\n      this.kp * currentErr +\n      this.ki * this.accumErr +\n      (this.kd * (currentErr - this.prevErr)) / dt;\n    this.prevErr = currentErr;\n    return out;\n  },\n  reset: function (): void {\n    this.prevErr = this.accumErr = 0;\n  },\n};\nconst Stats = {\n  healthPoint: 0,\n  attackPoint: 0,\n  defencePoint: 0,\n  abilityPower: 0,\n  moveSpeed: 0,\n  attackSpeed: 0,\n};\nconst Callback = { callback: new Function() };\nconst Transform = { x: 0, y: 0, rad: 0, scaleX: 1, scaleY: 1 };\nconst Velocity = { x: 0, y: 0 };\nconst PlayerControl = {};\nconst Camera = { zoom: 20, tilt: 0, isActive: false };\nconst Rect = { width: 2, height: 2 };\nconst Graphic = { src: \"\" };\nconst Button = {\n  hovered: false,\n  pressed: false,\n  clicked: false,\n};\nconst Colour = { fill: \"white\", stroke: \"black\" };\nconst Text = {\n  content: \"\",\n  fontSize: 20,\n  padding: 3,\n  color: \"black\",\n  backgroundColor: \"white\",\n};\nconst Timer = {\n  timeMilli: 0,\n  reset: false,\n  stop: false,\n};\nconst PathFinder = {\n  targetX: 0,\n  targetY: 0,\n};\n\n// singletons\nconst Mouse = {\n  x: 0,\n  y: 0,\n  isDown: false,\n  pressPos: { x: 0, y: 0 },\n  justPressed: false,\n  justReleased: false,\n  releasePos: { x: 0, y: 0 },\n};\nconst Keys: Record<KeyboardEvent[\"key\"], boolean> = {};\n\n// systems\nfunction handleInput(world: World) {\n  let camera: typeof Camera | null;\n  let camTransform: typeof Transform | null;\n  world.query({ and: [Camera, Transform] }).forEach((e) => {\n    const c = World.getComponent(e, Camera);\n    if (!c.isActive) return;\n    camera = c;\n    camTransform = World.getComponent(e, Transform);\n    if (Keys[\"q\"]) {\n      camera.tilt += (1 * world.dtMilli) / 1000;\n    }\n    if (Keys[\"e\"]) {\n      camera.tilt -= (1 * world.dtMilli) / 1000;\n    }\n  });\n  world.query({ and: [PathFinder, PlayerControl] }).forEach((e) => {\n    if (!camera || !camTransform) return;\n    const pf = World.getComponent(e, PathFinder);\n    if (Mouse.justPressed) {\n      const worldPos = screenToWorld(\n        { x: Mouse.x, y: Mouse.y },\n        camTransform,\n        camera.tilt,\n        camera.zoom,\n      );\n      pf.targetX = worldPos.x;\n      pf.targetY = worldPos.y;\n    }\n  });\n}\n\nfunction handlePathfind(world: World) {\n  world\n    .query({\n      and: [PathFinder, Transform, Velocity, Stats],\n      or: [PIDController],\n    })\n    .forEach((e) => {\n      const pf = World.getComponent(e, PathFinder);\n      const p = World.getComponent(e, Transform);\n      const v = World.getComponent(e, Velocity);\n      const s = World.getComponent(e, Stats);\n\n      const dx = pf.targetX - p.x;\n      const dy = pf.targetY - p.y;\n      const dMag = (dx * dx + dy * dy) ** 0.5;\n      if (dMag == 0) return;\n      const controlDistance = ((s.moveSpeed * world.dtMilli) / 1000) * 2;\n      let adjustedSpeed =\n        dMag > controlDistance\n          ? s.moveSpeed\n          : (s.moveSpeed * dMag) / controlDistance;\n      if (World.hasComponent(e, PIDController)) {\n        const pid = World.getComponent(e, PIDController);\n        const velocityMag = (v.x * v.x + v.y * v.y) ** 0.5;\n        if (dMag > controlDistance) {\n          pid.reset();\n          adjustedSpeed = s.moveSpeed;\n        } else {\n          adjustedSpeed =\n            velocityMag + pid.result(-velocityMag, world.dtMilli / 1000);\n        }\n      }\n      v.x = (dx / dMag) * adjustedSpeed;\n      v.y = (dy / dMag) * adjustedSpeed;\n    });\n}\n\nfunction handleTimers(world: World) {\n  world.query({ and: [Timer], or: [Callback] }).forEach((e) => {\n    if (World.hasComponent(e, Callback)) {\n      const cb = World.getComponent(e, Callback);\n      cb.callback(e);\n    }\n    const t = World.getComponent(e, Timer);\n    if (t.reset) t.timeMilli = 0;\n    t.reset = false;\n    if (!t.stop) t.timeMilli += world.dtMilli;\n  });\n}\n\nfunction drawTexts(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Text, Transform] }).forEach((e) => {\n    const t = World.getComponent(e, Text);\n    const p = World.getComponent(e, Transform);\n    ctx.font = `${t.fontSize}px serif`;\n    const old = ctx.fillStyle;\n    const lines = t.content.split(\"\\n\");\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const txtMetric = ctx.measureText(lines[i]);\n      ctx.fillStyle = t.backgroundColor;\n      ctx.fillRect(\n        p.x,\n        p.y + i * (2 * t.padding) + i * txtMetric.fontBoundingBoxAscent,\n        t.padding * 2 + txtMetric.width,\n        t.padding * 2 + txtMetric.fontBoundingBoxAscent,\n      );\n      ctx.fillStyle = t.color;\n      ctx.fillText(\n        lines[i],\n        p.x + t.padding,\n        p.y + i * (2 * t.padding) + (i + 1) * txtMetric.fontBoundingBoxAscent,\n      );\n    }\n    ctx.fillStyle = old;\n  });\n}\n\nfunction drawRectangle(\n  ctx: CanvasRenderingContext2D,\n  p: typeof Transform,\n  r: typeof Rect,\n  c: typeof Colour,\n) {\n  const oldF = ctx.fillStyle;\n  const oldS = ctx.strokeStyle;\n  ctx.fillStyle = c.fill;\n  ctx.strokeStyle = c.stroke;\n  const rect = new Path2D(\n    `M ${p.x - r.width * 0.5} ${\n      p.y - r.height * 0.5\n    } h ${r.width} v ${r.height} h ${-r.width} Z`,\n  );\n  ctx.fill(rect);\n  ctx.stroke(rect);\n  ctx.fillStyle = oldF;\n  ctx.strokeStyle = oldS;\n}\n\nfunction drawRects(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Transform, Rect, Colour] }).forEach((e) => {\n    const p = World.getComponent(e, Transform);\n    const r = World.getComponent(e, Rect);\n    const c = World.getComponent(e, Colour);\n    drawRectangle(ctx, p, r, c);\n  });\n}\n\nfunction drawBg(color: string = \"#424242\") {\n  if (!ctx) return;\n  const old = ctx.fillStyle;\n  ctx.fillStyle = color;\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.fillStyle = old;\n}\n\nfunction handleCamera(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Camera, Transform] }).forEach((e) => {\n    const c = World.getComponent(e, Camera);\n    if (!c.isActive) return;\n    const p = World.getComponent(e, Transform);\n    const sin = Math.sin(c.tilt);\n    const cos = Math.cos(c.tilt);\n    const translateX = -p.x * c.zoom;\n    const translateY = -p.y * c.zoom;\n    ctx.transform(\n      cos * c.zoom,\n      -sin * c.zoom,\n      sin * c.zoom,\n      cos * c.zoom,\n      // inverse rotation\n      cos * translateX + sin * translateY + ctx.canvas.width * 0.5,\n      -sin * translateX + cos * translateY + ctx.canvas.height * 0.5,\n    );\n  });\n}\n\nfunction move(world: World) {\n  const dt = world.dtMilli / 1000;\n  world.query({ and: [Transform, Velocity] }).forEach((e) => {\n    const p = World.getComponent(e, Transform);\n    const v = World.getComponent(e, Velocity);\n    p.x += v.x * dt;\n    p.y += v.y * dt;\n    // const v = World.getComponent(e, Velocity);\n    // const x = v.x;\n    // const y = v.y;\n    // v.x = cos * x - sin * y;\n    // v.y = sin * x + cos * y;\n  });\n}\n\nfunction drawImg(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Graphic, Transform], or: [Rect] }).forEach((e) => {\n    const g = World.getComponent(e, Graphic);\n    const p = World.getComponent(e, Transform);\n    const r = World.hasComponent(e, Rect) && World.getComponent(e, Rect);\n    const img = new Image();\n    img.src = g.src;\n    const imgWidth = r ? r.width : img.width;\n    const imgHeight = r ? r.height : img.height;\n    const scaleX = imgWidth / img.width;\n    const scaleY = imgHeight / img.height;\n    ctx.transform(scaleX, 0, 0, scaleY, 0, 0);\n    ctx.drawImage(\n      img,\n      (p.x - imgWidth / 2) / scaleX,\n      (p.y - imgHeight / 2) / scaleY,\n    );\n    ctx.transform(1 / scaleX, 0, 0, 1 / scaleY, 0, 0);\n  });\n}\n\nfunction handleButtons(world: World) {\n  world.query({ and: [Button, Transform, Rect, Callback] }).forEach((e) => {\n    const p = World.getComponent(e, Transform);\n    const b = World.getComponent(e, Button);\n    const r = World.getComponent(e, Rect);\n    const cb = World.getComponent(e, Callback);\n    const pressedWithinButton =\n      (Mouse.pressPos.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (Mouse.pressPos.y - p.y) ** 2 < (r.height / 2) ** 2;\n    b.hovered =\n      (Mouse.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (Mouse.y - p.y) ** 2 < (r.height / 2) ** 2;\n    b.pressed = b.hovered && Mouse.isDown && pressedWithinButton;\n    b.clicked =\n      Mouse.justReleased &&\n      pressedWithinButton &&\n      (Mouse.releasePos.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (Mouse.releasePos.y - p.y) ** 2 < (r.height / 2) ** 2;\n    cb.callback(e);\n  });\n}\n\n// entities\nfunction addGraphic(world: World, src: string, x = 0, y = 0, w = 1, h = 1) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Transform);\n  const g = World.addComponent(e, Graphic);\n  const r = World.addComponent(e, Rect);\n  p.x = x;\n  p.y = y;\n  g.src = src;\n  r.width = w;\n  r.height = h;\n  return e;\n}\n\nfunction addRect(world: World, x: number = 0, y: number = 0) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Transform);\n  World.addComponent(e, Rect);\n  const c = World.addComponent(e, Colour);\n  c.fill = \"green\";\n  //c.stroke = \"transparent\";\n  p.x = x;\n  p.y = y;\n  return e;\n}\n\nfunction addButton(\n  world: World,\n  x = 0,\n  y = 0,\n  w = 10,\n  h = 10,\n  cb: (e: entityT) => void = () => {},\n) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Transform);\n  const r = World.addComponent(e, Rect);\n  const b = World.addComponent(e, Button);\n  World.addComponent(e, Colour);\n  p.x = x;\n  p.y = y;\n  r.width = w;\n  r.height = h;\n  const c = World.addComponent(e, Callback);\n  c.callback = cb;\n  return e;\n}\n\nfunction addTimerWithCallback(world: World, cb: (e: entityT) => void) {\n  const e = world.addEntity();\n  World.addComponent(e, Timer);\n  World.addComponent(e, Callback).callback = cb;\n  return e;\n}\n\nfunction addPlayer(world: World) {\n  const player = addRect(world, 0, 0);\n  const r = World.getComponent(player, Rect);\n  r.width = 1;\n  r.height = 1;\n  World.addComponent(player, Velocity);\n  const s = World.addComponent(player, Stats);\n  s.moveSpeed = config.player.speed;\n  World.addComponent(player, PlayerControl);\n  World.addComponent(player, PathFinder);\n  const pid = World.addComponent(player, PIDController);\n  ((pid.kp = 0.5), (pid.ki = 0.001), (pid.kd = 0.0));\n  return player;\n}\n\nfunction addTurrent(world: World, x: number, y: number) {\n  const turrent = addRect(world, x, y);\n  World.addComponent(turrent, Stats);\n  return turrent;\n}\n\n//utils\ntype vec2 = { x: number; y: number };\nfunction screenToWorld(\n  pointerPos: vec2,\n  cameraPos: vec2,\n  cameraTilt: number,\n  cameraZoom: number,\n): vec2 {\n  const cos = Math.cos(cameraTilt);\n  const sin = Math.sin(cameraTilt);\n  const res = { x: 0, y: 0 };\n  const x = pointerPos.x - config.viewport.width / 2;\n  const y = pointerPos.y - config.viewport.height / 2;\n  res.x = cos * x - sin * y;\n  res.y = sin * x + cos * y;\n  res.x /= cameraZoom;\n  res.y /= cameraZoom;\n  res.x += cameraPos.x;\n  res.y += cameraPos.y;\n  return res;\n}\nfunction resetTransform(ctx: CanvasRenderingContext2D) {\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n// credit: https://www.30secondsofcode.org/js/s/detect-device-type/\nfunction detectDeviceType(): string {\n  return /Mobile|Android|iPhone|iPad/i.test(navigator.userAgent)\n    ? \"Mobile\"\n    : \"Desktop\";\n}\n\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas?.getContext(\"2d\");\n\nif (canvas && ctx) {\n  canvas.width = config.viewport.width;\n  canvas.height = config.viewport.height;\n  canvas.style.imageRendering = \"pixelated\";\n  ctx.lineWidth = 0.1;\n\n  document.onkeydown = (e) => {\n    Keys[e.key] = true;\n  };\n  document.onkeyup = (e) => {\n    delete Keys[e.key];\n  };\n  document.onpointermove = (e) => {\n    const rect = canvas.getBoundingClientRect();\n    Mouse.x = e.x - rect.left;\n    Mouse.y = e.y - rect.top;\n    if (innerWidth / innerHeight < canvas.width / canvas.height) {\n      Mouse.x *= canvas.width / innerWidth;\n      Mouse.y *= canvas.width / innerWidth;\n    } else {\n      Mouse.x *= canvas.height / innerHeight;\n      Mouse.y *= canvas.height / innerHeight;\n    }\n  };\n\n  document.onpointerdown = (e) => {\n    if (e.target != canvas) return;\n    Mouse.isDown = true;\n    Mouse.justPressed = true;\n    Object.assign(Mouse.pressPos, Mouse);\n  };\n\n  document.onpointerup = () => {\n    Mouse.isDown = false;\n    Mouse.justReleased = true;\n    Object.assign(Mouse.releasePos, Mouse);\n  };\n\n  document.body.append(canvas);\n\n  const game = new World();\n\n  const player = addPlayer(game);\n\n  const turrent = addTurrent(game, 10, 0);\n\n  const map = addGraphic(game, \"./assets/Map_of_MOBA.svg\", 0, 0, 300, 300);\n\n  const camera = World.addComponent(player, Camera);\n  camera.zoom = 30;\n  camera.isActive = true;\n\n  // addTimerWithCallback(game, (e) => {\n  //   const t = World.getComponent(e, Timer);\n  //   if (t.timeMilli < 1000 / config.minions.spawnRate) return;\n  //   t.reset = true;\n  //   const minion = addRect(game, 0, 0);\n  //   const v = World.addComponent(minion, Velocity);\n  //   const c = Math.cos(-Math.PI / 4);\n  //   const s = Math.sin(-Math.PI / 4);\n  //   v.x = c * config.minions.speed;\n  //   v.y = s * config.minions.speed;\n  // });\n\n  const inGameUi = new World();\n\n  addButton(\n    inGameUi,\n    config.viewport.width * 0.9,\n    config.viewport.height * 0.8,\n    config.viewport.height * 0.3,\n    config.viewport.height * 0.3,\n    (e) => {\n      const b = World.getComponent(e, Button);\n      b.clicked && console.log(\"clicked\");\n    },\n  );\n\n  // minimap\n  addGraphic(\n    inGameUi,\n    \"./assets/Map_of_MOBA.svg\",\n    config.viewport.width * 0.1,\n    config.viewport.height * 0.2,\n    config.viewport.height * 0.3,\n    config.viewport.height * 0.3,\n  );\n\n  const debugTextEntity = inGameUi.addEntity();\n  const debugText = World.addComponent(debugTextEntity, Text, {\n    content: \"test string\",\n    backgroundColor: \"white\",\n  });\n  World.addComponent(debugTextEntity, Transform);\n\n  (function update() {\n    drawBg();\n    debugText.content = `FPS: ${Math.ceil(1000 / game.dtMilli)}\\nEntity count: ${game.entityCount()}\\nDevice type: ${detectDeviceType()}`;\n    game.update(\n      handleTimers,\n      handleCamera,\n      handlePathfind,\n      handleInput,\n      drawImg,\n      drawRects,\n      move,\n    );\n    resetTransform(ctx);\n    inGameUi.update(drawImg, drawRects, drawTexts, handleButtons);\n    Mouse.justReleased = false;\n    Mouse.justPressed = false;\n    requestAnimationFrame(update);\n  })();\n}\n"],
  "mappings": "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",
  "names": ["ObjectPool", "objectFactory", "obj", "object", "v", "index", "removed", "ComponentManager", "_ComponentManager", "component", "ObjectPool", "index", "EntityManager", "_EntityManager", "ObjectPool", "entity", "index", "World", "_World", "entity", "EntityManager", "mask", "a", "i", "l", "types", "ComponentManager", "component", "values", "compId", "idx", "indices", "entityIdx", "removed", "backEntity", "fns", "query", "andMask", "orMask", "notMask", "res", "archetypes", "set", "config_default", "PIDController", "currentErr", "dt", "out", "Stats", "Callback", "Transform", "Velocity", "PlayerControl", "Camera", "Rect", "Graphic", "Button", "Colour", "Text", "Timer", "PathFinder", "Mouse", "Keys", "handleInput", "world", "camera", "camTransform", "e", "c", "World", "pf", "worldPos", "screenToWorld", "handlePathfind", "p", "v", "s", "dx", "dy", "dMag", "controlDistance", "adjustedSpeed", "pid", "velocityMag", "handleTimers", "t", "drawTexts", "ctx", "old", "lines", "i", "l", "txtMetric", "drawRectangle", "r", "oldF", "oldS", "rect", "drawRects", "drawBg", "color", "handleCamera", "sin", "cos", "translateX", "translateY", "move", "drawImg", "g", "img", "imgWidth", "imgHeight", "scaleX", "scaleY", "handleButtons", "b", "cb", "pressedWithinButton", "addGraphic", "src", "x", "y", "w", "h", "addRect", "addButton", "addPlayer", "world", "player", "addRect", "r", "World", "Rect", "Velocity", "s", "Stats", "config_default", "PlayerControl", "PathFinder", "pid", "PIDController", "addTurrent", "x", "y", "turrent", "screenToWorld", "pointerPos", "cameraPos", "cameraTilt", "cameraZoom", "cos", "sin", "res", "resetTransform", "ctx", "detectDeviceType", "canvas", "e", "Keys", "rect", "Mouse", "game", "map", "addGraphic", "camera", "Camera", "inGameUi", "addButton", "Button", "debugTextEntity", "debugText", "Text", "Transform", "update", "drawBg", "handleTimers", "handleCamera", "handlePathfind", "handleInput", "drawImg", "drawRects", "move", "drawTexts", "handleButtons"]
}
