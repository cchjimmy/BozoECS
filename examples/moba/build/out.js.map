{
  "version": 3,
  "sources": ["../../../src/pool.ts", "../../../src/component.ts", "../../../src/entity.ts", "../../../src/world.ts", "../src/config.json", "../src/main.ts"],
  "sourcesContent": ["export class ObjectPool<T> {\n  private storage: T[] = [];\n  private objectConstructor: () => T;\n  private size = 0;\n\n  constructor(objectConstructor: () => T) {\n    this.objectConstructor = objectConstructor;\n  }\n\n  len() {\n    return this.size;\n  }\n\n  addObj(): T {\n    let obj;\n    if (this.storage[this.size]) {\n      obj = this.storage[this.size];\n    } else {\n      obj = this.objectConstructor();\n      this.storage.push(obj);\n    }\n    this.size++;\n    return obj;\n  }\n\n  findIndex(object: T): number {\n    return this.storage.findIndex((v) => v == object);\n  }\n\n  removeObj(index: number): T {\n    if (index >= this.size) throw new Error(\"Index out of range.\");\n    const removed = this.storage[index];\n    // swap with last to maintain packed\n    this.storage[index] = this.storage[this.storage.length - 1];\n    this.storage[this.storage.length - 1] = removed;\n    this.size--;\n    return removed;\n  }\n\n  getObj(index: number): T {\n    if (index >= this.size) throw new Error(\"Index out of range.\");\n    return this.storage[index];\n  }\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport class ComponentManager {\n  private static pools: Map<object, any> = new Map();\n  private static idMap: Map<object, number> = new Map();\n\n  static register<T extends object>(component: T) {\n    ComponentManager.idMap.set(component, ComponentManager.idMap.size);\n    ComponentManager.pools.set(\n      component,\n      new ObjectPool<T>(() => Object.assign({}, component)),\n    );\n  }\n\n  static getId<T extends object>(component: T): number {\n    return ComponentManager.idMap.get(component) ?? -1;\n  }\n\n  static add<T extends object>(component: T): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).addObj();\n  }\n\n  static delete<T extends object>(\n    component: T,\n    index: number,\n  ): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).removeObj(\n      index,\n    );\n  }\n\n  static get<T extends object>(\n    component: T,\n    index: number,\n  ): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).getObj(\n      index,\n    );\n  }\n\n  static len<T extends object>(component: T): number {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).len();\n  }\n\n  static typeLen(): number {\n    return ComponentManager.pools.size;\n  }\n\n  static types(): object[] {\n    return ComponentManager.pools.keys().toArray();\n  }\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport type entityT = number;\n\nexport class EntityManager {\n  static nextId = 0;\n  static pool = new ObjectPool<entityT>(() => EntityManager.nextId++);\n\n  static add(): entityT {\n    return EntityManager.pool.addObj();\n  }\n\n  static findIndex(entity: entityT): number {\n    return EntityManager.pool.findIndex(entity);\n  }\n\n  static delete(index: number): entityT {\n    return EntityManager.pool.removeObj(index);\n  }\n}\n", "import { ComponentManager } from \"./component.ts\";\nimport { EntityManager, entityT } from \"./entity.ts\";\n\nexport type queryT = Partial<Record<\"and\" | \"or\" | \"not\", object[]>>;\n\nexport class World {\n  private static indexMap: Map<object, Map<number, number>> = new Map();\n  private static maskMap: Map<number, number> = new Map();\n  private static archetypeMap: Map<number, Set<entityT>> = new Map();\n  private static worlds: World[] = [];\n  private static removeMap: Map<number, (_: entityT) => object> = new Map();\n  private static ownerMap: Map<object, Map<number, number>> = new Map();\n\n  timeMilli = 0;\n  dtMilli = 0;\n  localEntities: Set<entityT> = new Set();\n\n  constructor() {\n    World.worlds.push(this);\n  }\n\n  static createEntity(): entityT {\n    const entity = EntityManager.add();\n    World.maskMap.set(entity, 0);\n    World.getArchetype(0).add(entity);\n    return entity;\n  }\n\n  private static getArchetype(mask: number): Set<entityT> {\n    const a = World.archetypeMap.get(mask);\n    if (a == undefined) {\n      const set: Set<entityT> = new Set();\n      World.archetypeMap.set(mask, set);\n      return set;\n    }\n    return a;\n  }\n\n  static deleteEntity(entity: entityT) {\n    for (let i = 0, l = World.worlds.length; i < l; i++) {\n      World.worlds[i].removeEntity(entity);\n    }\n    const types = ComponentManager.types();\n    for (let i = 0, l = ComponentManager.typeLen(); i < l; i++) {\n      if (!(World.getMask(entity) & 1 << i)) continue;\n      World.getRemoveFn(i)(entity);\n      const indices = World.getIndices(types[i]);\n      const owners = World.getOwners(types[i]);\n      const backEntity = World.getOwner(owners, owners.size - 1);\n      const entityIdx = World.getIndex(indices, entity);\n      owners.set(entityIdx, backEntity);\n      indices.set(backEntity, entityIdx);\n    }\n    World.getArchetype(World.getMask(entity)).delete(entity);\n    World.maskMap.set(entity, 0);\n    EntityManager.delete(EntityManager.findIndex(entity));\n  }\n\n  private static getRemoveFn(compId: number) {\n    const removeFn = World.removeMap.get(compId);\n    if (removeFn == undefined) throw new Error(\"Component not registered.\");\n    return removeFn;\n  }\n\n  addEntity(entity?: entityT): entityT {\n    entity ??= World.createEntity();\n    this.localEntities.add(entity);\n    return entity;\n  }\n\n  removeEntity(entity: entityT) {\n    this.localEntities.delete(entity);\n  }\n\n  entityExists(entity: entityT): boolean {\n    return this.localEntities.has(entity);\n  }\n\n  static componentExists<T extends object>(component: T) {\n    if (!World.indexMap.has(component)) World.registerComponent(component);\n  }\n\n  static registerComponent<T extends object>(\n    component: T,\n  ): typeof World {\n    ComponentManager.register(component);\n    World.indexMap.set(component, new Map());\n    World.removeMap.set(\n      ComponentManager.getId(component),\n      (e: entityT) =>\n        ComponentManager.delete(\n          component,\n          World.getIndex(World.getIndices(component), e),\n        ),\n    );\n    World.ownerMap.set(component, new Map());\n    return World;\n  }\n\n  static hasComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): boolean {\n    return (World.getMask(entity) &\n      1 << ComponentManager.getId(component)) > 0;\n  }\n\n  static addComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): T {\n    World.componentExists(component);\n    let mask = World.getMask(entity);\n    const compId = ComponentManager.getId(component);\n    if ((mask & 1 << compId) != 0) {\n      throw new Error(`Entity ${entity} already had that component.`);\n    }\n    World.getArchetype(mask).delete(entity);\n    mask |= 1 << compId;\n    World.maskMap.set(entity, mask);\n    World.getArchetype(mask).add(entity);\n    const idx = ComponentManager.len(component);\n    World.getIndices(component).set(entity, idx);\n    World.getOwners(component).set(idx, entity);\n    return ComponentManager.add(component);\n  }\n\n  private static getIndices<T extends object>(component: T) {\n    const indices = World.indexMap.get(component);\n    if (indices == undefined) throw new Error(\"Component not registered.\");\n    return indices;\n  }\n\n  private static getIndex(\n    indices: Map<number, number>,\n    entity: entityT,\n  ) {\n    const index = indices.get(entity);\n    if (index == undefined) throw new Error(`Entity ${entity} does not exist.`);\n    return index;\n  }\n\n  private static getOwners<T extends object>(component: T) {\n    const owners = World.ownerMap.get(component);\n    if (owners == undefined) throw new Error(\"Component not registered.\");\n    return owners;\n  }\n\n  private static getOwner(owners: Map<number, number>, index: number) {\n    const owner = owners.get(index);\n    if (owner == undefined) throw new Error(\"Owner not found.\");\n    return owner;\n  }\n\n  static removeComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): T {\n    World.componentExists(component);\n    let mask = World.getMask(entity);\n    const compId = ComponentManager.getId(component);\n    if ((mask & 1 << compId) == 0) {\n      throw new Error(\n        `Entity ${entity} does not have that component.`,\n      );\n    }\n    World.getArchetype(mask).delete(entity);\n    mask &= ~(1 << compId);\n    World.maskMap.set(entity, mask);\n    World.getArchetype(mask).add(entity);\n    const indices = World.getIndices(component);\n    const owners = World.getOwners(component);\n    const entityIdx = World.getIndex(indices, entity);\n    const removed = ComponentManager.delete(component, entityIdx);\n    const backEntity = World.getOwner(owners, owners.size - 1);\n    owners.set(entityIdx, backEntity);\n    indices.set(backEntity, entityIdx);\n    return removed;\n  }\n\n  private static getMask(e: entityT): number {\n    return World.maskMap.get(e) ?? -1;\n  }\n\n  static getComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): T {\n    if (!World.hasComponent(entity, component)) {\n      throw new Error(`Entity ${entity} does not have that component.`);\n    }\n    return ComponentManager.get(\n      component,\n      World.getIndex(World.getIndices(component), entity),\n    );\n  }\n\n  update(...fns: ((world: World) => void)[]) {\n    for (let i = 0, l = fns.length; i < l; i++) fns[i](this);\n    this.dtMilli = performance.now() - this.timeMilli;\n    this.timeMilli += this.dtMilli;\n  }\n\n  query(query: queryT): entityT[] {\n    let andMask = 0, orMask = 0, notMask = 0;\n    if (query.and) {\n      for (let i = 0, l = query.and.length; i < l; i++) {\n        andMask |= 1 << ComponentManager.getId(query.and[i]);\n      }\n    }\n    if (query.or) {\n      for (let i = 0, l = query.or.length; i < l; i++) {\n        orMask |= 1 << ComponentManager.getId(query.or[i]);\n      }\n    }\n    if (query.not) {\n      for (let i = 0, l = query.not.length; i < l; i++) {\n        notMask |= 1 << ComponentManager.getId(query.not[i]);\n      }\n    }\n    const res = [];\n    for (\n      let archetypes = World.archetypeMap.keys().toArray(),\n        l = archetypes.length,\n        i = 0,\n        a = archetypes[i];\n      i < l;\n      i++, a = archetypes[i]\n    ) {\n      if ((a & andMask) == andMask && (a | orMask) > 0 && (a & notMask) == 0) {\n        res.push(...this.localEntities.intersection(World.getArchetype(a)));\n      }\n    }\n    return res;\n  }\n\n  entityCount(): number {\n    return this.localEntities.size;\n  }\n}\n", "{\n\t\"viewport\": {\n\t\t\"width\": 800,\n\t\t\"height\": 400\n\t},\n\t\"player\": {\n\t\t\"speed\": 20\n\t}\n}\n", "/**\n * By Original PNG version by Raizin, SVG rework by Sameboat. - file:Map of MOBA.png (CC 3.0), CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=29443207\n */\n\nimport { entityT, World } from \"../../../src/index.ts\";\nimport { default as config } from \"./config.json\" with { type: \"json\" };\n\n// components\nconst Speed = {\n  max: 100,\n};\nconst Combat = {\n  healthPoint: 0,\n  attackPoint: 0,\n  defencePoint: 0,\n  abilityPower: 0,\n};\nconst Position = {\n  x: 0,\n  y: 0,\n};\nconst Velocity = {\n  x: 0,\n  y: 0,\n};\nconst PlayerControl = {};\nconst Camera = {\n  zoom: 1,\n  tilt: 0,\n  isActive: false,\n};\nconst Rect = {\n  width: 2,\n  height: 2,\n};\nconst Graphic = {\n  src: \"\",\n};\nconst Button = {\n  hovered: false,\n  pressed: false,\n  clicked: false,\n  callback: (_: entityT) => {},\n};\nconst Colour = {\n  fill: \"white\",\n  stroke: \"black\",\n};\nconst Text = {\n  content: \"\",\n  fontSize: 20,\n  padding: 3,\n  color: \"black\",\n  backgroundColor: \"white\",\n};\nconst Timer = {\n  durationMilli: 1000,\n  startMilli: 0,\n  callback: (_: entityT) => {},\n};\nconst PathFinder = {\n  targetX: 0,\n  targetY: 0,\n  deactivateTolerance: 1,\n};\n\n// singletons\nconst Mouse = {\n  x: 0,\n  y: 0,\n  isDown: false,\n  pressPos: { x: 0, y: 0 },\n  justPressed: false,\n  justReleased: false,\n  releasePos: { x: 0, y: 0 },\n};\nconst Keys: Record<KeyboardEvent[\"key\"], boolean> = {};\n\n// systems\nfunction handleInput(world: World) {\n  world.query({ and: [PathFinder, Camera, PlayerControl, Position] }).forEach(\n    (e) => {\n      if (Mouse.justPressed) {\n        const pf = World.getComponent(e, PathFinder);\n        const c = World.getComponent(e, Camera);\n        const p = World.getComponent(e, Position);\n        const worldPos = screenToWorld(\n          { x: Mouse.x, y: Mouse.y },\n          p,\n          c.tilt,\n          c.zoom,\n        );\n        pf.targetX = worldPos.x;\n        pf.targetY = worldPos.y;\n      }\n    },\n  );\n}\n\nfunction handlePathfind(world: World) {\n  world.query({ and: [PathFinder, Position, Velocity, Speed] }).forEach((e) => {\n    // tap to move\n    const pf = World.getComponent(e, PathFinder);\n    const p = World.getComponent(e, Position);\n    const v = World.getComponent(e, Velocity);\n    const s = World.getComponent(e, Speed);\n\n    const dx = pf.targetX - p.x;\n    const dy = pf.targetY - p.y;\n    const dMag = (dx * dx + dy * dy) ** 0.5;\n\n    if (dMag < pf.deactivateTolerance) {\n      v.x = v.y = 0;\n      return;\n    }\n\n    v.x = dx / dMag * s.max;\n    v.y = dy / dMag * s.max;\n  });\n}\n\nfunction handleTimers(world: World) {\n  world.query({ and: [Timer] }).forEach((e) => {\n    const t = World.getComponent(e, Timer);\n    if (world.timeMilli - t.startMilli < t.durationMilli) return;\n    t.startMilli = world.timeMilli;\n    t.callback(e);\n  });\n}\n\nfunction drawTexts(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Text, Position] }).forEach((e) => {\n    const t = World.getComponent(e, Text);\n    const p = World.getComponent(e, Position);\n\n    ctx.font = `${t.fontSize}px serif`;\n    const txtMetric = ctx.measureText(t.content);\n    const old = ctx.fillStyle;\n    ctx.fillStyle = t.backgroundColor;\n    ctx.fillRect(\n      p.x,\n      p.y,\n      t.padding * 2 + txtMetric.width,\n      t.padding * 2 + txtMetric.fontBoundingBoxAscent,\n    );\n    ctx.fillStyle = t.color;\n    ctx.fillText(\n      t.content,\n      p.x + t.padding,\n      p.y + t.padding + txtMetric.fontBoundingBoxAscent,\n    );\n    ctx.fillStyle = old;\n  });\n}\n\nfunction drawRectangle(\n  ctx: CanvasRenderingContext2D,\n  p: typeof Position,\n  r: typeof Rect,\n  c: typeof Colour,\n) {\n  const oldF = ctx.fillStyle;\n  const oldS = ctx.strokeStyle;\n  ctx.fillStyle = c.fill;\n  ctx.strokeStyle = c.stroke;\n  const rect = new Path2D(\n    `M ${p.x - r.width * 0.5} ${\n      p.y - r.height * 0.5\n    } h ${r.width} v ${r.height} h ${-r.width} Z`,\n  );\n  ctx.fill(rect);\n  ctx.stroke(rect);\n  ctx.fillStyle = oldF;\n  ctx.strokeStyle = oldS;\n}\n\nfunction drawRects(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Position, Rect, Colour] }).forEach((e) => {\n    const p = World.getComponent(e, Position);\n    const r = World.getComponent(e, Rect);\n    const c = World.getComponent(e, Colour);\n    drawRectangle(ctx, p, r, c);\n  });\n}\n\nfunction drawBg() {\n  if (!ctx) return;\n  const old = ctx.fillStyle;\n  ctx.fillStyle = \"#424242\";\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.fillStyle = old;\n}\n\nfunction handleCamera(world: World) {\n  world.query({ and: [Camera, Position, Velocity] }).forEach((e) => {\n    const c = World.getComponent(e, Camera);\n    if (!ctx || !c.isActive) return;\n    const p = World.getComponent(e, Position);\n    const sin = Math.sin(c.tilt);\n    const cos = Math.cos(c.tilt);\n    const translateX = -p.x * c.zoom;\n    const translateY = -p.y * c.zoom;\n    ctx.transform(\n      cos * c.zoom,\n      -sin * c.zoom,\n      sin * c.zoom,\n      cos * c.zoom,\n      // inverse rotation\n      cos * translateX + sin * translateY + ctx.canvas.width * 0.5,\n      -sin * translateX + cos * translateY + ctx.canvas.height * 0.5,\n    );\n    const v = World.getComponent(e, Velocity);\n    const x = v.x;\n    const y = v.y;\n    v.x = cos * x - sin * y;\n    v.y = sin * x + cos * y;\n  });\n}\n\nfunction move(world: World) {\n  const dt = world.dtMilli / 1000;\n  world.query({ and: [Position, Velocity] }).forEach((e) => {\n    const p = World.getComponent(e, Position);\n    const v = World.getComponent(e, Velocity);\n    p.x += v.x * dt;\n    p.y += v.y * dt;\n  });\n}\n\nfunction drawImg(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Graphic, Position], or: [Rect] }).forEach((e) => {\n    const g = World.getComponent(e, Graphic);\n    const p = World.getComponent(e, Position);\n    const r = World.hasComponent(e, Rect) && World.getComponent(e, Rect);\n    const img = new Image();\n    img.src = g.src;\n    const imgWidth = r ? r.width : img.width;\n    const imgHeight = r ? r.height : img.height;\n    const scaleX = imgWidth / img.width;\n    const scaleY = imgHeight / img.height;\n    ctx.transform(scaleX, 0, 0, scaleY, 0, 0);\n    ctx.drawImage(\n      img,\n      (p.x - imgWidth / 2) / scaleX,\n      (p.y - imgHeight / 2) / scaleY,\n    );\n    ctx.transform(1 / scaleX, 0, 0, 1 / scaleY, 0, 0);\n  });\n}\n\nfunction handleButtons(world: World) {\n  world.query({ and: [Button, Position, Rect] }).forEach((e) => {\n    const p = World.getComponent(e, Position);\n    const b = World.getComponent(e, Button);\n    const r = World.getComponent(e, Rect);\n    const pressedWithinButton =\n      (Mouse.pressPos.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (Mouse.pressPos.y - p.y) ** 2 < (r.height / 2) ** 2;\n\n    b.hovered = (Mouse.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (Mouse.y - p.y) ** 2 < (r.height / 2) ** 2;\n    b.pressed = b.hovered && Mouse.isDown && pressedWithinButton;\n    b.clicked = Mouse.justReleased && pressedWithinButton &&\n      (Mouse.releasePos.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (Mouse.releasePos.y - p.y) ** 2 < (r.height / 2) ** 2;\n    b.callback(e);\n  });\n}\n\nfunction resetTransform() {\n  if (!ctx) return;\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n\n// entities\nfunction addGraphic(world: World, src: string, x = 0, y = 0, w = 1, h = 1) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Position);\n  const g = World.addComponent(e, Graphic);\n  const r = World.addComponent(e, Rect);\n  p.x = x;\n  p.y = y;\n  g.src = src;\n  r.width = w;\n  r.height = h;\n  return e;\n}\n\nfunction addRect(world: World, x: number = 0, y: number = 0) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Position);\n  World.addComponent(e, Velocity);\n  World.addComponent(e, Speed);\n  World.addComponent(e, Rect);\n  const c = World.addComponent(e, Colour);\n  c.fill = \"green\";\n  //c.stroke = \"transparent\";\n  p.x = x;\n  p.y = y;\n  return e;\n}\n\nfunction addButton(\n  world: World,\n  x = 0,\n  y = 0,\n  w = 10,\n  h = 10,\n  cb: (e: entityT) => void = () => {},\n) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Position);\n  const r = World.addComponent(e, Rect);\n  const b = World.addComponent(e, Button);\n  World.addComponent(e, Colour);\n  p.x = x;\n  p.y = y;\n  r.width = w;\n  r.height = h;\n  b.callback = cb;\n  return e;\n}\n\nfunction addTimer(\n  world: World,\n  durationMilli: number,\n  callback: (e: entityT) => void = () => {},\n) {\n  const e = world.addEntity();\n  const t = World.addComponent(e, Timer);\n  t.durationMilli = durationMilli;\n  t.callback = callback;\n  return e;\n}\n\nfunction addPlayer(world: World) {\n  const player = addRect(world, 0, 0);\n  const r = World.getComponent(player, Rect);\n  r.width = 1;\n  r.height = 1;\n  const s = World.getComponent(player, Speed);\n  s.max = 30;\n  const camera = World.addComponent(player, Camera);\n  camera.zoom = 30;\n  camera.isActive = true;\n  World.addComponent(player, PlayerControl);\n  World.addComponent(player, PathFinder);\n  return player;\n}\n\n//utils\ntype vec2 = { x: number; y: number };\nfunction screenToWorld(\n  pointerPos: vec2,\n  cameraPos: vec2,\n  cameraTilt: number,\n  cameraZoom: number,\n): vec2 {\n  const cos = Math.cos(cameraTilt);\n  const sin = Math.sin(cameraTilt);\n  const res = { x: 0, y: 0 };\n  const x = pointerPos.x - config.viewport.width / 2;\n  const y = pointerPos.y - config.viewport.height / 2;\n  res.x = cos * x - sin * y;\n  res.y = sin * x + cos * y;\n  res.x /= cameraZoom;\n  res.y /= cameraZoom;\n  res.x += cameraPos.x;\n  res.y += cameraPos.y;\n  return res;\n}\n\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas?.getContext(\"2d\");\n\nif (canvas && ctx) {\n  canvas.width = config.viewport.width;\n  canvas.height = config.viewport.height;\n  canvas.style.imageRendering = \"pixelated\";\n  ctx.lineWidth = 0.1;\n\n  document.onkeydown = (e) => {\n    Keys[e.key] = true;\n  };\n  document.onkeyup = (e) => {\n    delete Keys[e.key];\n  };\n  document.onpointermove = (e) => {\n    const rect = canvas.getBoundingClientRect();\n    Mouse.x = e.x - rect.left;\n    Mouse.y = e.y - rect.top;\n    if (innerWidth / innerHeight < canvas.width / canvas.height) {\n      Mouse.x *= canvas.width / innerWidth;\n      Mouse.y *= canvas.width / innerWidth;\n    } else {\n      Mouse.x *= canvas.height / innerHeight;\n      Mouse.y *= canvas.height / innerHeight;\n    }\n  };\n  document.onpointerdown = () => {\n    Mouse.isDown = true;\n    Mouse.justPressed = true;\n    Mouse.pressPos.x = Mouse.x;\n    Mouse.pressPos.y = Mouse.y;\n\n    const p = World.getComponent(mouseRect, Position);\n    const c = World.getComponent(player, Camera);\n    const worldPos = screenToWorld(\n      Mouse,\n      World.getComponent(player, Position),\n      c.tilt,\n      c.zoom,\n    );\n    p.x = worldPos.x;\n    p.y = worldPos.y;\n  };\n  document.onpointerup = () => {\n    Mouse.isDown = false;\n    Mouse.justReleased = true;\n    Mouse.releasePos.x = Mouse.x;\n    Mouse.releasePos.y = Mouse.y;\n  };\n\n  document.body.append(canvas);\n\n  const game = new World();\n\n  const player = addPlayer(game);\n\n  addGraphic(game, \"./assets/Map_of_MOBA.svg\", 0, 0, 300, 300);\n\n  const mouseRect = addRect(game, 0, 0);\n\n  //addTimer(game, 1000, () => {\n  //  const minion = addRect(game, 0, 0);\n  //  const v = game.getComponent(minion, Velocity);\n  //  const speed = 10;\n  //  const c = Math.cos(-Math.PI / 4);\n  //  const s = Math.sin(-Math.PI / 4);\n  //  v.x = c * speed;\n  //  v.y = s * speed;\n  //});\n\n  const inGameUi = new World();\n\n  addButton(\n    inGameUi,\n    config.viewport.width * 0.9,\n    config.viewport.height * 0.8,\n    config.viewport.height * 0.3,\n    config.viewport.height * 0.3,\n    (e) => {\n      const b = World.getComponent(e, Button);\n      b.clicked && console.log(\"clicked\");\n    },\n  );\n\n  addGraphic(\n    inGameUi,\n    \"./assets/Map_of_MOBA.svg\",\n    config.viewport.width * 0.1,\n    config.viewport.height * 0.2,\n    config.viewport.height * 0.3,\n    config.viewport.height * 0.3,\n  );\n\n  (function update() {\n    drawBg();\n    game.update(\n      handleTimers,\n      handleCamera,\n      handlePathfind,\n      handleInput,\n      drawImg,\n      drawRects,\n      move,\n    );\n    resetTransform();\n    inGameUi.update(\n      drawImg,\n      drawRects,\n      drawTexts,\n      handleButtons,\n    );\n    Mouse.justReleased = false;\n    Mouse.justPressed = false;\n    requestAnimationFrame(update);\n  })();\n}\n"],
  "mappings": "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",
  "names": ["ObjectPool", "objectConstructor", "obj", "object", "v", "index", "removed", "ComponentManager", "_ComponentManager", "component", "ObjectPool", "index", "EntityManager", "_EntityManager", "ObjectPool", "entity", "index", "World", "_World", "entity", "EntityManager", "mask", "a", "set", "i", "l", "types", "ComponentManager", "indices", "owners", "backEntity", "entityIdx", "compId", "removeFn", "component", "idx", "index", "owner", "removed", "e", "fns", "query", "andMask", "orMask", "notMask", "res", "archetypes", "config_default", "Speed", "Position", "Velocity", "PlayerControl", "Camera", "Rect", "Graphic", "Button", "_", "Colour", "Text", "Timer", "PathFinder", "Mouse", "Keys", "handleInput", "world", "e", "pf", "World", "c", "p", "worldPos", "screenToWorld", "handlePathfind", "Speed", "v", "s", "dx", "dy", "dMag", "handleTimers", "t", "drawTexts", "ctx", "txtMetric", "old", "drawRectangle", "r", "oldF", "oldS", "rect", "drawRects", "drawBg", "handleCamera", "sin", "cos", "translateX", "translateY", "x", "y", "move", "dt", "drawImg", "g", "img", "imgWidth", "imgHeight", "scaleX", "scaleY", "handleButtons", "b", "pressedWithinButton", "resetTransform", "addGraphic", "src", "w", "h", "addRect", "addButton", "cb", "addPlayer", "world", "player", "addRect", "r", "World", "Rect", "s", "Speed", "camera", "Camera", "PlayerControl", "PathFinder", "screenToWorld", "pointerPos", "cameraPos", "cameraTilt", "cameraZoom", "cos", "sin", "res", "x", "config_default", "y", "canvas", "ctx", "e", "Keys", "rect", "Mouse", "p", "mouseRect", "Position", "c", "worldPos", "game", "addGraphic", "inGameUi", "addButton", "Button", "update", "drawBg", "handleTimers", "handleCamera", "handlePathfind", "handleInput", "drawImg", "drawRects", "move", "resetTransform", "drawTexts", "handleButtons"]
}
