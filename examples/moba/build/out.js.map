{
  "version": 3,
  "sources": ["../../../src/pool.ts", "../../../src/component.ts", "../../../src/entity.ts", "../../../src/world.ts", "../src/config.json", "../src/main.ts"],
  "sourcesContent": ["export class ObjectPool<T> {\n  private storage: T[] = [];\n  private objectConstructor: () => T;\n  private size = 0;\n\n  constructor(objectConstructor: () => T) {\n    this.objectConstructor = objectConstructor;\n  }\n\n  len() {\n    return this.size;\n  }\n\n  addObj(): T {\n    let obj;\n    if (this.storage[this.size]) {\n      obj = this.storage[this.size];\n    } else {\n      obj = this.objectConstructor();\n      this.storage.push(obj);\n    }\n    this.size++;\n    return obj;\n  }\n\n  findIndex(object: T): number {\n    return this.storage.findIndex((v) => v == object);\n  }\n\n  removeObj(index: number): T {\n    if (index >= this.size) throw new Error(\"Index out of range.\");\n    const removed = this.storage[index];\n    // swap with last to maintain packed\n    this.storage[index] = this.storage[this.storage.length - 1];\n    this.storage[this.storage.length - 1] = removed;\n    this.size--;\n    return removed;\n  }\n\n  getObj(index: number): T {\n    if (index >= this.size) throw new Error(\"Index out of range.\");\n    return this.storage[index];\n  }\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport class ComponentManager {\n  private static pools: Map<object, any> = new Map();\n  private static idMap: Map<object, number> = new Map();\n\n  static register<T extends object>(component: T) {\n    ComponentManager.idMap.set(component, ComponentManager.idMap.size);\n    ComponentManager.pools.set(\n      component,\n      new ObjectPool<T>(() => Object.assign({}, component)),\n    );\n  }\n\n  static getId<T extends object>(component: T) {\n    const id = ComponentManager.idMap.get(component);\n    if (id == undefined) throw new Error(\"Component not registered.\");\n    return id;\n  }\n\n  static add<T extends object>(component: T): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).addObj();\n  }\n\n  static delete<T extends object>(\n    component: T,\n    index: number,\n  ): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).removeObj(\n      index,\n    );\n  }\n\n  static get<T extends object>(\n    component: T,\n    index: number,\n  ): T {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).getObj(\n      index,\n    );\n  }\n\n  static len<T extends object>(component: T): number {\n    return (ComponentManager.pools.get(component) as ObjectPool<T>).len();\n  }\n\n  static typeLen(): number {\n    return ComponentManager.pools.size;\n  }\n\n  static types(): object[] {\n    return ComponentManager.pools.keys().toArray();\n  }\n}\n", "import { ObjectPool } from \"./pool.ts\";\n\nexport type entityT = number;\n\nexport class EntityManager {\n  static nextId = 0;\n  static pool = new ObjectPool<entityT>(() => EntityManager.nextId++);\n\n  static add(): entityT {\n    return EntityManager.pool.addObj();\n  }\n\n  static findIndex(entity: entityT): number {\n    return EntityManager.pool.findIndex(entity);\n  }\n\n  static delete(index: number): entityT {\n    return EntityManager.pool.removeObj(index);\n  }\n}\n", "import { ComponentManager } from \"./component.ts\";\nimport { EntityManager, entityT } from \"./entity.ts\";\n\nexport type queryT = Partial<\n  Record<\"and\" | \"or\" | \"not\", object[]>\n>;\n\nexport class World {\n  private static indexMap: Map<object, number[]> = new Map();\n  private static entityMasks: number[] = [];\n  private static archetypeMap: Map<number, Set<entityT>> = new Map();\n  private static worlds: World[] = [];\n  private static removeMap: Map<number, (_: entityT) => object> = new Map();\n  private static ownerMap: Map<object, entityT[]> = new Map();\n\n  timeMilli = 0;\n  dtMilli = 0;\n  localEntities: Set<entityT> = new Set();\n\n  constructor() {\n    World.worlds.push(this);\n  }\n\n  static createEntity(): entityT {\n    const entity = EntityManager.add();\n    World.entityMasks[entity] = 0;\n    World.getArchetype(0).add(entity);\n    return entity;\n  }\n\n  private static getArchetype(mask: number): Set<entityT> {\n    const a = World.archetypeMap.get(mask);\n    if (a == undefined) {\n      const set: Set<entityT> = new Set();\n      World.archetypeMap.set(mask, set);\n      return set;\n    }\n    return a;\n  }\n\n  static deleteEntity(entity: entityT) {\n    for (let i = 0, l = World.worlds.length; i < l; i++) {\n      World.worlds[i].removeEntity(entity);\n    }\n    const types = ComponentManager.types();\n    for (let i = 0, l = ComponentManager.typeLen(); i < l; i++) {\n      if (!(World.entityMasks[entity] & 1 << i)) continue;\n      World.getRemoveFn(i)(entity);\n      const indices = World.getIndices(types[i]);\n      const owners = World.getOwners(types[i]);\n      const backEntity = owners[owners.length - 1];\n      owners[indices[entity]] = backEntity;\n      indices[backEntity] = indices[entity];\n    }\n    World.getArchetype(World.entityMasks[entity]).delete(entity);\n    World.entityMasks[entity] = 0;\n    EntityManager.delete(EntityManager.findIndex(entity));\n  }\n\n  private static getRemoveFn(compId: number) {\n    const removeFn = World.removeMap.get(compId);\n    if (removeFn == undefined) throw new Error(\"Component not registered.\");\n    return removeFn;\n  }\n\n  addEntity(entity?: entityT): entityT {\n    entity ??= World.createEntity();\n    this.localEntities.add(entity);\n    return entity;\n  }\n\n  removeEntity(entity: entityT) {\n    this.localEntities.delete(entity);\n  }\n\n  entityExists(entity: entityT) {\n    if (!this.localEntities.has(entity)) {\n      throw new Error(`Entity ${entity} does not exist.`);\n    }\n  }\n\n  static componentExists<T extends object>(component: T) {\n    if (!World.indexMap.has(component)) World.registerComponent(component);\n  }\n\n  static registerComponent<T extends object>(\n    component: T,\n  ): typeof World {\n    ComponentManager.register(component);\n    World.indexMap.set(component, []);\n    World.removeMap.set(\n      ComponentManager.getId(component),\n      (e: entityT) =>\n        ComponentManager.delete(component, this.getIndices(component)[e]),\n    );\n    World.ownerMap.set(component, []);\n    return World;\n  }\n\n  static hasComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): boolean {\n    return (World.entityMasks[entity] &\n      1 << ComponentManager.getId(component)) > 0;\n  }\n\n  static addComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): T {\n    World.componentExists(component);\n    if (World.hasComponent(entity, component)) {\n      throw new Error(`Entity ${entity} already had this component.`);\n    }\n    World.getArchetype(World.entityMasks[entity]).delete(entity);\n    World.entityMasks[entity] |= 1 << ComponentManager.getId(component);\n    World.getArchetype(World.entityMasks[entity]).add(entity);\n    const idx = ComponentManager.len(component);\n    World.getIndices(component)[entity] = idx;\n    World.getOwners(component)[idx] = entity;\n    return ComponentManager.add(component);\n  }\n\n  private static getIndices<T extends object>(component: T) {\n    const indices = World.indexMap.get(component);\n    if (indices == undefined) throw new Error(\"Component not registered.\");\n    return indices;\n  }\n\n  private static getOwners<T extends object>(component: T) {\n    const owners = World.ownerMap.get(component);\n    if (owners == undefined) throw new Error(\"Component not registered.\");\n    return owners;\n  }\n\n  static removeComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): T {\n    World.componentExists(component);\n    if (!World.hasComponent(entity, component)) {\n      throw new Error(\n        `Entity ${entity} does not have this component.`,\n      );\n    }\n    World.getArchetype(World.entityMasks[entity]).delete(entity);\n    World.entityMasks[entity] &= ~(1 << ComponentManager.getId(component));\n    World.getArchetype(World.entityMasks[entity]).add(entity);\n    const indices = World.getIndices(component);\n    const owners = World.getOwners(component);\n    const removed = ComponentManager.delete(component, indices[entity]);\n    const backEntity = owners[owners.length - 1];\n    owners[indices[entity]] = backEntity;\n    indices[backEntity] = indices[entity];\n    return removed;\n  }\n\n  static getComponent<T extends object>(\n    entity: entityT,\n    component: T,\n  ): T {\n    if (!World.hasComponent(entity, component)) {\n      throw new Error(\n        `Entity ${entity} does not have this component.`,\n      );\n    }\n    return ComponentManager.get(\n      component,\n      World.getIndices(component)[entity],\n    );\n  }\n\n  update(...fns: ((world: World) => void)[]) {\n    for (let i = 0, l = fns.length; i < l; i++) fns[i](this);\n    this.dtMilli = performance.now() - this.timeMilli;\n    this.timeMilli += this.dtMilli;\n  }\n\n  query(query: queryT): entityT[] {\n    let andMask = 0, orMask = 0, notMask = 0;\n    if (query.and) {\n      for (let i = 0, l = query.and.length; i < l; i++) {\n        andMask |= 1 << ComponentManager.getId(query.and[i]);\n      }\n    }\n    if (query.or) {\n      for (let i = 0, l = query.or.length; i < l; i++) {\n        orMask |= 1 << ComponentManager.getId(query.or[i]);\n      }\n    }\n    if (query.not) {\n      for (let i = 0, l = query.not.length; i < l; i++) {\n        notMask |= 1 << ComponentManager.getId(query.not[i]);\n      }\n    }\n    const res = [];\n    for (\n      let archetypes = World.archetypeMap.keys().toArray(),\n        l = archetypes.length,\n        i = 0,\n        a = archetypes[i];\n      i < l;\n      i++, a = archetypes[i]\n    ) {\n      if ((a & andMask) == andMask && (a | orMask) > 0 && (a & notMask) == 0) {\n        res.push(...this.localEntities.intersection(World.getArchetype(a)));\n      }\n    }\n    return res;\n  }\n\n  entityCount(): number {\n    return this.localEntities.size;\n  }\n}\n", "{\n\t\"viewport\": {\n\t\t\"width\": 800,\n\t\t\"height\": 400\n\t},\n\t\"player\": {\n\t\t\"speed\": 20\n\t}\n}\n", "/**\n * By Original PNG version by Raizin, SVG rework by Sameboat. - file:Map of MOBA.png (CC 3.0), CC BY-SA 3.0, https://commons.wikimedia.org/w/index.php?curid=29443207\n */\n\nimport { entityT, World } from \"../../../src/index.ts\";\nimport { default as config } from \"./config.json\" with { type: \"json\" };\n\n// components\nconst Combat = {\n  healthPoint: 0,\n  attackPoint: 0,\n  defencePoint: 0,\n  abilityPower: 0,\n};\nconst Transform = {\n  x: 0,\n  y: 0,\n};\nconst Velocity = {\n  x: 0,\n  y: 0,\n};\nconst PlayerControl = {};\nconst Camera = {\n  zoom: 1,\n  tilt: 0,\n  isActive: false,\n};\nconst Rect = {\n  width: 2,\n  height: 2,\n};\nconst Graphic = {\n  src: \"\",\n};\nconst Button = {\n  hovered: false,\n  pressed: false,\n  clicked: false,\n  callback: (_: entityT) => {},\n};\nconst Colour = {\n  fill: \"white\",\n  stroke: \"black\",\n};\nconst Text = {\n  content: \"\",\n  fontSize: 20,\n  padding: 3,\n  color: \"black\",\n  backgroundColor: \"white\",\n};\nconst Timer = {\n  durationMilli: 1000,\n  startMilli: 0,\n  callback: (_: entityT) => {},\n};\n\n// systems\nfunction handleTimers(world: World) {\n  world.query({ and: [Timer] }).forEach((e) => {\n    const t = World.getComponent(e, Timer);\n    if (world.timeMilli - t.startMilli < t.durationMilli) return;\n    t.startMilli = world.timeMilli;\n    t.callback(e);\n  });\n}\n\nfunction drawTexts(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Text, Transform] }).forEach((e) => {\n    const t = World.getComponent(e, Text);\n    const p = World.getComponent(e, Transform);\n\n    ctx.font = `${t.fontSize}px serif`;\n    const txtMetric = ctx.measureText(t.content);\n    const old = ctx.fillStyle;\n    ctx.fillStyle = t.backgroundColor;\n    ctx.fillRect(\n      p.x,\n      p.y,\n      t.padding * 2 + txtMetric.width,\n      t.padding * 2 + txtMetric.fontBoundingBoxAscent,\n    );\n    ctx.fillStyle = t.color;\n    ctx.fillText(\n      t.content,\n      p.x + t.padding,\n      p.y + t.padding + txtMetric.fontBoundingBoxAscent,\n    );\n    ctx.fillStyle = old;\n  });\n}\n\nfunction drawRectangle(\n  ctx: CanvasRenderingContext2D,\n  p: typeof Transform,\n  r: typeof Rect,\n  c: typeof Colour,\n) {\n  const oldF = ctx.fillStyle;\n  const oldS = ctx.strokeStyle;\n  ctx.fillStyle = c.fill;\n  ctx.strokeStyle = c.stroke;\n  const rect = new Path2D(\n    `M ${p.x - r.width * 0.5} ${\n      p.y - r.height * 0.5\n    } h ${r.width} v ${r.height} h ${-r.width} Z`,\n  );\n  ctx.fill(rect);\n  ctx.stroke(rect);\n  ctx.fillStyle = oldF;\n  ctx.strokeStyle = oldS;\n}\n\nfunction drawRects(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Transform, Rect, Colour] }).forEach((e) => {\n    const p = World.getComponent(e, Transform);\n    const r = World.getComponent(e, Rect);\n    const c = World.getComponent(e, Colour);\n    drawRectangle(ctx, p, r, c);\n  });\n}\n\nfunction drawBg() {\n  if (!ctx) return;\n  const old = ctx.fillStyle;\n  ctx.fillStyle = \"#424242\";\n  ctx.fillRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n  ctx.fillStyle = old;\n}\n\nfunction handleInput(world: World) {\n  world.query({ and: [PlayerControl, Velocity], or: [Camera] }).forEach((e) => {\n    const v = World.getComponent(e, Velocity);\n    v.x = 0;\n    v.y = 0;\n    if (keys[\"w\"] || keys[\"ArrowUp\"]) {\n      v.y--;\n    }\n    if (keys[\"a\"] || keys[\"ArrowLeft\"]) {\n      v.x--;\n    }\n    if (keys[\"s\"] || keys[\"ArrowDown\"]) {\n      v.y++;\n    }\n    if (keys[\"d\"] || keys[\"ArrowRight\"]) {\n      v.x++;\n    }\n    const mag = (v.x ** 2 + v.y ** 2) ** 0.5;\n    if (mag != 0) {\n      v.x = v.x / mag * config.player.speed;\n      v.y = v.y / mag * config.player.speed;\n    }\n\n    if (!World.hasComponent(e, Camera)) return;\n    const c = World.getComponent(e, Camera);\n    const dt = world.dtMilli / 1000;\n    if (keys[\"q\"]) c.tilt -= 5 * dt;\n    if (keys[\"e\"]) c.tilt += 5 * dt;\n  });\n}\n\nfunction handleCamera(world: World) {\n  world.query({ and: [Camera, Transform, Velocity] }).forEach((e) => {\n    const c = World.getComponent(e, Camera);\n    if (!ctx || !c.isActive) return;\n    const p = World.getComponent(e, Transform);\n    const sin = Math.sin(c.tilt);\n    const cos = Math.cos(c.tilt);\n    const translateX = -p.x * c.zoom;\n    const translateY = -p.y * c.zoom;\n    ctx.transform(\n      cos * c.zoom,\n      -sin * c.zoom,\n      sin * c.zoom,\n      cos * c.zoom,\n      // inverse rotation\n      cos * translateX + sin * translateY + ctx.canvas.width * 0.5,\n      -sin * translateX + cos * translateY + ctx.canvas.height * 0.5,\n    );\n    const v = World.getComponent(e, Velocity);\n    const x = v.x;\n    const y = v.y;\n    v.x = cos * x - sin * y;\n    v.y = sin * x + cos * y;\n  });\n}\n\nfunction move(world: World) {\n  const dt = world.dtMilli / 1000;\n  world.query({ and: [Transform, Velocity] }).forEach((e) => {\n    const p = World.getComponent(e, Transform);\n    const v = World.getComponent(e, Velocity);\n    p.x += v.x * dt;\n    p.y += v.y * dt;\n  });\n}\n\nfunction drawImg(world: World) {\n  if (!ctx) return;\n  world.query({ and: [Graphic, Transform], or: [Rect] }).forEach((e) => {\n    const g = World.getComponent(e, Graphic);\n    const p = World.getComponent(e, Transform);\n    const r = World.hasComponent(e, Rect) && World.getComponent(e, Rect);\n    const img = new Image();\n    img.src = g.src;\n    const imgWidth = r ? r.width : img.width;\n    const imgHeight = r ? r.height : img.height;\n    const scaleX = imgWidth / img.width;\n    const scaleY = imgHeight / img.height;\n    ctx.transform(scaleX, 0, 0, scaleY, 0, 0);\n    ctx.drawImage(\n      img,\n      (p.x - imgWidth / 2) / scaleX,\n      (p.y - imgHeight / 2) / scaleY,\n    );\n    ctx.transform(1 / scaleX, 0, 0, 1 / scaleY, 0, 0);\n  });\n}\n\nfunction handleButtons(world: World) {\n  world.query({ and: [Button, Transform, Rect] }).forEach((e) => {\n    const p = World.getComponent(e, Transform);\n    const b = World.getComponent(e, Button);\n    const r = World.getComponent(e, Rect);\n    const pressedWithinButton =\n      (mouse.pressPos.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (mouse.pressPos.y - p.y) ** 2 < (r.height / 2) ** 2;\n\n    b.hovered = (mouse.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (mouse.y - p.y) ** 2 < (r.height / 2) ** 2;\n    b.pressed = b.hovered && mouse.isDown && pressedWithinButton;\n    b.clicked = mouse.justReleased && pressedWithinButton &&\n      (mouse.releasePos.x - p.x) ** 2 < (r.width / 2) ** 2 &&\n      (mouse.releasePos.y - p.y) ** 2 < (r.height / 2) ** 2;\n    b.callback(e);\n  });\n}\n\nfunction resetTransform() {\n  if (!ctx) return;\n  ctx.setTransform(1, 0, 0, 1, 0, 0);\n}\n\n// entities\nfunction addGraphic(world: World, src: string, x = 0, y = 0, w = 1, h = 1) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Transform);\n  const g = World.addComponent(e, Graphic);\n  const r = World.addComponent(e, Rect);\n  p.x = x;\n  p.y = y;\n  g.src = src;\n  r.width = w;\n  r.height = h;\n  return e;\n}\n\nfunction addRect(world: World, x: number = 0, y: number = 0) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Transform);\n  World.addComponent(e, Velocity);\n  World.addComponent(e, Rect);\n  const c = World.addComponent(e, Colour);\n  c.fill = \"green\";\n  //c.stroke = \"transparent\";\n  p.x = x;\n  p.y = y;\n  return e;\n}\n\nfunction addButton(\n  world: World,\n  x = 0,\n  y = 0,\n  w = 10,\n  h = 10,\n  cb: (e: entityT) => void = () => {},\n) {\n  const e = world.addEntity();\n  const p = World.addComponent(e, Transform);\n  const r = World.addComponent(e, Rect);\n  const b = World.addComponent(e, Button);\n  World.addComponent(e, Colour);\n  p.x = x;\n  p.y = y;\n  r.width = w;\n  r.height = h;\n  b.callback = cb;\n  return e;\n}\n\nfunction addTimer(\n  world: World,\n  durationMilli: number,\n  callback: (e: entityT) => void = () => {},\n) {\n  const e = world.addEntity();\n  const t = World.addComponent(e, Timer);\n  t.durationMilli = durationMilli;\n  t.callback = callback;\n  return e;\n}\n\ntype vec2 = { x: number; y: number };\nfunction screenToWorld(\n  pointerPos: vec2,\n  cameraPos: vec2,\n  cameraTilt: number,\n  cameraZoom: number,\n): vec2 {\n  const cos = Math.cos(cameraTilt);\n  const sin = Math.sin(cameraTilt);\n  const res = { x: 0, y: 0 };\n  const x = pointerPos.x - config.viewport.width / 2;\n  const y = pointerPos.y - config.viewport.height / 2;\n  res.x = cos * x - sin * y;\n  res.y = sin * x + cos * y;\n  res.x /= cameraZoom;\n  res.y /= cameraZoom;\n  res.x += cameraPos.x;\n  res.y += cameraPos.y;\n  return res;\n}\n\nconst canvas = document.querySelector(\"canvas\");\nconst ctx = canvas?.getContext(\"2d\");\nconst keys: Record<string, boolean> = {};\nconst mouse = {\n  x: 0,\n  y: 0,\n  isDown: false,\n  pressPos: { x: 0, y: 0 },\n  justReleased: false,\n  releasePos: { x: 0, y: 0 },\n};\n\nif (canvas && ctx) {\n  canvas.width = config.viewport.width;\n  canvas.height = config.viewport.height;\n  canvas.style.imageRendering = \"pixelated\";\n  ctx.lineWidth = 0.1;\n\n  document.onkeydown = (e) => {\n    keys[e.key] = true;\n  };\n  document.onkeyup = (e) => {\n    delete keys[e.key];\n  };\n  document.onpointermove = (e) => {\n    const rect = canvas.getBoundingClientRect();\n    mouse.x = e.x - rect.left;\n    mouse.y = e.y - rect.top;\n    if (innerWidth / innerHeight < canvas.width / canvas.height) {\n      mouse.x *= canvas.width / innerWidth;\n      mouse.y *= canvas.width / innerWidth;\n    } else {\n      mouse.x *= canvas.height / innerHeight;\n      mouse.y *= canvas.height / innerHeight;\n    }\n  };\n  document.onpointerdown = () => {\n    mouse.isDown = true;\n    mouse.pressPos.x = mouse.x;\n    mouse.pressPos.y = mouse.y;\n  };\n  document.onpointerup = () => {\n    mouse.isDown = false;\n    mouse.justReleased = true;\n    mouse.releasePos.x = mouse.x;\n    mouse.releasePos.y = mouse.y;\n  };\n\n  document.body.append(canvas);\n\n  const game = new World();\n\n  const player = addRect(game, 0, 0);\n  const r = World.getComponent(player, Rect);\n  r.width = 1;\n  r.height = 1;\n  const camera = World.addComponent(player, Camera);\n  camera.zoom = 30;\n  camera.isActive = true;\n  World.addComponent(player, PlayerControl);\n\n  addGraphic(game, \"./assets/Map_of_MOBA.svg\", 0, 0, 300, 300);\n\n  const mouseRect = addRect(game, 0, 0);\n\n  //addTimer(game, 1000, () => {\n  //  const minion = addRect(game, 0, 0);\n  //  const v = game.getComponent(minion, Velocity);\n  //  const speed = 10;\n  //  const c = Math.cos(-Math.PI / 4);\n  //  const s = Math.sin(-Math.PI / 4);\n  //  v.x = c * speed;\n  //  v.y = s * speed;\n  //});\n\n  const inGameUi = new World();\n\n  addButton(\n    inGameUi,\n    config.viewport.width * 0.9,\n    config.viewport.height * 0.8,\n    config.viewport.height * 0.3,\n    config.viewport.height * 0.3,\n    (e) => {\n      const b = World.getComponent(e, Button);\n      b.clicked && console.log(\"clicked\");\n    },\n  );\n\n  addGraphic(\n    inGameUi,\n    \"./assets/Map_of_MOBA.svg\",\n    config.viewport.width * 0.1,\n    config.viewport.height * 0.2,\n    config.viewport.height * 0.3,\n    config.viewport.height * 0.3,\n  );\n\n  (function update() {\n    drawBg();\n    const p = World.getComponent(mouseRect, Transform);\n    const worldPos = screenToWorld(\n      mouse,\n      World.getComponent(player, Transform),\n      camera.tilt,\n      camera.zoom,\n    );\n    p.x = worldPos.x;\n    p.y = worldPos.y;\n    game.update(\n      handleInput,\n      //handleTimers,\n      handleCamera,\n      drawImg,\n      drawRects,\n      move,\n    );\n    resetTransform();\n    inGameUi.update(\n      drawImg,\n      drawRects,\n      //drawTexts,\n      handleButtons,\n    );\n    mouse.justReleased = false;\n    requestAnimationFrame(update);\n  })();\n}\n"],
  "mappings": "MAAO,IAAMA,EAAN,KAAoB,CACjB,QAAe,CAAC,EAChB,kBACA,KAAO,EAEf,YAAYC,EAA4B,CACtC,KAAK,kBAAoBA,CAC3B,CAEA,KAAM,CACJ,OAAO,KAAK,IACd,CAEA,QAAY,CACV,IAAIC,EACJ,OAAI,KAAK,QAAQ,KAAK,IAAI,EACxBA,EAAM,KAAK,QAAQ,KAAK,IAAI,GAE5BA,EAAM,KAAK,kBAAkB,EAC7B,KAAK,QAAQ,KAAKA,CAAG,GAEvB,KAAK,OACEA,CACT,CAEA,UAAUC,EAAmB,CAC3B,OAAO,KAAK,QAAQ,UAAWC,GAAMA,GAAKD,CAAM,CAClD,CAEA,UAAUE,EAAkB,CAC1B,GAAIA,GAAS,KAAK,KAAM,MAAM,IAAI,MAAM,qBAAqB,EAC7D,IAAMC,EAAU,KAAK,QAAQD,CAAK,EAElC,YAAK,QAAQA,CAAK,EAAI,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAC1D,KAAK,QAAQ,KAAK,QAAQ,OAAS,CAAC,EAAIC,EACxC,KAAK,OACEA,CACT,CAEA,OAAOD,EAAkB,CACvB,GAAIA,GAAS,KAAK,KAAM,MAAM,IAAI,MAAM,qBAAqB,EAC7D,OAAO,KAAK,QAAQA,CAAK,CAC3B,CACF,ECzCO,IAAME,EAAN,MAAMC,CAAiB,CAC5B,OAAe,MAA0B,IAAI,IAC7C,OAAe,MAA6B,IAAI,IAEhD,OAAO,SAA2BC,EAAc,CAC9CD,EAAiB,MAAM,IAAIC,EAAWD,EAAiB,MAAM,IAAI,EACjEA,EAAiB,MAAM,IACrBC,EACA,IAAIC,EAAc,IAAM,OAAO,OAAO,CAAC,EAAGD,CAAS,CAAC,CACtD,CACF,CAEA,OAAO,MAAwBA,EAAc,CAC3C,IAAME,EAAKH,EAAiB,MAAM,IAAIC,CAAS,EAC/C,GAAIE,GAAM,KAAW,MAAM,IAAI,MAAM,2BAA2B,EAChE,OAAOA,CACT,CAEA,OAAO,IAAsBF,EAAiB,CAC5C,OAAQD,EAAiB,MAAM,IAAIC,CAAS,EAAoB,OAAO,CACzE,CAEA,OAAO,OACLA,EACAG,EACG,CACH,OAAQJ,EAAiB,MAAM,IAAIC,CAAS,EAAoB,UAC9DG,CACF,CACF,CAEA,OAAO,IACLH,EACAG,EACG,CACH,OAAQJ,EAAiB,MAAM,IAAIC,CAAS,EAAoB,OAC9DG,CACF,CACF,CAEA,OAAO,IAAsBH,EAAsB,CACjD,OAAQD,EAAiB,MAAM,IAAIC,CAAS,EAAoB,IAAI,CACtE,CAEA,OAAO,SAAkB,CACvB,OAAOD,EAAiB,MAAM,IAChC,CAEA,OAAO,OAAkB,CACvB,OAAOA,EAAiB,MAAM,KAAK,EAAE,QAAQ,CAC/C,CACF,ECjDO,IAAMK,EAAN,MAAMC,CAAc,CACzB,OAAO,OAAS,EAChB,OAAO,KAAO,IAAIC,EAAoB,IAAMD,EAAc,QAAQ,EAElE,OAAO,KAAe,CACpB,OAAOA,EAAc,KAAK,OAAO,CACnC,CAEA,OAAO,UAAUE,EAAyB,CACxC,OAAOF,EAAc,KAAK,UAAUE,CAAM,CAC5C,CAEA,OAAO,OAAOC,EAAwB,CACpC,OAAOH,EAAc,KAAK,UAAUG,CAAK,CAC3C,CACF,ECZO,IAAMC,EAAN,MAAMC,CAAM,CACjB,OAAe,SAAkC,IAAI,IACrD,OAAe,YAAwB,CAAC,EACxC,OAAe,aAA0C,IAAI,IAC7D,OAAe,OAAkB,CAAC,EAClC,OAAe,UAAiD,IAAI,IACpE,OAAe,SAAmC,IAAI,IAEtD,UAAY,EACZ,QAAU,EACV,cAA8B,IAAI,IAElC,aAAc,CACZA,EAAM,OAAO,KAAK,IAAI,CACxB,CAEA,OAAO,cAAwB,CAC7B,IAAMC,EAASC,EAAc,IAAI,EACjC,OAAAF,EAAM,YAAYC,CAAM,EAAI,EAC5BD,EAAM,aAAa,CAAC,EAAE,IAAIC,CAAM,EACzBA,CACT,CAEA,OAAe,aAAaE,EAA4B,CACtD,IAAMC,EAAIJ,EAAM,aAAa,IAAIG,CAAI,EACrC,GAAIC,GAAK,KAAW,CAClB,IAAMC,EAAoB,IAAI,IAC9B,OAAAL,EAAM,aAAa,IAAIG,EAAME,CAAG,EACzBA,CACT,CACA,OAAOD,CACT,CAEA,OAAO,aAAaH,EAAiB,CACnC,QAASK,EAAI,EAAGC,EAAIP,EAAM,OAAO,OAAQM,EAAIC,EAAGD,IAC9CN,EAAM,OAAOM,CAAC,EAAE,aAAaL,CAAM,EAErC,IAAMO,EAAQC,EAAiB,MAAM,EACrC,QAASH,EAAI,EAAGC,EAAIE,EAAiB,QAAQ,EAAGH,EAAIC,EAAGD,IAAK,CAC1D,GAAI,EAAEN,EAAM,YAAYC,CAAM,EAAI,GAAKK,GAAI,SAC3CN,EAAM,YAAYM,CAAC,EAAEL,CAAM,EAC3B,IAAMS,EAAUV,EAAM,WAAWQ,EAAMF,CAAC,CAAC,EACnCK,EAASX,EAAM,UAAUQ,EAAMF,CAAC,CAAC,EACjCM,EAAaD,EAAOA,EAAO,OAAS,CAAC,EAC3CA,EAAOD,EAAQT,CAAM,CAAC,EAAIW,EAC1BF,EAAQE,CAAU,EAAIF,EAAQT,CAAM,CACtC,CACAD,EAAM,aAAaA,EAAM,YAAYC,CAAM,CAAC,EAAE,OAAOA,CAAM,EAC3DD,EAAM,YAAYC,CAAM,EAAI,EAC5BC,EAAc,OAAOA,EAAc,UAAUD,CAAM,CAAC,CACtD,CAEA,OAAe,YAAYY,EAAgB,CACzC,IAAMC,EAAWd,EAAM,UAAU,IAAIa,CAAM,EAC3C,GAAIC,GAAY,KAAW,MAAM,IAAI,MAAM,2BAA2B,EACtE,OAAOA,CACT,CAEA,UAAUb,EAA2B,CACnC,OAAAA,IAAWD,EAAM,aAAa,EAC9B,KAAK,cAAc,IAAIC,CAAM,EACtBA,CACT,CAEA,aAAaA,EAAiB,CAC5B,KAAK,cAAc,OAAOA,CAAM,CAClC,CAEA,aAAaA,EAAiB,CAC5B,GAAI,CAAC,KAAK,cAAc,IAAIA,CAAM,EAChC,MAAM,IAAI,MAAM,UAAUA,CAAM,kBAAkB,CAEtD,CAEA,OAAO,gBAAkCc,EAAc,CAChDf,EAAM,SAAS,IAAIe,CAAS,GAAGf,EAAM,kBAAkBe,CAAS,CACvE,CAEA,OAAO,kBACLA,EACc,CACd,OAAAN,EAAiB,SAASM,CAAS,EACnCf,EAAM,SAAS,IAAIe,EAAW,CAAC,CAAC,EAChCf,EAAM,UAAU,IACdS,EAAiB,MAAMM,CAAS,EAC/B,GACCN,EAAiB,OAAOM,EAAW,KAAK,WAAWA,CAAS,EAAE,CAAC,CAAC,CACpE,EACAf,EAAM,SAAS,IAAIe,EAAW,CAAC,CAAC,EACzBf,CACT,CAEA,OAAO,aACLC,EACAc,EACS,CACT,OAAQf,EAAM,YAAYC,CAAM,EAC9B,GAAKQ,EAAiB,MAAMM,CAAS,GAAK,CAC9C,CAEA,OAAO,aACLd,EACAc,EACG,CAEH,GADAf,EAAM,gBAAgBe,CAAS,EAC3Bf,EAAM,aAAaC,EAAQc,CAAS,EACtC,MAAM,IAAI,MAAM,UAAUd,CAAM,8BAA8B,EAEhED,EAAM,aAAaA,EAAM,YAAYC,CAAM,CAAC,EAAE,OAAOA,CAAM,EAC3DD,EAAM,YAAYC,CAAM,GAAK,GAAKQ,EAAiB,MAAMM,CAAS,EAClEf,EAAM,aAAaA,EAAM,YAAYC,CAAM,CAAC,EAAE,IAAIA,CAAM,EACxD,IAAMe,EAAMP,EAAiB,IAAIM,CAAS,EAC1C,OAAAf,EAAM,WAAWe,CAAS,EAAEd,CAAM,EAAIe,EACtChB,EAAM,UAAUe,CAAS,EAAEC,CAAG,EAAIf,EAC3BQ,EAAiB,IAAIM,CAAS,CACvC,CAEA,OAAe,WAA6BA,EAAc,CACxD,IAAML,EAAUV,EAAM,SAAS,IAAIe,CAAS,EAC5C,GAAIL,GAAW,KAAW,MAAM,IAAI,MAAM,2BAA2B,EACrE,OAAOA,CACT,CAEA,OAAe,UAA4BK,EAAc,CACvD,IAAMJ,EAASX,EAAM,SAAS,IAAIe,CAAS,EAC3C,GAAIJ,GAAU,KAAW,MAAM,IAAI,MAAM,2BAA2B,EACpE,OAAOA,CACT,CAEA,OAAO,gBACLV,EACAc,EACG,CAEH,GADAf,EAAM,gBAAgBe,CAAS,EAC3B,CAACf,EAAM,aAAaC,EAAQc,CAAS,EACvC,MAAM,IAAI,MACR,UAAUd,CAAM,gCAClB,EAEFD,EAAM,aAAaA,EAAM,YAAYC,CAAM,CAAC,EAAE,OAAOA,CAAM,EAC3DD,EAAM,YAAYC,CAAM,GAAK,EAAE,GAAKQ,EAAiB,MAAMM,CAAS,GACpEf,EAAM,aAAaA,EAAM,YAAYC,CAAM,CAAC,EAAE,IAAIA,CAAM,EACxD,IAAMS,EAAUV,EAAM,WAAWe,CAAS,EACpCJ,EAASX,EAAM,UAAUe,CAAS,EAClCE,EAAUR,EAAiB,OAAOM,EAAWL,EAAQT,CAAM,CAAC,EAC5DW,EAAaD,EAAOA,EAAO,OAAS,CAAC,EAC3C,OAAAA,EAAOD,EAAQT,CAAM,CAAC,EAAIW,EAC1BF,EAAQE,CAAU,EAAIF,EAAQT,CAAM,EAC7BgB,CACT,CAEA,OAAO,aACLhB,EACAc,EACG,CACH,GAAI,CAACf,EAAM,aAAaC,EAAQc,CAAS,EACvC,MAAM,IAAI,MACR,UAAUd,CAAM,gCAClB,EAEF,OAAOQ,EAAiB,IACtBM,EACAf,EAAM,WAAWe,CAAS,EAAEd,CAAM,CACpC,CACF,CAEA,UAAUiB,EAAiC,CACzC,QAASZ,EAAI,EAAGC,EAAIW,EAAI,OAAQZ,EAAIC,EAAGD,IAAKY,EAAIZ,CAAC,EAAE,IAAI,EACvD,KAAK,QAAU,YAAY,IAAI,EAAI,KAAK,UACxC,KAAK,WAAa,KAAK,OACzB,CAEA,MAAMa,EAA0B,CAC9B,IAAIC,EAAU,EAAGC,EAAS,EAAGC,EAAU,EACvC,GAAIH,EAAM,IACR,QAAS,EAAI,EAAGZ,EAAIY,EAAM,IAAI,OAAQ,EAAIZ,EAAG,IAC3Ca,GAAW,GAAKX,EAAiB,MAAMU,EAAM,IAAI,CAAC,CAAC,EAGvD,GAAIA,EAAM,GACR,QAAS,EAAI,EAAGZ,EAAIY,EAAM,GAAG,OAAQ,EAAIZ,EAAG,IAC1Cc,GAAU,GAAKZ,EAAiB,MAAMU,EAAM,GAAG,CAAC,CAAC,EAGrD,GAAIA,EAAM,IACR,QAAS,EAAI,EAAGZ,EAAIY,EAAM,IAAI,OAAQ,EAAIZ,EAAG,IAC3Ce,GAAW,GAAKb,EAAiB,MAAMU,EAAM,IAAI,CAAC,CAAC,EAGvD,IAAMI,EAAM,CAAC,EACb,QACMC,EAAaxB,EAAM,aAAa,KAAK,EAAE,QAAQ,EACjDO,EAAIiB,EAAW,OACflB,EAAI,EACJF,EAAIoB,EAAWlB,CAAC,EAClBA,EAAIC,EACJD,IAAKF,EAAIoB,EAAWlB,CAAC,GAEhBF,EAAIgB,IAAYA,IAAYhB,EAAIiB,GAAU,IAAMjB,EAAIkB,IAAY,GACnEC,EAAI,KAAK,GAAG,KAAK,cAAc,aAAavB,EAAM,aAAaI,CAAC,CAAC,CAAC,EAGtE,OAAOmB,CACT,CAEA,aAAsB,CACpB,OAAO,KAAK,cAAc,IAC5B,CACF,ECvNA,IAAAE,EAAA,CACC,SAAY,CACX,MAAS,IACT,OAAU,GACX,EACA,OAAU,CACT,MAAS,EACV,CACD,ECMA,IAAMC,EAAY,CAChB,EAAG,EACH,EAAG,CACL,EACMC,EAAW,CACf,EAAG,EACH,EAAG,CACL,EACMC,EAAgB,CAAC,EACjBC,EAAS,CACb,KAAM,EACN,KAAM,EACN,SAAU,EACZ,EACMC,EAAO,CACX,MAAO,EACP,OAAQ,CACV,EACMC,EAAU,CACd,IAAK,EACP,EACMC,EAAS,CACb,QAAS,GACT,QAAS,GACT,QAAS,GACT,SAAWC,GAAe,CAAC,CAC7B,EACMC,EAAS,CACb,KAAM,QACN,OAAQ,OACV,EAkDA,SAASC,EACPC,EACAC,EACAC,EACAC,EACA,CACA,IAAMC,EAAOJ,EAAI,UACXK,EAAOL,EAAI,YACjBA,EAAI,UAAYG,EAAE,KAClBH,EAAI,YAAcG,EAAE,OACpB,IAAMG,EAAO,IAAI,OACf,KAAKL,EAAE,EAAIC,EAAE,MAAQ,EAAG,IACtBD,EAAE,EAAIC,EAAE,OAAS,EACnB,MAAMA,EAAE,KAAK,MAAMA,EAAE,MAAM,MAAM,CAACA,EAAE,KAAK,IAC3C,EACAF,EAAI,KAAKM,CAAI,EACbN,EAAI,OAAOM,CAAI,EACfN,EAAI,UAAYI,EAChBJ,EAAI,YAAcK,CACpB,CAEA,SAASE,EAAUC,EAAc,CAC1BR,GACLQ,EAAM,MAAM,CAAE,IAAK,CAACC,EAAWC,EAAMC,CAAM,CAAE,CAAC,EAAE,QAASC,GAAM,CAC7D,IAAMX,EAAIY,EAAM,aAAaD,EAAGH,CAAS,EACnCP,EAAIW,EAAM,aAAaD,EAAGF,CAAI,EAC9BP,EAAIU,EAAM,aAAaD,EAAGD,CAAM,EACtCZ,EAAcC,EAAKC,EAAGC,EAAGC,CAAC,CAC5B,CAAC,CACH,CAEA,SAASW,GAAS,CAChB,GAAI,CAACd,EAAK,OACV,IAAMe,EAAMf,EAAI,UAChBA,EAAI,UAAY,UAChBA,EAAI,SAAS,EAAG,EAAGA,EAAI,OAAO,MAAOA,EAAI,OAAO,MAAM,EACtDA,EAAI,UAAYe,CAClB,CAEA,SAASC,EAAYR,EAAc,CACjCA,EAAM,MAAM,CAAE,IAAK,CAACS,EAAeC,CAAQ,EAAG,GAAI,CAACC,CAAM,CAAE,CAAC,EAAE,QAASP,GAAM,CAC3E,IAAMQ,EAAIP,EAAM,aAAaD,EAAGM,CAAQ,EACxCE,EAAE,EAAI,EACNA,EAAE,EAAI,GACFC,EAAK,GAAQA,EAAK,UACpBD,EAAE,KAEAC,EAAK,GAAQA,EAAK,YACpBD,EAAE,KAEAC,EAAK,GAAQA,EAAK,YACpBD,EAAE,KAEAC,EAAK,GAAQA,EAAK,aACpBD,EAAE,IAEJ,IAAME,GAAOF,EAAE,GAAK,EAAIA,EAAE,GAAK,IAAM,GAMrC,GALIE,GAAO,IACTF,EAAE,EAAIA,EAAE,EAAIE,EAAMC,EAAO,OAAO,MAChCH,EAAE,EAAIA,EAAE,EAAIE,EAAMC,EAAO,OAAO,OAG9B,CAACV,EAAM,aAAaD,EAAGO,CAAM,EAAG,OACpC,IAAMhB,EAAIU,EAAM,aAAaD,EAAGO,CAAM,EAChCK,EAAKhB,EAAM,QAAU,IACvBa,EAAK,IAAMlB,EAAE,MAAQ,EAAIqB,GACzBH,EAAK,IAAMlB,EAAE,MAAQ,EAAIqB,EAC/B,CAAC,CACH,CAEA,SAASC,EAAajB,EAAc,CAClCA,EAAM,MAAM,CAAE,IAAK,CAACW,EAAQV,EAAWS,CAAQ,CAAE,CAAC,EAAE,QAASN,GAAM,CACjE,IAAMT,EAAIU,EAAM,aAAaD,EAAGO,CAAM,EACtC,GAAI,CAACnB,GAAO,CAACG,EAAE,SAAU,OACzB,IAAMF,EAAIY,EAAM,aAAaD,EAAGH,CAAS,EACnCiB,EAAM,KAAK,IAAIvB,EAAE,IAAI,EACrBwB,EAAM,KAAK,IAAIxB,EAAE,IAAI,EACrByB,EAAa,CAAC3B,EAAE,EAAIE,EAAE,KACtB0B,EAAa,CAAC5B,EAAE,EAAIE,EAAE,KAC5BH,EAAI,UACF2B,EAAMxB,EAAE,KACR,CAACuB,EAAMvB,EAAE,KACTuB,EAAMvB,EAAE,KACRwB,EAAMxB,EAAE,KAERwB,EAAMC,EAAaF,EAAMG,EAAa7B,EAAI,OAAO,MAAQ,GACzD,CAAC0B,EAAME,EAAaD,EAAME,EAAa7B,EAAI,OAAO,OAAS,EAC7D,EACA,IAAMoB,EAAIP,EAAM,aAAaD,EAAGM,CAAQ,EAClCY,EAAIV,EAAE,EACNW,EAAIX,EAAE,EACZA,EAAE,EAAIO,EAAMG,EAAIJ,EAAMK,EACtBX,EAAE,EAAIM,EAAMI,EAAIH,EAAMI,CACxB,CAAC,CACH,CAEA,SAASC,EAAKxB,EAAc,CAC1B,IAAMgB,EAAKhB,EAAM,QAAU,IAC3BA,EAAM,MAAM,CAAE,IAAK,CAACC,EAAWS,CAAQ,CAAE,CAAC,EAAE,QAAS,GAAM,CACzD,IAAMjB,EAAIY,EAAM,aAAa,EAAGJ,CAAS,EACnCW,EAAIP,EAAM,aAAa,EAAGK,CAAQ,EACxCjB,EAAE,GAAKmB,EAAE,EAAII,EACbvB,EAAE,GAAKmB,EAAE,EAAII,CACf,CAAC,CACH,CAEA,SAASS,EAAQzB,EAAc,CACxBR,GACLQ,EAAM,MAAM,CAAE,IAAK,CAAC0B,EAASzB,CAAS,EAAG,GAAI,CAACC,CAAI,CAAE,CAAC,EAAE,QAASE,GAAM,CACpE,IAAMuB,EAAItB,EAAM,aAAaD,EAAGsB,CAAO,EACjCjC,EAAIY,EAAM,aAAaD,EAAGH,CAAS,EACnCP,EAAIW,EAAM,aAAaD,EAAGF,CAAI,GAAKG,EAAM,aAAaD,EAAGF,CAAI,EAC7D0B,EAAM,IAAI,MAChBA,EAAI,IAAMD,EAAE,IACZ,IAAME,EAAWnC,EAAIA,EAAE,MAAQkC,EAAI,MAC7BE,EAAYpC,EAAIA,EAAE,OAASkC,EAAI,OAC/BG,EAASF,EAAWD,EAAI,MACxBI,EAASF,EAAYF,EAAI,OAC/BpC,EAAI,UAAUuC,EAAQ,EAAG,EAAGC,EAAQ,EAAG,CAAC,EACxCxC,EAAI,UACFoC,GACCnC,EAAE,EAAIoC,EAAW,GAAKE,GACtBtC,EAAE,EAAIqC,EAAY,GAAKE,CAC1B,EACAxC,EAAI,UAAU,EAAIuC,EAAQ,EAAG,EAAG,EAAIC,EAAQ,EAAG,CAAC,CAClD,CAAC,CACH,CAEA,SAASC,EAAcjC,EAAc,CACnCA,EAAM,MAAM,CAAE,IAAK,CAACkC,EAAQjC,EAAWC,CAAI,CAAE,CAAC,EAAE,QAASE,GAAM,CAC7D,IAAMX,EAAIY,EAAM,aAAaD,EAAGH,CAAS,EACnCkC,EAAI9B,EAAM,aAAaD,EAAG8B,CAAM,EAChCxC,EAAIW,EAAM,aAAaD,EAAGF,CAAI,EAC9BkC,GACHC,EAAM,SAAS,EAAI5C,EAAE,IAAM,GAAKC,EAAE,MAAQ,IAAM,IAChD2C,EAAM,SAAS,EAAI5C,EAAE,IAAM,GAAKC,EAAE,OAAS,IAAM,EAEpDyC,EAAE,SAAWE,EAAM,EAAI5C,EAAE,IAAM,GAAKC,EAAE,MAAQ,IAAM,IACjD2C,EAAM,EAAI5C,EAAE,IAAM,GAAKC,EAAE,OAAS,IAAM,EAC3CyC,EAAE,QAAUA,EAAE,SAAWE,EAAM,QAAUD,EACzCD,EAAE,QAAUE,EAAM,cAAgBD,IAC/BC,EAAM,WAAW,EAAI5C,EAAE,IAAM,GAAKC,EAAE,MAAQ,IAAM,IAClD2C,EAAM,WAAW,EAAI5C,EAAE,IAAM,GAAKC,EAAE,OAAS,IAAM,EACtDyC,EAAE,SAAS/B,CAAC,CACd,CAAC,CACH,CAEA,SAASkC,GAAiB,CACnB9C,GACLA,EAAI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CACnC,CAGA,SAAS+C,EAAWvC,EAAcwC,EAAalB,EAAI,EAAGC,EAAI,EAAGkB,EAAI,EAAGC,EAAI,EAAG,CACzE,IAAMtC,EAAIJ,EAAM,UAAU,EACpBP,EAAIY,EAAM,aAAaD,EAAGH,CAAS,EACnC0B,EAAItB,EAAM,aAAaD,EAAGsB,CAAO,EACjChC,EAAIW,EAAM,aAAaD,EAAGF,CAAI,EACpC,OAAAT,EAAE,EAAI6B,EACN7B,EAAE,EAAI8B,EACNI,EAAE,IAAMa,EACR9C,EAAE,MAAQ+C,EACV/C,EAAE,OAASgD,EACJtC,CACT,CAEA,SAASuC,EAAQ3C,EAAcsB,EAAY,EAAGC,EAAY,EAAG,CAC3D,IAAMnB,EAAIJ,EAAM,UAAU,EACpBP,EAAIY,EAAM,aAAaD,EAAGH,CAAS,EACzCI,EAAM,aAAaD,EAAGM,CAAQ,EAC9BL,EAAM,aAAaD,EAAGF,CAAI,EAC1B,IAAMP,EAAIU,EAAM,aAAaD,EAAGD,CAAM,EACtC,OAAAR,EAAE,KAAO,QAETF,EAAE,EAAI6B,EACN7B,EAAE,EAAI8B,EACCnB,CACT,CAEA,SAASwC,EACP5C,EACAsB,EAAI,EACJC,EAAI,EACJkB,EAAI,GACJC,EAAI,GACJG,EAA2B,IAAM,CAAC,EAClC,CACA,IAAMzC,EAAIJ,EAAM,UAAU,EACpBP,EAAIY,EAAM,aAAaD,EAAGH,CAAS,EACnCP,EAAIW,EAAM,aAAaD,EAAGF,CAAI,EAC9BiC,EAAI9B,EAAM,aAAaD,EAAG8B,CAAM,EACtC,OAAA7B,EAAM,aAAaD,EAAGD,CAAM,EAC5BV,EAAE,EAAI6B,EACN7B,EAAE,EAAI8B,EACN7B,EAAE,MAAQ+C,EACV/C,EAAE,OAASgD,EACXP,EAAE,SAAWU,EACNzC,CACT,CAeA,SAAS0C,EACPC,EACAC,EACAC,EACAC,EACM,CACN,IAAMC,EAAM,KAAK,IAAIF,CAAU,EACzBG,EAAM,KAAK,IAAIH,CAAU,EACzBI,EAAM,CAAE,EAAG,EAAG,EAAG,CAAE,EACnBC,EAAIP,EAAW,EAAIQ,EAAO,SAAS,MAAQ,EAC3CC,EAAIT,EAAW,EAAIQ,EAAO,SAAS,OAAS,EAClD,OAAAF,EAAI,EAAIF,EAAMG,EAAIF,EAAMI,EACxBH,EAAI,EAAID,EAAME,EAAIH,EAAMK,EACxBH,EAAI,GAAKH,EACTG,EAAI,GAAKH,EACTG,EAAI,GAAKL,EAAU,EACnBK,EAAI,GAAKL,EAAU,EACZK,CACT,CAEA,IAAMI,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAMD,GAAQ,WAAW,IAAI,EAC7BE,EAAgC,CAAC,EACjCC,EAAQ,CACZ,EAAG,EACH,EAAG,EACH,OAAQ,GACR,SAAU,CAAE,EAAG,EAAG,EAAG,CAAE,EACvB,aAAc,GACd,WAAY,CAAE,EAAG,EAAG,EAAG,CAAE,CAC3B,EAEA,GAAIH,GAAUC,EAAK,CACjBD,EAAO,MAAQF,EAAO,SAAS,MAC/BE,EAAO,OAASF,EAAO,SAAS,OAChCE,EAAO,MAAM,eAAiB,YAC9BC,EAAI,UAAY,GAEhB,SAAS,UAAaG,GAAM,CAC1BF,EAAKE,EAAE,GAAG,EAAI,EAChB,EACA,SAAS,QAAWA,GAAM,CACxB,OAAOF,EAAKE,EAAE,GAAG,CACnB,EACA,SAAS,cAAiBA,GAAM,CAC9B,IAAMC,EAAOL,EAAO,sBAAsB,EAC1CG,EAAM,EAAIC,EAAE,EAAIC,EAAK,KACrBF,EAAM,EAAIC,EAAE,EAAIC,EAAK,IACjB,WAAa,YAAcL,EAAO,MAAQA,EAAO,QACnDG,EAAM,GAAKH,EAAO,MAAQ,WAC1BG,EAAM,GAAKH,EAAO,MAAQ,aAE1BG,EAAM,GAAKH,EAAO,OAAS,YAC3BG,EAAM,GAAKH,EAAO,OAAS,YAE/B,EACA,SAAS,cAAgB,IAAM,CAC7BG,EAAM,OAAS,GACfA,EAAM,SAAS,EAAIA,EAAM,EACzBA,EAAM,SAAS,EAAIA,EAAM,CAC3B,EACA,SAAS,YAAc,IAAM,CAC3BA,EAAM,OAAS,GACfA,EAAM,aAAe,GACrBA,EAAM,WAAW,EAAIA,EAAM,EAC3BA,EAAM,WAAW,EAAIA,EAAM,CAC7B,EAEA,SAAS,KAAK,OAAOH,CAAM,EAE3B,IAAMM,EAAO,IAAIC,EAEXC,EAASC,EAAQH,EAAM,EAAG,CAAC,EAC3BI,EAAIH,EAAM,aAAaC,EAAQG,CAAI,EACzCD,EAAE,MAAQ,EACVA,EAAE,OAAS,EACX,IAAME,EAASL,EAAM,aAAaC,EAAQK,CAAM,EAChDD,EAAO,KAAO,GACdA,EAAO,SAAW,GAClBL,EAAM,aAAaC,EAAQM,CAAa,EAExCC,EAAWT,EAAM,2BAA4B,EAAG,EAAG,IAAK,GAAG,EAE3D,IAAMU,EAAYP,EAAQH,EAAM,EAAG,CAAC,EAY9BW,EAAW,IAAIV,EAErBW,EACED,EACAnB,EAAO,SAAS,MAAQ,GACxBA,EAAO,SAAS,OAAS,GACzBA,EAAO,SAAS,OAAS,GACzBA,EAAO,SAAS,OAAS,GACxBM,GAAM,CACKG,EAAM,aAAaH,EAAGe,CAAM,EACpC,SAAW,QAAQ,IAAI,SAAS,CACpC,CACF,EAEAJ,EACEE,EACA,2BACAnB,EAAO,SAAS,MAAQ,GACxBA,EAAO,SAAS,OAAS,GACzBA,EAAO,SAAS,OAAS,GACzBA,EAAO,SAAS,OAAS,EAC3B,EAEC,SAASsB,GAAS,CACjBC,EAAO,EACP,IAAMC,EAAIf,EAAM,aAAaS,EAAWO,CAAS,EAC3CC,EAAWnC,EACfc,EACAI,EAAM,aAAaC,EAAQe,CAAS,EACpCX,EAAO,KACPA,EAAO,IACT,EACAU,EAAE,EAAIE,EAAS,EACfF,EAAE,EAAIE,EAAS,EACflB,EAAK,OACHmB,EAEAC,EACAC,EACAC,EACAC,CACF,EACAC,EAAe,EACfb,EAAS,OACPU,EACAC,EAEAG,CACF,EACA5B,EAAM,aAAe,GACrB,sBAAsBiB,CAAM,CAC9B,EAAG,CACL",
  "names": ["ObjectPool", "objectConstructor", "obj", "object", "v", "index", "removed", "ComponentManager", "_ComponentManager", "component", "ObjectPool", "id", "index", "EntityManager", "_EntityManager", "ObjectPool", "entity", "index", "World", "_World", "entity", "EntityManager", "mask", "a", "set", "i", "l", "types", "ComponentManager", "indices", "owners", "backEntity", "compId", "removeFn", "component", "idx", "removed", "fns", "query", "andMask", "orMask", "notMask", "res", "archetypes", "config_default", "Transform", "Velocity", "PlayerControl", "Camera", "Rect", "Graphic", "Button", "_", "Colour", "drawRectangle", "ctx", "p", "r", "c", "oldF", "oldS", "rect", "drawRects", "world", "Transform", "Rect", "Colour", "e", "World", "drawBg", "old", "handleInput", "PlayerControl", "Velocity", "Camera", "v", "keys", "mag", "config_default", "dt", "handleCamera", "sin", "cos", "translateX", "translateY", "x", "y", "move", "drawImg", "Graphic", "g", "img", "imgWidth", "imgHeight", "scaleX", "scaleY", "handleButtons", "Button", "b", "pressedWithinButton", "mouse", "resetTransform", "addGraphic", "src", "w", "h", "addRect", "addButton", "cb", "screenToWorld", "pointerPos", "cameraPos", "cameraTilt", "cameraZoom", "cos", "sin", "res", "x", "config_default", "y", "canvas", "ctx", "keys", "mouse", "e", "rect", "game", "World", "player", "addRect", "r", "Rect", "camera", "Camera", "PlayerControl", "addGraphic", "mouseRect", "inGameUi", "addButton", "Button", "update", "drawBg", "p", "Transform", "worldPos", "handleInput", "handleCamera", "drawImg", "drawRects", "move", "resetTransform", "handleButtons"]
}
