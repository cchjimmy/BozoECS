var bozoecs=(()=>{var s=Object.defineProperty;var l=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var u=Object.prototype.hasOwnProperty;var a=(e,t)=>{for(var n in t)s(e,n,{get:t[n],enumerable:!0})},c=(e,t,n,r)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of p(t))!u.call(e,i)&&i!==n&&s(e,i,{get:()=>t[i],enumerable:!(r=l(t,i))||r.enumerable});return e};var m=e=>c(s({},"__esModule",{value:!0}),e);var A={};a(A,{addComponent:()=>E,component:()=>C,entity:()=>g,filter:()=>k,getComponent:()=>y,getEntityPointer:()=>d,getResults:()=>M,removeComponent:()=>G,removeEntity:()=>h,systemGroup:()=>I,world:()=>x});function x(...e){return(...t)=>{let n={components:{},indexMap:new Map,nextIdx:0,filters:new Array(t.length),componentMasks:{}};for(let r=0;r<e.length;++r)n.components[e[r].id]=[];for(let r=0;r<t.length;++r)n.filters[r]={mask:t[r],results:new Set};return n}}function g(){return parseInt(Math.random()*2**64)}function h(e,t){let n=0;for(let r=0;r<e.components.length;r++)e.components[r]&&e.components[r][t]&&(n+=r);for(let r=0;r<e.filters.length;r++)e.filters[r].mask&n&&e.filters[r].results.delete(t)}function d(e,t){return e.indexMap.get(t)}function k(...e){let t=0;for(let n=0;n<e.length;n++)t+=e[n].id;return t}function M(e,t){for(let n=0;n<e.filters.length;++n)if(e.filters[n].mask==t)return e.filters[n].results}function I(...e){return(...t)=>{for(let n=0;n<e.length;++n)e[n](...t)}}var v=function*(){let e=1;for(;;)yield e,e<<=1}();function C(e){return{id:v.next().value,properties:e}}function E(e,t,n){let r=e.indexMap.get(t)??(()=>{let o=e.nextIdx++;return e.indexMap.set(t,o),o})(),i=e.components[n.id][r]??={};for(let o in n.properties)i[o]=n.properties[o];let f=e.componentMasks[r]|=n.id;for(let o=0;o<e.filters.length;o++)e.filters[o].mask&~f||e.filters[o].results.add(t);return i}function G(e,t,n){let r=e.indexMap.get(t);e.componentMasks[r]&=~n.id;for(let i=0;i<e.filters.length;i++)e.filters[i].mask&n.id&&e.filters[i].results.delete(t)}function y(e,t,n){return e.components[n.id][t]}return m(A);})();
